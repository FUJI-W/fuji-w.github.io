{"config": {"lang": ["en"], "separator": "[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+", "pipeline": ["stemmer"]}, "docs": [{"location": "", "title": "Welcome, my friend", "text": ""}, {"location": "reading/book/the_book_of_shaders/", "title": "The Book of Shaders", "text": "<p>The Book of Shaders</p>"}, {"location": "reading/book/unity_shader_new/", "title": "Unity Shader\u5165\u95e8\u7cbe\u8981", "text": "<p>\u4f5c\u8005\uff1a\u51af\u4e50\u4e50</p>"}, {"location": "reading/paper/", "title": "\u8bba\u6587\u7b14\u8bb0", "text": "<p>Readpaper Homepage</p>"}, {"location": "reading/paper/SIGGRAPH2022_dual_ocnn/", "title": "Dual Octree Graph Networks for Learning Adaptive Volumetric Shape Representations", "text": "<p>github |  bilibili | Pengshuai Wang - Homepage</p>"}, {"location": "reading/paper/SIGGRAPH2022_dual_ocnn/#_1", "title": "\u6982\u8981", "text": ""}, {"location": "reading/paper/SIGGRAPH2022_dual_ocnn/#key-ideas", "title": "Key Ideas", "text": "<ul> <li>\u4f7f\u7528\u516b\u53c9\u6811\u6765\u8868\u793a\u70b9\u4e91\u548c\u4f53\u7d20\u7f51\u683c \u3002</li> <li>\u6839\u636e\u5360\u6709\u7387\u5bf9\u7a7a\u95f4\u505a\u81ea\u9002\u5e94\u5212\u5206\u3002</li> <li>\u901a\u8fc7\u56fe\u7f51\u7edc\u5728\u5bf9\u5076\u516b\u53c9\u6811\u56fe\u4e0a\u505a\u7279\u5f81\u5b66\u4e60 \u3002</li> <li>\u539f\u6709\u7684\u4e09\u7ef4\u5377\u79ef\u65b9\u6cd5\u662f\u5bf9\u540c\u4e00\u5206\u8fa8\u7387\u7684\u7279\u5f81\u505a\u5377\u79ef\uff0c\u800c\u516b\u53c9\u6811\u4e2d\u6bcf\u4e00\u4e2a\u7279\u5f81\u4e0e\u5176\u9886\u57df\u7684\u7279\u5f81\u5206\u8fa8\u7387\u6709\u53ef\u80fd\u662f\u4e0d\u540c\u7684\uff0c\u56e0\u6b64\u5f15\u5165\u56fe\u7f51\u7edc\u8fdb\u884c\u7279\u5f81\u5b66\u4e60\u3002</li> </ul>"}, {"location": "reading/paper/SIGGRAPH2022_dual_ocnn/#dual-octree-graph", "title": "Dual Octree Graph", "text": "<ul> <li>\u516b\u53c9\u6811 \uff1a\u7ed9\u5b9a\u4e00\u4e2a3D\u5f62\u72b6\uff0c\u53ef\u4ee5\u901a\u8fc7\u5bf9\u5176\u5360\u7528\u7a7a\u95f4\u4e0e\u516b\u53c9\u6811\u8282\u70b9\u76f8\u4ea4\u7684\u8282\u70b9\u8fdb\u884c\u9012\u5f52\u7ec6\u5206\u6765\u6784\u5efa\u516b\u53c9\u6811\uff0c\u76f4\u5230\u8fbe\u5230\u6307\u5b9a\u7684\u6700\u5927\u6811\u6df1\u5ea6\u3002\u516b\u53c9\u6811\u5728\u63a5\u8fd1\u8868\u9762\u5904\u5206\u914d\u66f4\u7ec6\u7684\u4f53\u7d20\uff0c\u800c\u5728\u8868\u9762\u8fdc\u79bb\u5904\u5206\u914d\u66f4\u7c97\u7684\u4f53\u7d20\u3002\u516b\u53c9\u6811\u7684\u53f6\u8282\u70b9\u5f62\u6210\u4e863D\u4f53\u79ef\u7684\u5b8c\u6574\u5206\u533a\u3002</li> <li>\u5bf9\u5076\u516b\u53c9\u6811\u56fe \uff1a\u516b\u53c9\u6811\u7684\u5bf9\u5076\u516b\u53c9\u6811\u56fe\u662f\u901a\u8fc7 \u8fde\u63a5\u5177\u6709\u4e0d\u540c\u5206\u8fa8\u7387\u7684\u6240\u6709\u9762\u76f8\u90bb(face-adjacent)\u7684\u516b\u53c9\u6811\u53f6\u8282\u70b9\u5f62\u6210\u7684 \u3002</li> </ul>"}, {"location": "reading/paper/SIGGRAPH2022_dual_ocnn/#graph-convolution-on-dual-octrees", "title": "Graph Convolution on Dual Octrees", "text": "<ul> <li>Message passing \u56fe\u5377\u79ef \uff1a\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5bf9\u4efb\u610f\u4e00\u4e2a\u70b9 \\(i\\)\uff0c\u53d6\u5176\u9886\u57df\u7684\u6240\u6709\u70b9 \\(N_{i}\\)\uff0c\u8bb0\u70b9 \\(i\\) \u548c\u70b9 \\(j\\) \u7684\u504f\u5dee\u4e3a \\(\\Delta{p_{ij}}\\) \uff0c\u5b9a\u4e49\u6743\u91cd\u51fd\u6570 \\(W(\\cdot)\\)\uff0c \\(F_{i}\\) \u8868\u793a \\(i\\) \u70b9\u7684\u7279\u5f81\u503c\uff0c\u5219 message passing \u7684\u8fc7\u7a0b\u53ef\u8868\u793a\u4e3a \\(F_i=\\sum_{j\\in N_i}W(\\Delta p_{ij})\\times F_j\\) \u3002</li> </ul> <ul> <li>\u672c\u6587\u63d0\u51fa\u7684\u56fe\u5377\u79ef \uff1a\u5bf9\u5076\u516b\u53c9\u6811\u56fe\u4e2d\u5404\u7ed3\u70b9\u7684\u4f4d\u7f6e\u5173\u7cfb \\(\\Delta p_{ij}\\) \u53ea\u6709\u6709\u9650\u4e2a\u503c\uff0c\u5373\u6743\u91cd\u51fd\u6570 \\(W(\\cdot)\\) \u7684\u5b9a\u4e49\u57df\u548c\u503c\u57df\u90fd\u662f\u6709\u9650\u7684\uff0c\u56e0\u6b64\uff0c\u4f5c\u8005\u76f4\u63a5\u5c06\u6743\u91cd\u51fd\u6570 \\(W(\\Delta p_{ij})\\) \u5b9a\u4e49\u4e3a\u4e00\u4e2a\u77e9\u9635 \\(W\\)\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5c06 \\(\\Delta p_{ij}\\) \u7684\u53d6\u503c\u7b80\u5316\u4e3a \u4e0a\u4e0b\u5de6\u53f3\u524d\u540e\u4e0e\u81ea\u8eab \u4e03\u4e2a\u53d6\u503c\u3002</li> </ul>"}, {"location": "reading/paper/SIGGRAPH2022_dual_ocnn/#multiscale-features-in-convolutions", "title": "Multiscale Features in Convolutions", "text": "<ul> <li>\u672c\u6587\u63d0\u51fa\u7684\u56fe\u5377\u79ef\u7ed3\u6784\u7684\u4f18\u8d8a\u6027 \uff1a \u591a\u5c3a\u5ea6\u7684\u7279\u6027 \u3002\u4e00\u822c\u7684\u4e09\u7ef4\u7a00\u758f\u5377\u79ef\uff0c\u6bcf\u6b21\u5377\u79ef\u64cd\u4f5c\u90fd\u662f\u5bf9\u540c\u4e00\u5206\u8fa8\u7387\u7684\u7279\u5f81\u505a\u8fd0\u7b97\uff0c\u5982O-CNN\uff1b\u800cDuel O-GNN\u6bcf\u4e00\u6b21\u8fd0\u7b97\u65f6\u4e0d\u540c\u5206\u8fa8\u7387\u7684\u7279\u5f81\u90fd\u53c2\u4e0e\u4e86\u8fd0\u7b97\uff0c\u6269\u5927\u4e86\u611f\u53d7\u91ce\uff0c\u5177\u6709\u66f4\u5f3a\u7684\u5168\u5c40\u6027\u3002</li> </ul>"}, {"location": "reading/paper/SIGGRAPH2022_dual_ocnn/#_2", "title": "\u8be6\u89e3", "text": ""}, {"location": "reading/paper/SIGGRAPH2022_dual_ocnn/#_3", "title": "\u52a8\u673a", "text": "<p>\u4e09\u7ef4\u51e0\u4f55\u7684 \u4f53\u79ef\u573a \uff08Volumetric field\uff09\u8868\u793a\uff0c\u5982SDF\u3001occupancy field\uff0c\u88ab\u5e7f\u6cdb\u5730\u5e94\u7528\u4e8e\u4e09\u7ef4\u5efa\u6a21\u4e0e\u91cd\u5efa\u4efb\u52a1\uff0c\u6700\u8fd1\u4e5f\u5728\u57fa\u4e8e\u5b66\u4e60\u7684\u7b97\u6cd5\u4e2d\u4f53\u73b0\u51fa\u4f18\u52bf\u3002\u7136\u800c\uff0c\u5f00\u53d1\u4e00\u79cd\u6709\u6548\u7684\u795e\u7ecf\u4f53\u79ef\u573a\u8868\u793a\u65b9\u6cd5\u4ee5\u53ca\u76f8\u5e94\u7684\u4e09\u7ef4\u5f62\u72b6\u751f\u6210\u548c\u91cd\u5efa\u7684\u5b66\u4e60\u65b9\u6848\uff08learning scheme\uff09\u4ecd\u7136\u662f\u4e00\u4e2a\u60ac\u800c\u672a\u51b3\u7684\u95ee\u9898\u3002</p> <p>\u5df2\u6709\u7684\u65b9\u6848\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u79cd\uff0c</p> <ul> <li> <p>Full-Voxel-based CNNs \u662f2D\u56fe\u50cf\u57df\u7684\u64cd\u4f5c\u52303D\u7a7a\u95f4\u57df\u7684\u81ea\u7136\u62d3\u5c55\uff0c\u4f46\u5b58\u50a8\u4e0e\u8ba1\u7b97\u6548\u7387\u4f4e\uff1b</p> </li> <li> <p>Sparse-Voxel-based CNNs \u4ec5\u5173\u6ce8\u975e\u7a7a\u7684\u4f53\u7d20\uff0c\u63d0\u9ad8\u4e86\u6548\u7387\uff0c\u4f46\u5f88\u96be\u8f93\u51fa\u8fde\u7eed\u66f2\u9762\uff08\u7279\u522b\u662f\u5bf9\u4e8e\u771f\u5b9e\u573a\u666f\u7684\u8f93\u5165\uff0c\u5982\u6b8b\u7f3a\u70b9\u4e91\u6570\u636e\uff09\uff0c\u8fd9\u662f\u56e0\u4e3a\u9884\u6d4b\u7a7a\u4f53\u7d20\u7684\u4f4d\u7f6e\u672c\u8eab\u5bf9\u4e8e\u4e09\u7ef4\u5f62\u72b6\u751f\u6210\u548c\u91cd\u5efa\u4efb\u52a1\u6765\u8bf4\u5c31\u662f\u4e2a\u96be\u95ee\u9898\u3002</p> </li> <li> <p>Coordinate-based MLPs \u4f7f\u7528\u5355\u4e2aMLP\u8868\u793a\u573a\u666f/\u7269\u4f53\u7684\u4f4d\u7f6e\u4e0e\u573a\u503c\u7684\u8fde\u7eed\u6620\u5c04\uff0c\u4f46\u5f88\u96be\u8bbe\u8ba1\u5bf9\u5e94\u7684\u7f16\u7801\u7f51\u7edc\u8fdb\u884c\u5b66\u4e60\uff0c\u5bf9\u4e8e\u4efb\u4e00\u65b0\u573a\u666f\u9700\u8981\u91cd\u65b0\u8bad\u7ec3MLP\u3002</p> </li> <li> <p>Hybrid Methods \u628a\u4f53\u7d20\u4e0eMLP\u4e24\u79cd\u8868\u793a\u7ed3\u5408\uff0c\u5177\u6709\u4e00\u5b9a\u7684\u4f18\u52bf\u3002</p> </li> <li> <p>\u90e8\u5206\u7b97\u6cd5\u4ecd\u7136\u6ca1\u6709\u8bbe\u8ba1\u6709\u6548\u7684\u7f16\u7801\u7f51\u7edc\uff0c\u5bf9\u4e8e\u65b0\u573a\u666f\u9700\u8981\u91cd\u65b0\u4f18\u5316\u7f51\u7edc\u53c2\u6570\u3002</p> </li> <li> <p>\u4f53\u7d20\u573a\u7684\u7f16\u7801\u7f51\u7edc\u4ecd\u7136\u662f\u57fa\u4e8e Full-Voxel-based CNNs \u6216 Sparse-Voxel-based CNNs\u3002 \u8bba\u6587\u7684\u5173\u952e\u601d\u60f3 \u662f\u4f7f\u7528\u81ea\u9002\u5e94\u516b\u53c9\u6811\u6765\u8868\u793a\u70b9\u4e91\u548c\u4f53\u79ef\u573a\uff0c\u5e76\u5728\u5bf9\u5076\u516b\u53c9\u6811\u56fe\u4e0a\u7528\u56fe\u7f51\u7edc\u5b66\u4e60\u7279\u5f81\u3002\u76f8\u6bd4Full-Voxel\u65b9\u6cd5\u6548\u7387\u6709\u6240\u63d0\u9ad8\uff0c\u76f8\u6bd4Sparse-Voxel\u65b9\u6cd5\u53ef\u4ee5\u4fdd\u8bc1\u5168\u5c40\u7279\u5f81\u805a\u5408\u4e0e\u8fde\u7eed\u7684\u8f93\u51fa\u3002</p> </li> </ul>"}, {"location": "reading/paper/SIGGRAPH2022_dual_ocnn/#_4", "title": "\u65b9\u6cd5", "text": "<p>\u8bba\u6587\u63d0\u51fa\u7684\u6a21\u578b\u7684\u8f93\u5165\u4e3a\u70b9\u4e91\u6570\u636e\uff0c\u9996\u5148\u57fa\u4e8e\u70b9\u4e91\u6570\u636e\u5212\u5206\u516b\u53c9\u6811\uff0c\u7136\u540e\u8fde\u63a5\u76f8\u90bb\u7684\u53f6\u5b50\u8282\u70b9\u5f97\u5230\u5bf9\u5076\u516b\u53c9\u6811\u56fe\uff08Dual Octree Graph\uff09\uff0c\u7ecf\u8fc7\u7f16\u7801-\u89e3\u7801\u7f51\u7edc\uff0c\u9884\u6d4b\u5404\u53f6\u5b50\u8282\u70b9\u7684\u7279\u5f81\uff0c\u6700\u540e\u7ecf\u8fc7Neural MPU\u7684\u65b9\u6cd5\u63d2\u503c\u5f97\u5230\u4efb\u4e00\u67e5\u8be2\u70b9\u7684\u573a\u503c\u3002\u8bba\u6587\u7684\u6838\u5fc3\u521b\u65b0\u70b9\uff0c\u662f\u63d0\u51fa\u4e86\u57fa\u4e8e\u5bf9\u5076\u516b\u53c9\u6811\u7684\u56fe\u5377\u79ef\u7b97\u5b50\uff0c\u4ee5\u53ca\u63d0\u51fa\u4e86Neural MPU\u7684\u8868\u793a\u65b9\u6cd5\u3002\u53ef\u4ee5\u9ad8\u6548\u5730\u5b66\u4e60\u5168\u5c40\u7279\u5f81\uff0c\u4fdd\u8bc1\u8f93\u51fa\u7684\u7a7a\u95f4\u8fde\u7eed\u6027\u3002</p> <p></p>"}, {"location": "reading/paper/SIGGRAPH2022_dual_ocnn/#dual-octree-graph_1", "title": "Dual Octree Graph", "text": "<p>\u7ed9\u5b9a\u4e00\u4e2a3D\u5f62\u72b6\uff0c\u53ef\u4ee5\u901a\u8fc7\u9012\u5f52\u7ec6\u5206\u5176\u5360\u7528\u7a7a\u95f4\u4e0e\u5f62\u72b6\u76f8\u4ea4\u7684\u516b\u53c9\u6811\u8282\u70b9\u6765\u6784\u5efa\u516b\u53c9\u6811\uff0c\u76f4\u5230\u8fbe\u5230\u6307\u5b9a\u7684\u6700\u5927\u6811\u6df1\u5ea6\u3002\u516b\u53c9\u6811\u5728\u8868\u9762\u9644\u8fd1\u5206\u914d\u8f83\u7ec6\u7684\u4f53\u7d20\uff0c\u5728\u8868\u9762\u4ee5\u5916\u5206\u914d\u8f83\u7c97\u7684\u4f53\u7d20\u3002\u516b\u53c9\u6811\u7684\u53f6\u8282\u70b9\u6784\u6210\u4e09\u7ef4\u4f53\u7684\u5b8c\u6574\u5206\u533a\u3002\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p>\u73b0\u6709\u65b9\u6cd5\u5927\u591a\u6570\u662f\u5bf9\u516b\u53c9\u6811\u7684\u540c\u4e00\u5c42\u7684\u975e\u7a7a\u53f6\u5b50\u8282\u70b9\u505a\u7279\u5f81\u805a\u5408/\u5377\u79ef\u8fd0\u7b97\uff0c\u4f5c\u8005\u8ba4\u4e3a\u8fd9\u7c7b\u65b9\u6cd5\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7a7a\u95f4\u4e0d\u8fde\u7eed\u7684\u4f53\u79ef\u573a\u63a8\u65ad\uff0c\u611f\u53d7\u91ce\u8f83\u5c0f\uff0c\u56e0\u6b64\uff0c\u4f5c\u8005\u5f15\u5165\u4e86\u5bf9\u5076\u516b\u53c9\u6811\u56fe\u7ed3\u6784\u3002\u7b80\u5355\u6765\u8bf4\uff0c\u5c06\u516b\u53c9\u6811\u7684\u76f8\u90bb\u53f6\u5b50\u8282\u70b9\u8fde\u63a5\u540e\u5f97\u5230\u7684\u56fe\uff0c\u5c31\u662f\u5bf9\u5076\u516b\u53c9\u6811\u56fe\u3002\u5177\u4f53\u5730\uff0c\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u53ef\u4ee5\u7528GPU\u52a0\u901f\u7684\u5bf9\u5076\u516b\u53c9\u6811\u56fe\u6784\u5efa\u7b97\u6cd5\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u516b\u53c9\u6811\u6df1\u5ea6+1\u540e\uff0c\u539f\u6765\u7684\u8fb9\u4f1a\u52a0\u500d\uff0c\u540c\u65f6\u5144\u5f1f\u8282\u70b9\u95f4\u4e5f\u4f1a\u5f62\u6210\u65b0\u8fb9\u3002</p> <p></p>"}, {"location": "reading/paper/SIGGRAPH2022_dual_ocnn/#dual-octree-graph-cnns", "title": "Dual Octree Graph CNNs", "text": "<p>\u56fe\u5377\u79ef\u8fd0\u7b97\u4ee5\u56fe \\(\\mathcal{G}=\\{\\mathcal{V},\\mathcal{E}\\}\\) \u548c\u8282\u70b9\u7279\u5f81 \\(F=\\{F_i\\}\\) \u4f5c\u4e3a\u8f93\u5165\uff0c\u805a\u5408\uff08aggregate\uff09\u90bb\u5c45\u8282\u70b9\u4e0e\u672c\u8282\u70b9\u4fe1\u606f\u5e76\u66f4\u65b0 \\(F\\) \u3002\u4ee5\u516c\u5f0f\u7684\u5f62\u5f0f\u8868\u793a\u5982\u4e0b\u3002</p> \\[ F_i=\\mathcal{A} \\circ\\left\\{W\\left(\\Delta p_{i j}\\right) \\times F_j, \\forall j \\in \\mathcal{N}_i\\right\\} \\] <p>\u5176\u4e2d\uff0c\\(\\mathcal{A}\\) \u662f\u53ef\u5fae\u5206\u7684\u805a\u5408\u7b97\u5b50\uff08\u5982\u7d2f\u52a0\u3001\u5e73\u5747\u3001\u6700\u503c\uff09\u7b49\uff1b\\(W(\\cdot)\\) \u662f\u4e00\u4e2a\u6743\u91cd\u51fd\u6570\uff0c\u81ea\u53d8\u91cf\u4e3a\u540c\u4e00\u6761\u8fb9\u7684\u4e24\u4e2a\u56fe\u8282\u70b9\u7684\u76f8\u5bf9\u4f4d\u7f6e \\(\\Delta p_{i j}\\) \uff0c\u56e0\u53d8\u91cf\u4e3a\u5bf9\u5e94\u7684\u5377\u79ef\u6743\u91cd\uff1b\\(\\mathcal{N}_i\\) \u662f\u70b9 \\(v_i\\) \u7684\u6240\u6709\u90bb\u5c45\u8282\u70b9\u3002</p> <p>\u73b0\u6709\u65b9\u6cd5\u901a\u5e38\u5c06 \\(W(\\cdot)\\) \u5b9a\u4e49\u4e3a\u8fde\u7eed\u51fd\u6570\uff0c\u5982MLPs\uff0c\u8fd9\u7c7b\u6743\u91cd\u51fd\u6570\u4f1a\u5e26\u6765\u8f83\u5927\u7684\u8ba1\u7b97\u5f00\u9500\u3002\u57fa\u4e8e\u5bf9\u5076\u516b\u53c9\u6811\u56fe\u7684\u7279\u70b9\uff0c\u4f5c\u8005\u505a\u4e86\u5927\u80c6\u7684\u7b80\u5316\uff0c\u5c06\u76f8\u90bb\u8282\u70b9\u7684\u76f8\u5bf9\u4f4d\u7f6e \\(\\Delta p_{ij}\\) \u7b80\u5316\u4e3a \\(\\{+x,-x,+y,-y,+z,-z,self\\}\\) \u51717\u79cd\uff0c\u8fdb\u800c\u5c06 \\(W(\\cdot)\\) \u5b9a\u4e49\u4e3a7\u7ef4\u77e9\u9635\uff0c\u6bcf\u4e00\u7ef4\u5bf9\u5e94\u4e86\u4e00\u79cd\u76f8\u5bf9\u4f4d\u7f6e\u3002\u901a\u8fc7\u8fd9\u4e00\u7b80\u5316\uff0c\u4f5c\u8005\u8fdb\u4e00\u6b65\u5730\u5c06\u6574\u4e2a\u56fe\u7684\u5377\u79ef\u8f6c\u5316\u4e3a\u77e9\u9635\u8fd0\u7b97\uff0c\u6781\u5927\u5730\u63d0\u9ad8\u4e86\u5377\u79ef\u6548\u7387\u3002</p> \\[ F_i=\\sum_{j \\in \\mathcal{N}_i} W_{I\\left(\\Delta p_{i j}\\right)} \\times\\left[F_j\\left\\|D_j\\right\\| \\Delta p_{i j}\\right] \\] <p>\u4e0a\u5f0f\u4e3a\u8bba\u6587\u63d0\u51fa\u7684\u805a\u5408\u7b97\u5b50\uff0c\u5f0f\u4e2d \\(D_j\\) \u4e3a\u8282\u70b9 \\(v_i\\) \u7684\u516b\u53c9\u6811\u6df1\u5ea6 \\(d_j\\)\u7684\u72ec\u70ed\u7f16\u7801\uff0c\\(I(\\cdot)=\\{0,...,6\\}\\)\u3002</p> <p></p> <p>\u4e0a\u56fe\u6240\u793a\u4e3a\u8bba\u6587\u63d0\u51fa\u7684\u56fe\u5377\u79ef\u8fd0\u7b97\u7684\u4e8c\u7ef4\u793a\u4f8b\uff08\u6ce8\u610f\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u76f8\u5bf9\u4f4d\u7f6e\u9000\u5316\u4e3a5\u79cd\uff09\u3002\u56fe\u4e2d\u7684 \\(u\\) \u548c \\(r\\) \u5206\u522b\u8868\u793a 0\u53f7\u8282\u70b9\u4e0a\u65b9\u548c\u53f3\u65b9\u7684\u6240\u6709\u8282\u70b9\u7279\u5f81\u7684\u52a0\u548c\uff0c\\(x\\) \u8868\u793a\u8be5\u65b9\u5411\u65e0\u90bb\u5c45\u8282\u70b9\u3002</p>"}, {"location": "reading/paper/SIGGRAPH2022_dual_ocnn/#neural-mpu", "title": "Neural MPU", "text": "<p>\u4e0a\u8ff0\u7684\u65b9\u6cd5\u53ef\u4ee5\u63d0\u53d6\u6bcf\u4e2a\u516b\u53c9\u6811\u8282\u70b9\u7684\u7279\u5f81\uff0c\u4f46\u6700\u7ec8\u76ee\u6807\u662f\u83b7\u5f97\u9010\u70b9\uff08point-wise\uff09\u7684\u9884\u6d4b\u3002\u56e0\u6b64\uff0c\u4f5c\u8005\u5f15\u5165 multi-level partition of unity\uff08MPU\uff09\u63d2\u503c\u65b9\u6cd5\u3002</p> <p></p> <p>\u5177\u4f53\u5730\uff0c\u7ed9\u5b9a\u63d0\u53d6\u7684\u8282\u70b9\u7279\u5f81\u96c6\u5408 \\(F^d=\\{F_i\\}\\) \uff0c\u5bf9\u4e8e \u6bcf\u4e2a \u516b\u53c9\u6811\u53f6\u5b50\u8282\u70b9\uff0c\u8bba\u6587\u5b9a\u4e49\u4e86 MLP \\(\\Phi(x,F_i)\\) \uff0c\u5176\u8f93\u5165\u4e3a\u67e5\u8be2\u70b9\u7684\u5750\u6807 \\(x\\) \u548c\u8282\u70b9\u7279\u5f81 \\(F_i\\) \uff0c\u8f93\u51fa\u4e3a\u5c40\u90e8\u51fd\u6570\u503c\uff1b\u5b9a\u4e49\u4e86\u5c40\u90e8\u7684\u878d\u5408\u6743\u91cd\u51fd\u6570 \\(w_i(x)\\) \u548c\u7f6e\u4fe1\u5ea6 \\(c_i\\) \u3002\u56e0\u6b64\uff0cMPU\u7684\u516c\u5f0f\u8868\u8fbe\u5982\u4e0b\u3002</p> \\[ F(x)=\\frac{\\sum_i c_i \\cdot w_i(x) \\cdot \\Phi\\left(x, F_i\\right)}{\\sum_i c_i \\cdot w_i(x)} \\] <p>\u5f0f\u4e2d \\(F(x)\\) \u662f\u4e00\u4e2a\u5168\u5c40\u8fde\u7eed\u53ef\u5fae\u7684\u51fd\u6570\uff0c\u6743\u91cd\u51fd\u6570 \\(w_i(x)\\) \u7684\u5b9a\u4e49\u5982\u4e0b\uff0c\u5176\u4e2d \\(o_i\\) \u548c \\(r_i\\) \u5206\u522b\u4e3a\u8282\u70b9\u4f53\u7d20\u7684\u4e2d\u5fc3\u5750\u6807\u4e0e\u7a7a\u95f4\u5927\u5c0f\uff0c\\(c_i\\) \u662f\u4f53\u7d20\u7a7a\u95f4\u4f53\u79ef\u7684\u5012\u6570\u3002\\(B(\\cdot)\\) \u4fdd\u8bc1\u4e86\u67e5\u8be2\u7684\u5c40\u90e8\u6027\u3002</p> \\[ w_i(x)=B\\left(\\frac{\\left|x-o_i\\right|}{r_i}\\right), \\text { where } B(x)= \\begin{cases}1-|x| &amp; \\text { if }|x|&lt;1 \\\\ 0 &amp; \\text { otherwise. }\\end{cases} \\]"}, {"location": "reading/paper/SIGGRAPH2022_dual_ocnn/#network-and-loss", "title": "Network and Loss", "text": "<p>\u57fa\u4e8e\u524d\u9762\u6240\u8bf4\u7684\u7ec4\u4ef6\uff0c\u4f5c\u8005\u63d0\u51fa\u4e86\u4e0b\u56fe\u6240\u793a\u7684U-Net\u7ed3\u6784\u3002\u7f51\u7edc\u8f93\u5165\u4e3a\u6df1\u5ea6\u4e3a6\u7684\u5bf9\u5076\u516b\u53c9\u6811\u56fe\uff0c\u5728\u6bcf\u4e00\u5c42Decoder\u540e\u9762\u90fd\u63a5\u4e86\u4e00\u4e2aPredictionModule\u6a21\u5757\uff0c\u7528\u4ee5\u9884\u6d4b\u4e0a\u91c7\u6837\u65f6\u7684\u7ec6\u5206\u8282\u70b9\u3002</p> <p></p> <p>Downsample\u548cUpsample\u6a21\u5757\u5bf9\u5e94\u4e86\u5bf9\u5076\u516b\u53c9\u6811\u56fe\u7684\u4e0b\u91c7\u6837\u548c\u4e0a\u91c7\u6837\u64cd\u4f5c\u3002\u5177\u4f53\u5730\uff0c\u4e0b\u91c7\u6837\u64cd\u4f5c\u662f\u5c06\u6700\u6df1\u7684\u4e00\u5c42\u53f6\u5b50\u8282\u70b9\u5408\u5e76\u7684\u64cd\u4f5c\uff08\u5373\u6811\u7684\u6df1\u5ea6\u51cf\u4e00\uff09\uff0c\u4e0a\u91c7\u6837\u5219\u76f8\u53cd\u3002\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>PredictionModule \u6a21\u5757\u6240\u4f7f\u7528\u7684 Loss \u7c7b\u4f3c\u4e8e\u4e8c\u5206\u7c7b\u7684 Loss\uff1a</p> \\[ \\mathcal{L}_{o c t r e e}=\\sum_d \\frac{1}{N_d} \\sum_{o \\in O_d} \\operatorname{CrossEntropy}\\left(o, o_{g t}\\right) \\] <p>NeuralMPU \u6a21\u5757\u6240\u4f7f\u7528\u7684 Loss \u7c7b\u4f3c\u4e8e L2 Loss\uff1a</p> \\[ \\mathcal{L}_{\\text {regress }}=\\sum_d \\frac{1}{N \\mathcal{P}} \\sum_{x \\in \\mathcal{P}}\\left(\\lambda_v\\|F(x)-G(x)\\|_2^2+\\|\\nabla F(x)-\\nabla G(x)\\|_2^2\\right) \\text {, } \\] <p>\u5bf9\u4e8e\u65e0\u76d1\u7763\u5b66\u4e60\u6765\u8bf4\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u4e8e\u6cca\u677e\u91cd\u5efa\u7684\u68af\u5ea6Loss\uff1a</p> \\[ \\begin{gathered} \\mathcal{L}_{\\text {grad }}=\\sum_d\\left\\{\\frac{1}{N_{\\mathcal{S}}} \\sum_{x \\in \\mathcal{S}}\\left(\\lambda_v\\|F(x)\\|_2^2+\\|\\nabla F(x)-\\mathcal{N}(x)\\|_2^2\\right)+\\right. \\\\ \\left.\\frac{1}{N_Q} \\sum_{x \\in Q} \\lambda_g\\|\\nabla F(x)\\|_2^2\\right\\} \\end{gathered} \\]"}, {"location": "reading/paper/SIGGRAPH2022_dual_ocnn/#_5", "title": "\u5b9e\u9a8c", "text": ""}, {"location": "reading/paper/SIGGRAPH2022_dual_ocnn/#_6", "title": "\u8bc4\u4ef7", "text": "<p>\u8bba\u6587\u7684\u4e3b\u8981\u8d21\u732e\u662f\u5f15\u5165\u5bf9\u5076\u516b\u53c9\u6811\u56fe\u7ed3\u6784\uff0c\u8bbe\u8ba1\u4e86\u65b0\u7684\u56fe\u5377\u79ef\u7b97\u5b50\uff0c\u53ef\u4ee5\u66f4\u597d\u5730\u63d0\u53d6\u7279\u5f81\uff0c\u7ed3\u5408Nerual MPU\u5f97\u5230\u7a7a\u95f4\u8fde\u7eed\u7684\u8f93\u51fa\u7ed3\u679c\u3002\u8bba\u6587\u901a\u8fc7\u7cfb\u5217\u5b9e\u9a8c\u9a8c\u8bc1\u4e86\u8fd9\u4e00\u8d21\u732e\u3002</p>"}, {"location": "reading/paper/SIGGRAPH2022_dual_ocnn/#_7", "title": "\u5b9e\u73b0", "text": ""}, {"location": "reading/paper/SIGGRAPH2022_dual_ocnn/#_8", "title": "\u516b\u53c9\u6811\u7684\u5efa\u7acb", "text": ""}, {"location": "record/aigc/", "title": "Index", "text": "<p>\u5b8c\u7f8e\u4e16\u754cTA\u8c08Stable Diffusion\u63d2\u4ef6\uff0cControlNet\u3001Segment Anything | \u6e38\u620f\u5927\u89c2 | GameLook.com.cn</p>"}, {"location": "record/algo/code/cpp/", "title": "C++\u57fa\u7840\u77e5\u8bc6", "text": ""}, {"location": "record/algo/code/cpp/01_basic/", "title": "\u300cCPP\u300d\u7f51\u7edc\u8bfe\u7a0b\u7b14\u8bb0-01", "text": "<p>01 \u7a0b\u5e8f\u7684\u5185\u5b58\u6a21\u578b-\u5185\u5b58\u56db\u533a-\u4ee3\u7801\u533a._\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u672c\u9636\u6bb5\u4e3b\u8981\u9488\u5bf9C++\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u6280\u672f\u505a\u8be6\u7ec6\u8bb2\u89e3\uff0c\u63a2\u8ba8C++\u4e2d\u7684\u6838\u5fc3\u548c\u7cbe\u968f\u3002</p>"}, {"location": "record/algo/code/cpp/01_basic/#1", "title": "1 \u5185\u5b58\u5206\u533a\u6a21\u578b", "text": "<p>C++\u7a0b\u5e8f\u5728\u6267\u884c\u65f6\uff0c\u5c06\u5185\u5b58\u5927\u65b9\u5411\u5212\u5206\u4e3a 4\u4e2a\u533a\u57df - \u4ee3\u7801\u533a \uff1a\u5b58\u653e\u51fd\u6570\u4f53\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801\uff0c\u7531\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u7ba1\u7406\u7684 - \u5168\u5c40\u533a \uff1a\u5b58\u653e\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u4ee5\u53ca\u5e38\u91cf - \u6808\u533a \uff1a\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e\uff0c\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\uff0c\u5c40\u90e8\u53d8\u91cf\u7b49 - \u5806\u533a \uff1a \u5185\u5b58\u56db\u533a\u610f\u4e49 \uff1a</p> <ul> <li>\u4e0d\u540c\u533a\u57df\u5b58\u653e\u7684\u6570\u636e\uff0c\u8d4b\u4e88\u4e0d\u540c\u7684\u751f\u547d\u5468\u671f\uff0c\u7ed9\u6211\u4eec\u66f4\u5927\u7684\u7075\u6d3b\u7f16\u7a0b</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#11", "title": "1.1 \u7a0b\u5e8f\u8fd0\u884c\u524d", "text": "<p>\u5728\u7a0b\u5e8f\u7f16\u8bd1\u540e\uff0c\u751f\u6210\u4e86exe\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u672a\u6267\u884c\u8be5\u7a0b\u5e8f\u524d\u5206\u4e3a\u4e24\u4e2a\u533a\u57df\uff1a</p>"}, {"location": "record/algo/code/cpp/01_basic/#_1", "title": "\u4ee3\u7801\u533a", "text": "<ul> <li>\u5b58\u653e\u5185\u5bb9\uff1aCPU\u6267\u884c\u7684\u673a\u5668\u6307\u4ee4 - \u4ee3\u7801\u533a\u662f \u5171\u4eab \u7684\uff0c\u5171\u4eab\u7684\u76ee\u7684\u662f\u5bf9\u4e8e\u9891\u7e41\u88ab\u6267\u884c\u7684\u7a0b\u5e8f\uff0c\u53ea\u9700\u8981\u5728\u5185\u5b58\u4e2d\u6709\u4e00\u4efd\u4ee3\u7801\u5373\u53ef</li> <li>\u4ee3\u7801\u533a\u662f \u53ea\u8bfb \u7684\uff0c\u4f7f\u5176\u53ea\u8bfb\u7684\u539f\u56e0\u662f\u9632\u6b62\u7a0b\u5e8f\u610f\u5916\u5730\u4fee\u6539\u4e86\u5b83\u7684\u6307\u4ee4</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_2", "title": "\u5168\u5c40\u533a", "text": "<ul> <li>\u5b58\u653e\u5185\u5bb9\uff1a\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf - \u5168\u5c40\u533a\u8fd8\u5305\u542b\u4e86\u5e38\u91cf\u533a\uff0c \u5b57\u7b26\u4e32\u5e38\u91cf\u548c\u5176\u4ed6\u5e38\u91cf \u4e5f\u5b58\u653e\u5728\u6b64</li> <li> <p>\u8be5\u533a\u57df\u7684\u6570\u636e\u5728\u7a0b\u5e8f\u7ed3\u675f\u540e\u7531\u64cd\u4f5c\u7cfb\u7edf\u91ca\u653e #### \u603b\u7ed3</p> </li> <li> <p>C++\u4e2d\u5728\u7a0b\u5e8f\u8fd0\u884c\u524d\u5206\u4e3a\u5168\u5c40\u533a\u548c\u4ee3\u7801\u533a</p> </li> <li>\u4ee3\u7801\u533a\u7279\u70b9\u662f\u5171\u4eab\u548c\u53ea\u8bfb</li> <li>\u5168\u5c40\u533a\u4e2d\u5b58\u653e\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u53d8\u91cf\u3001\u5e38\u91cf</li> <li>\u5e38\u91cf\u533a\u4e2d\u5b58\u653e const\u4fee\u9970\u7684\u5168\u5c40\u5e38\u91cf  \u548c \u5b57\u7b26\u4e32\u5e38\u91cf</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_3", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>//\u5168\u5c40\u53d8\u91cf\nint g_a = 10;\nint g_b = 10;\n\n//\u5168\u5c40\u5e38\u91cf\nconst int c_g_a = 10;\nconst int c_g_b = 10;\n\nint main() {\n\n    //\u5c40\u90e8\u53d8\u91cf\n    int a = 10;\n    int b = 10;\n\n    //\u6253\u5370\u5730\u5740\n    cout &lt;&lt; \"\u5c40\u90e8\u53d8\u91cfa\u5730\u5740\u4e3a\uff1a \" &lt;&lt; (int)&amp;a &lt;&lt; endl;\n    cout &lt;&lt; \"\u5c40\u90e8\u53d8\u91cfb\u5730\u5740\u4e3a\uff1a \" &lt;&lt; (int)&amp;b &lt;&lt; endl;\n\n    cout &lt;&lt; \"\u5168\u5c40\u53d8\u91cfg_a\u5730\u5740\u4e3a\uff1a \" &lt;&lt;  (int)&amp;g_a &lt;&lt; endl;\n    cout &lt;&lt; \"\u5168\u5c40\u53d8\u91cfg_b\u5730\u5740\u4e3a\uff1a \" &lt;&lt;  (int)&amp;g_b &lt;&lt; endl;\n\n    //\u9759\u6001\u53d8\u91cf\n    static int s_a = 10;\n    static int s_b = 10;\n\n    cout &lt;&lt; \"\u9759\u6001\u53d8\u91cfs_a\u5730\u5740\u4e3a\uff1a \" &lt;&lt; (int)&amp;s_a &lt;&lt; endl;\n    cout &lt;&lt; \"\u9759\u6001\u53d8\u91cfs_b\u5730\u5740\u4e3a\uff1a \" &lt;&lt; (int)&amp;s_b &lt;&lt; endl;\n\n    cout &lt;&lt; \"\u5b57\u7b26\u4e32\u5e38\u91cf\u5730\u5740\u4e3a\uff1a \" &lt;&lt; (int)&amp;\"hello world\" &lt;&lt; endl;\n    cout &lt;&lt; \"\u5b57\u7b26\u4e32\u5e38\u91cf\u5730\u5740\u4e3a\uff1a \" &lt;&lt; (int)&amp;\"hello world1\" &lt;&lt; endl;\n\n    cout &lt;&lt; \"\u5168\u5c40\u5e38\u91cfc_g_a\u5730\u5740\u4e3a\uff1a \" &lt;&lt; (int)&amp;c_g_a &lt;&lt; endl;\n    cout &lt;&lt; \"\u5168\u5c40\u5e38\u91cfc_g_b\u5730\u5740\u4e3a\uff1a \" &lt;&lt; (int)&amp;c_g_b &lt;&lt; endl;\n\n    const int c_l_a = 10;\n    const int c_l_b = 10;\n    cout &lt;&lt; \"\u5c40\u90e8\u5e38\u91cfc_l_a\u5730\u5740\u4e3a\uff1a \" &lt;&lt; (int)&amp;c_l_a &lt;&lt; endl;\n    cout &lt;&lt; \"\u5c40\u90e8\u5e38\u91cfc_l_b\u5730\u5740\u4e3a\uff1a \" &lt;&lt; (int)&amp;c_l_b &lt;&lt; endl;\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#_4", "title": "\u6253\u5370\u7ed3\u679c\uff1a", "text": ""}, {"location": "record/algo/code/cpp/01_basic/#12", "title": "1.2 \u7a0b\u5e8f\u8fd0\u884c\u540e", "text": ""}, {"location": "record/algo/code/cpp/01_basic/#_5", "title": "\u6808\u533a", "text": "<ul> <li>\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e\uff0c\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\u3001\u5c40\u90e8\u53d8\u91cf\u7b49</li> <li>\u6ce8\u610f\u4e8b\u9879 \uff1a\u4e0d\u8981\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740\uff0c\u6808\u533a\u5f00\u8f9f\u7684\u6570\u636e\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u91ca\u653e</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_6", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>int * func(int b) // \u5f62\u53c2\u6570\u636e\u4e5f\u4f1a\u653e\u5728\u6808\u533a\n{\n    int a = 10; //\u5c40\u90e8\u53d8\u91cf\u5b58\u653e\u5728\u6808\u533a\uff0c\u6808\u533a\u7684\u6570\u636e\u5728\u51fd\u6570\u6267\u884c\u5b8c\u540e\u81ea\u52a8\u91ca\u653e\n    return &amp;a; //\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5730\u5740\n}\n\nint main() {\n\n    int *p = func(); //\u63a5\u53d7func\u51fd\u6570\u7684\u8fd4\u56de\u503c\n\n    cout &lt;&lt; *p &lt;&lt; endl; // \u7b2c\u4e00\u6b21\u53ef\u4ee5\u6253\u5370\u6b63\u786e\u7684\u6570\u5b57\uff0c\u662f\u56e0\u4e3a\u7f16\u8bd1\u5668\u505a\u4e86\u4fdd\u7559\n    cout &lt;&lt; *p &lt;&lt; endl;\n\n    system(\"pause\"); // \u7b2c\u4e8c\u6b21\u8fd9\u4e2a\u6570\u636e\u5c31\u4e0d\u518d\u4fdd\u7559\u4e86\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#_7", "title": "\u6253\u5370\u7ed3\u679c\uff1a", "text": ""}, {"location": "record/algo/code/cpp/01_basic/#_8", "title": "\u5806\u533a", "text": "<ul> <li>\u7531\u7a0b\u5e8f\u5458\u5206\u914d\u91ca\u653e\uff0c\u82e5\u7a0b\u5e8f\u5458\u4e0d\u91ca\u653e\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\u7531\u64cd\u4f5c\u7cfb\u7edf\u56de\u6536</li> <li>\u5728 C++ \u4e2d\u4e3b\u8981\u5229\u7528 new \u5728\u5806\u533a\u5f00\u8f9f\u5185\u5b58</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_9", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>int* func()\n{\n    // \u5229\u7528new\u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u5c06\u6570\u636e\u5f00\u8f9f\u5230\u5806\u533a\n    // \u6307\u9488\u672c\u8d28\u4e0a\u4e5f\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u5b58\u50a8\u5728\u6808\u4e0a\uff1b\u4f46\u6b64\u5904\u6307\u9488\u6307\u5411\u7684\u6570\u636e\u662f\u653e\u5728\u5806\u533a\u7684\n    int* a = new int(10);\n    return a;\n}\n\nint main() {\n\n    int *p = func();\n\n    cout &lt;&lt; *p &lt;&lt; endl;\n    cout &lt;&lt; *p &lt;&lt; endl;\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#_10", "title": "\u6253\u5370\u7ed3\u679c\uff1a", "text": ""}, {"location": "record/algo/code/cpp/01_basic/#_11", "title": "\u603b\u7ed3", "text": "<ul> <li>\u6808\u533a\u6570\u636e\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u5206\u914d\u91ca\u653e\uff0c\u5b58\u653e\u51fd\u6570\u7684\u53c2\u6570\u503c\u3001\u5c40\u90e8\u53d8\u91cf\u7b49</li> <li>\u5806\u533a\u6570\u636e\u7531\u7a0b\u5e8f\u5458\u7ba1\u7406\u5f00\u8f9f\u548c\u91ca\u653e\uff0c\u5982\u53ef\u4ee5\u5229\u7528new\u5173\u952e\u5b57\u8fdb\u884c\u5f00\u8f9f\u5185\u5b58</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#13-new", "title": "1.3 new\u64cd\u4f5c\u7b26", "text": "<ul> <li> <p>C++\u4e2d\u5229\u7528 <code>new</code> \u64cd\u4f5c\u7b26\u5728\u5806\u533a\u5f00\u8f9f\u6570\u636e</p> </li> <li> <p>\u5806\u533a\u5f00\u8f9f\u7684\u6570\u636e\uff0c\u7531\u7a0b\u5e8f\u5458\u624b\u52a8\u5f00\u8f9f\uff0c\u624b\u52a8\u91ca\u653e\uff0c\u91ca\u653e\u5229\u7528\u64cd\u4f5c\u7b26 <code>new</code></p> </li> <li>\u8bed\u6cd5\uff1a<code>new \u6570\u636e\u7c7b\u578b</code></li> <li>\u5229\u7528new\u521b\u5efa\u7684\u6570\u636e\uff0c\u4f1a\u8fd4\u56de\u8be5\u6570\u636e\u5bf9\u5e94\u7684\u7c7b\u578b\u7684\u6307\u9488</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#1_1", "title": "\u793a\u4f8b1\uff1a \u57fa\u672c\u8bed\u6cd5", "text": "<pre><code>int* func()\n{\n    int* a = new int(10);\n    return a;\n}\n\nint main() {\n\n    int *p = func();\n\n    cout &lt;&lt; *p &lt;&lt; endl;\n    cout &lt;&lt; *p &lt;&lt; endl;\n\n    //\u5229\u7528delete\u91ca\u653e\u5806\u533a\u6570\u636e\n    delete p;\n\n    //cout &lt;&lt; *p &lt;&lt; endl; //\u62a5\u9519\uff0c\u91ca\u653e\u7684\u7a7a\u95f4\u4e0d\u53ef\u8bbf\u95ee\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#2", "title": "\u793a\u4f8b2\uff1a\u5f00\u8f9f\u6570\u7ec4", "text": "<pre><code>//\u5806\u533a\u5f00\u8f9f\u6570\u7ec4\nint main() {\n\n    int* arr = new int[10];\n\n    for (int i = 0; i &lt; 10; i++)\n    {\n        arr[i] = i + 100;\n    }\n\n    for (int i = 0; i &lt; 10; i++)\n    {\n        cout &lt;&lt; arr[i] &lt;&lt; endl;\n    }\n    //\u91ca\u653e\u6570\u7ec4 delete \u540e\u52a0 []\n    delete[] arr;\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#2_1", "title": "2 \u5f15\u7528", "text": ""}, {"location": "record/algo/code/cpp/01_basic/#21", "title": "2.1 \u5f15\u7528\u7684\u57fa\u672c\u4f7f\u7528", "text": "<p>\u5728C++\u4e2d\uff0c\u5f15\u7528\u662f\u5bf9\u8c61\u6216\u53d8\u91cf\u7684\u522b\u540d\u3002\u53ef\u4ee5\u4f7f\u7528\u5f15\u7528\u6765\u8bbf\u95ee\u6216\u4fee\u6539\u539f\u59cb\u5bf9\u8c61\u6216\u53d8\u91cf\u7684\u503c\uff0c\u5c31\u597d\u50cf\u5b83\u4eec\u662f\u540c\u4e00\u5bf9\u8c61\u6216\u53d8\u91cf\u4e00\u6837\u3002\u5f15\u7528\u63d0\u4f9b\u4e86\u4e00\u79cd\u66f4\u7b80\u5355\u3001\u66f4\u65b9\u4fbf\u7684\u65b9\u5f0f\u6765\u4f20\u9012\u53d8\u91cf\u6216\u5bf9\u8c61\uff0c\u7279\u522b\u9002\u7528\u4e8e\u51fd\u6570\u53c2\u6570\u4f20\u9012\u548c\u8fd4\u56de\u503c\u3002 </p> <ul> <li> <p>**\u4f5c\u7528\uff1a ** \u7ed9\u53d8\u91cf\u8d77\u522b\u540d</p> </li> <li> <p>\u8bed\u6cd5\uff1a <code>\u6570\u636e\u7c7b\u578b &amp;\u522b\u540d = \u539f\u540d</code></p> </li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_12", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>int main() {\n\n    int a = 10;\n    int &amp;b = a;\n\n    cout &lt;&lt; \"a = \" &lt;&lt; a &lt;&lt; endl;\n    cout &lt;&lt; \"b = \" &lt;&lt; b &lt;&lt; endl;\n\n    b = 100;\n\n    cout &lt;&lt; \"a = \" &lt;&lt; a &lt;&lt; endl;\n    cout &lt;&lt; \"b = \" &lt;&lt; b &lt;&lt; endl;\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#_13", "title": "\u8f93\u51fa\u7ed3\u679c\uff1a", "text": ""}, {"location": "record/algo/code/cpp/01_basic/#22", "title": "2.2 \u5f15\u7528\u6ce8\u610f\u4e8b\u9879", "text": "<ul> <li>\u5f15\u7528\u5fc5\u987b\u521d\u59cb\u5316</li> </ul> <pre><code>int &amp;b; // \u9519\u8bef\u7684\uff0c\u5fc5\u987b\u5728\u58f0\u660e\u7684\u65f6\u5019\u8fdb\u884c\u521d\u59cb\u5316\n</code></pre> <ul> <li>\u5f15\u7528\u5728\u521d\u59cb\u5316\u540e\uff0c\u4e0d\u53ef\u4ee5\u6539\u53d8</li> </ul> <pre><code>int &amp;b = a;\n&amp;b = c; // \u9519\u8bef\u7684\uff0c\u5f15\u7528\u521d\u59cb\u5316\u540e\u4e0d\u53ef\u6539\u53d8\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#23", "title": "2.3 \u5f15\u7528\u505a\u51fd\u6570\u53c2\u6570", "text": "<p>\u901a\u8fc7\u5f15\u7528\u53c2\u6570\u4ea7\u751f\u7684\u6548\u679c\u540c\u6309\u5730\u5740\u4f20\u9012\u662f\u4e00\u6837\u7684\u3002\u5f15\u7528\u7684\u8bed\u6cd5\u66f4\u6e05\u695a\u7b80\u5355\u3002</p> <ul> <li> <p>\u4f5c\u7528\uff1a \u51fd\u6570\u4f20\u53c2\u65f6\uff0c\u53ef\u4ee5\u5229\u7528\u5f15\u7528\u7684\u6280\u672f\u8ba9\u5f62\u53c2\u4fee\u9970\u5b9e\u53c2</p> </li> <li> <p>\u4f18\u70b9\uff1a \u53ef\u4ee5\u7b80\u5316\u6307\u9488\u4fee\u6539\u5b9e\u53c2</p> </li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_14", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>//1. \u503c\u4f20\u9012\nvoid mySwap01(int a\uff0c int b) {\n    int temp = a;\n    a = b;\n    b = temp;\n}\n\n//2. \u5730\u5740\u4f20\u9012\nvoid mySwap02(int* a\uff0c int* b) {\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\n\n//3. \u5f15\u7528\u4f20\u9012\nvoid mySwap03(int&amp; a\uff0c int&amp; b) {\n    int temp = a;\n    a = b;\n    b = temp;\n}\n\nint main() {\n\n    int a = 10;\n    int b = 20;\n\n    mySwap01(a\uff0c b);\n    cout &lt;&lt; \"a:\" &lt;&lt; a &lt;&lt; \" b:\" &lt;&lt; b &lt;&lt; endl;\n\n    mySwap02(&amp;a\uff0c &amp;b);\n    cout &lt;&lt; \"a:\" &lt;&lt; a &lt;&lt; \" b:\" &lt;&lt; b &lt;&lt; endl;\n\n    mySwap03(a\uff0c b);\n    cout &lt;&lt; \"a:\" &lt;&lt; a &lt;&lt; \" b:\" &lt;&lt; b &lt;&lt; endl;\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#24", "title": "2.4 \u5f15\u7528\u505a\u51fd\u6570\u8fd4\u56de\u503c", "text": "<ul> <li> <p>\u4f5c\u7528 \uff1a\u5f15\u7528\u662f\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u5b58\u5728\u7684</p> </li> <li> <p>\u6ce8\u610f \uff1a \u4e0d\u8981\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u5f15\u7528 - \u7528\u6cd5 \uff1a\u5982\u679c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u5f15\u7528\uff0c\u8fd9\u4e2a\u51fd\u6570\u8c03\u7528\u53ef\u4ee5\u4f5c\u4e3a \u5de6\u503c ##### \u793a\u4f8b\uff1a</p> </li> </ul> <pre><code>// \u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u5f15\u7528\nint&amp; test01() {\n    int a = 10; // \u5c40\u90e8\u53d8\u91cf\n    return a;\n}\n\n//\u8fd4\u56de\u9759\u6001\u53d8\u91cf\u5f15\u7528\nint&amp; test02() {\n    static int a = 20; // \u9759\u6001\u53d8\u91cf\uff0c\u5b58\u653e\u5728\u5168\u5c40\u533a\uff0c\u5168\u5c40\u533a\u4e0a\u7684\u6570\u636e\u5728\u7a0b\u5e8f\u7ed3\u675f\u540e\u7cfb\u7edf\u91ca\u653e\n    return a;\n}\n\nint main() {\n\n    // \u4e0d\u80fd\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\n    int&amp; ref = test01();\n    cout &lt;&lt; \"ref = \" &lt;&lt; ref &lt;&lt; endl; //\u7b2c\u4e00\u6b21\u7ed3\u679c\u6b63\u786e\uff0c\u662f\u56e0\u4e3a\u7f16\u8bd1\u5668\u505a\u4e86\u4fdd\u7559\n    cout &lt;&lt; \"ref = \" &lt;&lt; ref &lt;&lt; endl; //\u7b2c\u4e8c\u6b21\u7ed3\u679c\u9519\u8bef\uff0c\u56e0\u4e3aa\u7684\u5185\u5b58\u5df2\u7ecf\u91ca\u653e\n\n    // \u5982\u679c\u51fd\u6570\u505a\u5de6\u503c\uff0c\u90a3\u4e48\u5fc5\u987b\u8fd4\u56de\u5f15\u7528\n    int&amp; ref2 = test02();\n    cout &lt;&lt; \"ref2 = \" &lt;&lt; ref2 &lt;&lt; endl;\n    cout &lt;&lt; \"ref2 = \" &lt;&lt; ref2 &lt;&lt; endl;\n\n    test02() = 1000; // \u5982\u679c\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u5f15\u7528\uff0c\u8fd9\u4e2a\u51fd\u6570\u8c03\u7528\u53ef\u4ee5\u4f5c\u4e3a\u5de6\u503c\n\n    cout &lt;&lt; \"ref2 = \" &lt;&lt; ref2 &lt;&lt; endl;\n    cout &lt;&lt; \"ref2 = \" &lt;&lt; ref2 &lt;&lt; endl;\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#25-c-", "title": "2.5 \u5f15\u7528\u7684\u672c\u8d28 \u5f15\u7528\u7684\u672c\u8d28\u5728c++\u5185\u90e8\u5b9e\u73b0\u662f\u4e00\u4e2a\u6307\u9488\u5e38\u91cf\u3002 - \u6307\u9488\u5e38\u91cf\uff1a\u6307\u9488\u7684\u6307\u5411\u5730\u5740\u4e0d\u53ef\u4ee5\u4fee\u6539\uff1b\u6307\u5411\u5730\u5740\u6240\u5b58\u50a8\u7684\u503c\u53ef\u4ee5\u4fee\u6539\u3002", "text": "<pre><code>int a = 10;\nint * const ref = &amp;a; //ref\u662f\u6307\u9488\u5e38\u91cf\nint &amp; ref2 = a; //ref2\u4e0eref\u672c\u8d28\u4e0a\u76f8\u540c\n</code></pre> <ul> <li>C++\u63a8\u8350\u7528\u5f15\u7528\u6280\u672f\uff0c\u56e0\u4e3a\u8bed\u6cd5\u65b9\u4fbf\uff0c\u5f15\u7528\u672c\u8d28\u662f\u6307\u9488\u5e38\u91cf\uff0c\u4f46\u662f\u6240\u6709\u7684\u6307\u9488\u64cd\u4f5c\u7f16\u8bd1\u5668\u90fd\u5e2e\u6211\u4eec\u505a\u4e86\u3002</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_15", "title": "\u8bb2\u89e3\u793a\u4f8b\uff1a", "text": "<pre><code>//\u53d1\u73b0\u662f\u5f15\u7528\uff0c\u8f6c\u6362\u4e3a int* const ref = &amp;a;\nvoid func(int&amp; ref){\n    ref = 100; // ref\u662f\u5f15\u7528\uff0c\u8f6c\u6362\u4e3a*ref = 100\n}\nint main(){\n    int a = 10;\n\n    //\u81ea\u52a8\u8f6c\u6362\u4e3a int* const ref = &amp;a; \u6307\u9488\u5e38\u91cf\u662f\u6307\u9488\u6307\u5411\u4e0d\u53ef\u6539\uff0c\u4e5f\u8bf4\u660e\u4e3a\u4ec0\u4e48\u5f15\u7528\u4e0d\u53ef\u66f4\u6539\n    int&amp; ref = a; \n    ref = 20; //\u5185\u90e8\u53d1\u73b0ref\u662f\u5f15\u7528\uff0c\u81ea\u52a8\u5e2e\u6211\u4eec\u8f6c\u6362\u4e3a: *ref = 20;\n\n    cout &lt;&lt; \"a:\" &lt;&lt; a &lt;&lt; endl;\n    cout &lt;&lt; \"ref:\" &lt;&lt; ref &lt;&lt; endl;\n\n    func(a);\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#26", "title": "2.6 \u5e38\u91cf\u5f15\u7528", "text": "<ul> <li> <p>\u5e38\u91cf\u5f15\u7528\u4e3b\u8981\u7528\u6765\u4fee\u9970\u5f62\u53c2\uff0c\u9632\u6b62\u8bef\u64cd\u4f5c</p> </li> <li> <p>\u4f7f\u7528 \uff1a\u5728\u51fd\u6570\u5f62\u53c2\u5217\u8868\u4e2d\uff0c\u53ef\u4ee5\u52a0 <code>const</code> \u4fee\u9970\u5f62\u53c2\uff0c\u9632\u6b62\u5f62\u53c2\u6539\u53d8\u5b9e\u53c2</p> </li> <li> <p>\u5176\u4ed6\u7528\u5904\uff1a\u5f15\u7528\u8d4b\u503c\u9700\u8981\u4e00\u4e2a\u5408\u6cd5\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5982\u4e0b</p> </li> </ul> <pre><code>int&amp; ref = 10;  \u5f15\u7528\u672c\u8eab\u9700\u8981\u4e00\u4e2a\u5408\u6cd5\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u6b64\u8fd9\u884c\u9519\u8bef\n//\u52a0\u5165const\u5c31\u53ef\u4ee5\u4e86\uff0c\u7f16\u8bd1\u5668\u4f18\u5316\u4ee3\u7801\uff0cint temp = 10; const int&amp; ref = temp;\nconst int&amp; ref = 10;\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#_16", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>//\u5f15\u7528\u4f7f\u7528\u7684\u573a\u666f\uff0c\u901a\u5e38\u7528\u6765\u4fee\u9970\u5f62\u53c2\nvoid showValue(const int&amp; v) {\n    //v += 10;\n    cout &lt;&lt; v &lt;&lt; endl;\n}\n\nint main() {\n\n    //ref = 100;  //\u52a0\u5165const\u540e\u4e0d\u53ef\u4ee5\u4fee\u6539\u53d8\u91cf\n    cout &lt;&lt; ref &lt;&lt; endl;\n\n    //\u51fd\u6570\u4e2d\u5229\u7528\u5e38\u91cf\u5f15\u7528\u9632\u6b62\u8bef\u64cd\u4f5c\u4fee\u6539\u5b9e\u53c2\n    int a = 10;\n    showValue(a);\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#3", "title": "3 \u51fd\u6570\u63d0\u9ad8", "text": ""}, {"location": "record/algo/code/cpp/01_basic/#31", "title": "3.1 \u51fd\u6570\u9ed8\u8ba4\u53c2\u6570", "text": "<p>\u5728C++\u4e2d\uff0c\u51fd\u6570\u7684\u5f62\u53c2\u5217\u8868\u4e2d\u7684\u5f62\u53c2\u662f\u53ef\u4ee5\u6709\u9ed8\u8ba4\u503c\u7684\u3002</p> <ul> <li>\u8bed\u6cd5 \uff1a<code>\u8fd4\u56de\u503c\u7c7b\u578b  \u51fd\u6570\u540d \uff08\u53c2\u6570= \u9ed8\u8ba4\u503c\uff09{}</code></li> <li>\u6ce8\u610f\u4e8b\u9879 \uff1a</li> <li>\u5982\u679c\u67d0\u4e2a\u4f4d\u7f6e\u53c2\u6570\u6709\u9ed8\u8ba4\u503c\uff0c\u90a3\u4e48\u4ece\u8fd9\u4e2a\u4f4d\u7f6e\u5f80\u540e\uff0c\u4ece\u5de6\u5411\u53f3\uff0c\u5fc5\u987b\u90fd\u8981\u6709\u9ed8\u8ba4\u503c</li> <li>\u5982\u679c\u51fd\u6570\u58f0\u660e\u6709\u9ed8\u8ba4\u503c\uff0c\u51fd\u6570\u5b9e\u73b0\u7684\u65f6\u5019\u5c31\u4e0d\u80fd\u6709\u9ed8\u8ba4\u53c2\u6570\uff1b\u53cd\u4e4b\u4ea6\u7136\u3002\u5373\u51fd\u6570\u5b9e\u73b0\u548c\u58f0\u660e\u53ea\u80fd\u6709\u4e00\u8005\u6709\u9ed8\u8ba4\u503c\u3002</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_17", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>int func(int a\uff0c int b = 10\uff0c int c = 10) {\n    return a + b + c;\n}\n\n//1. \u5982\u679c\u67d0\u4e2a\u4f4d\u7f6e\u53c2\u6570\u6709\u9ed8\u8ba4\u503c\uff0c\u90a3\u4e48\u4ece\u8fd9\u4e2a\u4f4d\u7f6e\u5f80\u540e\uff0c\u4ece\u5de6\u5411\u53f3\uff0c\u5fc5\u987b\u90fd\u8981\u6709\u9ed8\u8ba4\u503c\n//2. \u5982\u679c\u51fd\u6570\u58f0\u660e\u6709\u9ed8\u8ba4\u503c\uff0c\u51fd\u6570\u5b9e\u73b0\u7684\u65f6\u5019\u5c31\u4e0d\u80fd\u6709\u9ed8\u8ba4\u53c2\u6570\nint func2(int a = 10\uff0c int b = 10);\nint func2(int a\uff0c int b) {\n    return a + b;\n}\n\nint main() {\n\n    cout &lt;&lt; \"ret = \" &lt;&lt; func(20\uff0c 20) &lt;&lt; endl;\n    cout &lt;&lt; \"ret = \" &lt;&lt; func(100) &lt;&lt; endl;\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#32", "title": "3.2 \u51fd\u6570\u5360\u4f4d\u53c2\u6570", "text": "<p>C++\u4e2d\u51fd\u6570\u7684\u5f62\u53c2\u5217\u8868\u91cc\u53ef\u4ee5\u6709\u5360\u4f4d\u53c2\u6570\uff0c\u7528\u6765\u505a\u5360\u4f4d\uff0c\u8c03\u7528\u51fd\u6570\u65f6\u5fc5\u987b\u586b\u8865\u8be5\u4f4d\u7f6e\u3002</p> <ul> <li>\u8bed\u6cd5\uff1a <code>\u8fd4\u56de\u503c\u7c7b\u578b \u51fd\u6570\u540d (\u6570\u636e\u7c7b\u578b){}</code></li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_18", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>//\u51fd\u6570\u5360\u4f4d\u53c2\u6570 \uff0c\u5360\u4f4d\u53c2\u6570\u4e5f\u53ef\u4ee5\u6709\u9ed8\u8ba4\u53c2\u6570\nvoid func(int a\uff0c int) {\n    cout &lt;&lt; \"this is func\" &lt;&lt; endl;\n}\n\nint main() {\n\n    func(10\uff0c10); //\u5360\u4f4d\u53c2\u6570\u5fc5\u987b\u586b\u8865\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#33", "title": "3.3 \u51fd\u6570\u91cd\u8f7d", "text": ""}, {"location": "record/algo/code/cpp/01_basic/#331", "title": "3.3.1 \u51fd\u6570\u91cd\u8f7d\u6982\u8ff0", "text": "<ul> <li> <p>\u4f5c\u7528\uff1a \u51fd\u6570\u540d\u53ef\u4ee5\u76f8\u540c\uff0c\u63d0\u9ad8\u590d\u7528\u6027</p> </li> <li> <p>\u51fd\u6570\u91cd\u8f7d\u6ee1\u8db3\u6761\u4ef6\uff1a * \u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u4e0b</p> </li> <li> <p>\u51fd\u6570\u540d\u79f0\u76f8\u540c</p> </li> <li> <p>\u51fd\u6570\u53c2\u6570 \u7c7b\u578b\u4e0d\u540c \u6216\u8005 \u4e2a\u6570\u4e0d\u540c \u6216\u8005 \u987a\u5e8f\u4e0d\u540c - \u6ce8\u610f: \u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e0d\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u91cd\u8f7d\u7684\u6761\u4ef6</p> </li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_19", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>//\u51fd\u6570\u91cd\u8f7d\u9700\u8981\u51fd\u6570\u90fd\u5728\u540c\u4e00\u4e2a\u4f5c\u7528\u57df\u4e0b\nvoid func()\n{\n    cout &lt;&lt; \"func \u7684\u8c03\u7528\uff01\" &lt;&lt; endl;\n}\nvoid func(int a)\n{\n    cout &lt;&lt; \"func (int a) \u7684\u8c03\u7528\uff01\" &lt;&lt; endl;\n}\nvoid func(double a)\n{\n    cout &lt;&lt; \"func (double a)\u7684\u8c03\u7528\uff01\" &lt;&lt; endl;\n}\nvoid func(int a \uff0cdouble b)\n{\n    cout &lt;&lt; \"func (int a \uff0cdouble b) \u7684\u8c03\u7528\uff01\" &lt;&lt; endl;\n}\nvoid func(double a \uff0cint b)\n{\n    cout &lt;&lt; \"func (double a \uff0cint b)\u7684\u8c03\u7528\uff01\" &lt;&lt; endl;\n}\n\n//\u51fd\u6570\u8fd4\u56de\u503c\u4e0d\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u91cd\u8f7d\u6761\u4ef6\n//int func(double a\uff0c int b)\n//{\n//  cout &lt;&lt; \"func (double a \uff0cint b)\u7684\u8c03\u7528\uff01\" &lt;&lt; endl;\n//}\n\n\nint main() {\n\n    func();\n    func(10);\n    func(3.14);\n    func(10\uff0c3.14);\n    func(3.14 \uff0c 10);\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#332", "title": "3.3.2 \u51fd\u6570\u91cd\u8f7d\u6ce8\u610f\u4e8b\u9879", "text": "<ul> <li>\u5f15\u7528\u4f5c\u4e3a\u91cd\u8f7d\u6761\u4ef6\uff0c\u5e38\u91cf\u5f15\u7528\u4e0e\u5f15\u7528\u7b26\u5408\u91cd\u8f7d\u6761\u4ef6</li> </ul> <pre><code>void func(int &amp;a){}\nvoid func(const int &amp;a){} // \u6b63\u786e\n</code></pre> <ul> <li>\u51fd\u6570\u91cd\u8f7d\u78b0\u5230\u51fd\u6570\u9ed8\u8ba4\u53c2\u6570\uff0c\u53ef\u80fd\u4f1a\u6709\u4e8c\u4e49\u6027</li> </ul> <pre><code>void func(int a){}\nvoid func(int a, int b = 10){} // \u9519\u8bef\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#_20", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>//\u51fd\u6570\u91cd\u8f7d\u6ce8\u610f\u4e8b\u9879\n//1\u3001\u5f15\u7528\u4f5c\u4e3a\u91cd\u8f7d\u6761\u4ef6\n\nvoid func(int &amp;a)\n{\n    cout &lt;&lt; \"func (int &amp;a) \u8c03\u7528 \" &lt;&lt; endl;\n}\n\nvoid func(const int &amp;a)\n{\n    cout &lt;&lt; \"func (const int &amp;a) \u8c03\u7528 \" &lt;&lt; endl;\n}\n\n\n//2\u3001\u51fd\u6570\u91cd\u8f7d\u78b0\u5230\u51fd\u6570\u9ed8\u8ba4\u53c2\u6570\n\nvoid func2(int a\uff0c int b = 10)\n{\n    cout &lt;&lt; \"func2(int a\uff0c int b = 10) \u8c03\u7528\" &lt;&lt; endl;\n}\n\nvoid func2(int a)\n{\n    cout &lt;&lt; \"func2(int a) \u8c03\u7528\" &lt;&lt; endl;\n}\n\nint main() {\n\n    int a = 10;\n    func(a); //\u8c03\u7528\u65e0const\n    func(10);//\u8c03\u7528\u6709const\n\n\n    //func2(10); //\u78b0\u5230\u9ed8\u8ba4\u53c2\u6570\u4ea7\u751f\u6b67\u4e49\uff0c\u9700\u8981\u907f\u514d\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#4", "title": "4 \u7c7b\u548c\u5bf9\u8c61", "text": "<p>C++\u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u7279\u6027\u4e3a\uff1a \u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001 \u3002</p> <p>C++\u8ba4\u4e3a \u4e07\u4e8b\u4e07\u7269\u90fd\u7686\u4e3a\u5bf9\u8c61 \uff0c\u5bf9\u8c61\u4e0a\u6709\u5176 \u5c5e\u6027 \u548c \u884c\u4e3a \u3002 \u4f8b\u5982\uff1a \u200b  \u4eba\u53ef\u4ee5\u4f5c\u4e3a\u5bf9\u8c61\uff0c\u5c5e\u6027\u6709\u59d3\u540d\u3001\u5e74\u9f84\u3001\u8eab\u9ad8\u3001\u4f53\u91cd...\uff0c\u884c\u4e3a\u6709\u8d70\u3001\u8dd1\u3001\u8df3\u3001\u5403\u996d\u3001\u5531\u6b4c...</p> <p>\u200b   \u8f66\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u5bf9\u8c61\uff0c\u5c5e\u6027\u6709\u8f6e\u80ce\u3001\u65b9\u5411\u76d8\u3001\u8f66\u706f...\uff0c\u884c\u4e3a\u6709\u8f7d\u4eba\u3001\u653e\u97f3\u4e50\u3001\u653e\u7a7a\u8c03...</p> <p>\u200b   \u5177\u6709\u76f8\u540c\u6027\u8d28\u7684 \u5bf9\u8c61 \uff0c\u6211\u4eec\u53ef\u4ee5\u62bd\u8c61\u79f0\u4e3a \u7c7b \uff0c\u4eba\u5c5e\u4e8e\u4eba\u7c7b\uff0c\u8f66\u5c5e\u4e8e\u8f66\u7c7b\u3002</p>"}, {"location": "record/algo/code/cpp/01_basic/#41", "title": "4.1 \u5c01\u88c5", "text": ""}, {"location": "record/algo/code/cpp/01_basic/#411", "title": "4.1.1  \u5c01\u88c5\u7684\u610f\u4e49", "text": "<p>\u5c01\u88c5\u662fC++\u9762\u5411\u5bf9\u8c61\u4e09\u5927\u7279\u6027\u4e4b\u4e00</p> <p>\u5c01\u88c5\u7684\u610f\u4e49\uff1a</p> <ul> <li>\u5c06\u5c5e\u6027\u548c\u884c\u4e3a\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u8868\u73b0\u751f\u6d3b\u4e2d\u7684\u4e8b\u7269</li> <li>\u5c06\u5c5e\u6027\u548c\u884c\u4e3a\u52a0\u4ee5\u6743\u9650\u63a7\u5236</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_21", "title": "\u5c01\u88c5\u610f\u4e49\u4e00", "text": "<p>\u5728\u8bbe\u8ba1\u7c7b\u7684\u65f6\u5019\uff0c\u5c5e\u6027\u548c\u884c\u4e3a\u5199\u5728\u4e00\u8d77\uff0c\u8868\u73b0\u4e8b\u7269 \u8bed\u6cd5\uff1a <code>class \u7c7b\u540d{   \u8bbf\u95ee\u6743\u9650\uff1a \u5c5e\u6027  / \u884c\u4e3a  };</code> \u793a\u4f8b1\uff1a \u8bbe\u8ba1\u4e00\u4e2a\u5706\u7c7b\uff0c\u6c42\u5706\u7684\u5468\u957f \u793a\u4f8b\u4ee3\u7801\uff1a ```C++ //\u5706\u5468\u7387 const double PI = 3.14;</p> <p>//1\u3001\u5c01\u88c5\u7684\u610f\u4e49 //\u5c06\u5c5e\u6027\u548c\u884c\u4e3a\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u7528\u6765\u8868\u73b0\u751f\u6d3b\u4e2d\u7684\u4e8b\u7269</p> <p>//\u5c01\u88c5\u4e00\u4e2a\u5706\u7c7b\uff0c\u6c42\u5706\u7684\u5468\u957f //class\u4ee3\u8868\u8bbe\u8ba1\u4e00\u4e2a\u7c7b\uff0c\u540e\u9762\u8ddf\u7740\u7684\u662f\u7c7b\u540d class Circle { public:  //\u8bbf\u95ee\u6743\u9650  \u516c\u5171\u7684\u6743\u9650</p> <pre><code>//\u5c5e\u6027\nint m_r;//\u534a\u5f84\n\n//\u884c\u4e3a\n//\u83b7\u53d6\u5230\u5706\u7684\u5468\u957f\ndouble calculateZC()\n{\n    //2 * pi  * r\n    //\u83b7\u53d6\u5706\u7684\u5468\u957f\n    return  2 * PI * m_r;\n}\n</code></pre> <p>};</p> <p>int main() {</p> <pre><code>//\u901a\u8fc7\u5706\u7c7b\uff0c\u521b\u5efa\u5706\u7684\u5bf9\u8c61\n// c1\u5c31\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u5706\nCircle c1;\nc1.m_r = 10; //\u7ed9\u5706\u5bf9\u8c61\u7684\u534a\u5f84 \u8fdb\u884c\u8d4b\u503c\u64cd\u4f5c\n\n//2 * pi * 10 = = 62.8\ncout &lt;&lt; \"\u5706\u7684\u5468\u957f\u4e3a\uff1a \" &lt;&lt; c1.calculateZC() &lt;&lt; endl;\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} <code>**\u793a\u4f8b2\uff1a** \u8bbe\u8ba1\u4e00\u4e2a\u5b66\u751f\u7c7b\uff0c\u5c5e\u6027\u6709\u59d3\u540d\u548c\u5b66\u53f7\uff0c\u53ef\u4ee5\u7ed9\u59d3\u540d\u548c\u5b66\u53f7\u8d4b\u503c\uff0c\u53ef\u4ee5\u663e\u793a\u5b66\u751f\u7684\u59d3\u540d\u548c\u5b66\u53f7 **\u793a\u4f8b2\u4ee3\u7801\uff1a**</code>C++ //\u5b66\u751f\u7c7b class Student { public:     void setName(string name) {         m_name = name;     }     void setID(int id) {         m_id = id;     }</p> <pre><code>void showStudent() {\n    cout &lt;&lt; \"name:\" &lt;&lt; m_name &lt;&lt; \" ID:\" &lt;&lt; m_id &lt;&lt; endl;\n}\n</code></pre> <p>public:     string m_name;     int m_id; };</p> <p>int main() {</p> <pre><code>Student stu;\nstu.setName(\"\u5fb7\u739b\u897f\u4e9a\");\nstu.setID(250);\nstu.showStudent();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>}</p> <pre><code>##### \u5c01\u88c5\u610f\u4e49\u4e8c\uff1a\n\n\u7c7b\u5728\u8bbe\u8ba1\u65f6\uff0c\u53ef\u4ee5\u628a\u5c5e\u6027\u548c\u884c\u4e3a\u653e\u5728\u4e0d\u540c\u7684\u6743\u9650\u4e0b\uff0c\u52a0\u4ee5\u63a7\u5236\n\n\u8bbf\u95ee\u6743\u9650\u6709\u4e09\u79cd\uff1a\n\n1. public        \u516c\u5171\u6743\u9650   \u7c7b\u5185\u53ef\u4ee5\u8bbf\u95ee  \u7c7b\u5916\u53ef\u4ee5\u8bbf\u95ee\n2. protected \u4fdd\u62a4\u6743\u9650   \u7c7b\u5185\u53ef\u4ee5\u8bbf\u95ee  \u7c7b\u5916\u4e0d\u53ef\u4ee5\u8bbf\u95ee  \u5b50\u7c7b\u53ef\u4ee5\u8bbf\u95ee\u7236\u7c7b\u7684\u4fdd\u62a4\u5185\u5bb9\n3. private      \u79c1\u6709\u6743\u9650   \u7c7b\u5185\u53ef\u4ee5\u8bbf\u95ee  \u7c7b\u5916\u4e0d\u53ef\u4ee5\u8bbf\u95ee  \u5b50\u7c7b\u4e0d\u53ef\u4ee5\u8bbf\u95ee\u7236\u7c7b\u7684\u79c1\u6709\u5185\u5bb9 **\u793a\u4f8b\uff1a** ```C++\n//\u4e09\u79cd\u6743\u9650\n//\u516c\u5171\u6743\u9650  public     \u7c7b\u5185\u53ef\u4ee5\u8bbf\u95ee  \u7c7b\u5916\u53ef\u4ee5\u8bbf\u95ee\n//\u4fdd\u62a4\u6743\u9650  protected  \u7c7b\u5185\u53ef\u4ee5\u8bbf\u95ee  \u7c7b\u5916\u4e0d\u53ef\u4ee5\u8bbf\u95ee\n//\u79c1\u6709\u6743\u9650  private    \u7c7b\u5185\u53ef\u4ee5\u8bbf\u95ee  \u7c7b\u5916\u4e0d\u53ef\u4ee5\u8bbf\u95ee\n\nclass Person\n{\n    //\u59d3\u540d  \u516c\u5171\u6743\u9650\npublic:\n    string m_Name;\n\n    //\u6c7d\u8f66  \u4fdd\u62a4\u6743\u9650\nprotected:\n    string m_Car;\n\n    //\u94f6\u884c\u5361\u5bc6\u7801  \u79c1\u6709\u6743\u9650\nprivate:\n    int m_Password;\n\npublic:\n    void func()\n    {\n        m_Name = \"\u5f20\u4e09\";\n        m_Car = \"\u62d6\u62c9\u673a\";\n        m_Password = 123456;\n    }\n};\n\nint main() {\n\n    Person p;\n    p.m_Name = \"\u674e\u56db\";\n    //p.m_Car = \"\u5954\u9a70\";  //\u4fdd\u62a4\u6743\u9650\u7c7b\u5916\u8bbf\u95ee\u4e0d\u5230\n    //p.m_Password = 123; //\u79c1\u6709\u6743\u9650\u7c7b\u5916\u8bbf\u95ee\u4e0d\u5230\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#412-structclass", "title": "4.1.2 struct\u548cclass\u533a\u522b", "text": "<p>\u5728C++\u4e2d struct\u548cclass\u552f\u4e00\u7684 \u533a\u522b \u5c31\u5728\u4e8e \u9ed8\u8ba4\u7684\u8bbf\u95ee\u6743\u9650\u4e0d\u540c \u533a\u522b\uff1a</p> <ul> <li>struct \u9ed8\u8ba4\u6743\u9650\u4e3a\u516c\u5171  public</li> <li>class   \u9ed8\u8ba4\u6743\u9650\u4e3a\u79c1\u6709  private</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_22", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class C1\n{\n    int  m_A; //\u9ed8\u8ba4\u662f\u79c1\u6709\u6743\u9650\n};\n\nstruct C2\n{\n    int m_A;  //\u9ed8\u8ba4\u662f\u516c\u5171\u6743\u9650\n};\n\nint main() {\n\n    C1 c1;\n    c1.m_A = 10; //\u9519\u8bef\uff0c\u8bbf\u95ee\u6743\u9650\u662f\u79c1\u6709\n\n    C2 c2;\n    c2.m_A = 10; //\u6b63\u786e\uff0c\u8bbf\u95ee\u6743\u9650\u662f\u516c\u5171\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#413-1-2", "title": "4.1.3 \u6210\u5458\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u79c1\u6709 \u4f18\u70b91\uff1a \u5c06\u6240\u6709\u6210\u5458\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u79c1\u6709\uff0c\u53ef\u4ee5\u81ea\u5df1\u63a7\u5236\u8bfb\u5199\u6743\u9650 \u4f18\u70b92\uff1a \u5bf9\u4e8e\u5199\u6743\u9650\uff0c\u6211\u4eec\u53ef\u4ee5\u68c0\u6d4b\u6570\u636e\u7684\u6709\u6548\u6027", "text": ""}, {"location": "record/algo/code/cpp/01_basic/#_23", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Person {\npublic:\n\n    //\u59d3\u540d\u8bbe\u7f6e\u53ef\u8bfb\u53ef\u5199\n    void setName(string name) {\n        m_Name = name;\n    }\n    string getName()\n    {\n        return m_Name;\n    }\n\n\n    //\u83b7\u53d6\u5e74\u9f84 \n    int getAge() {\n        return m_Age;\n    }\n    //\u8bbe\u7f6e\u5e74\u9f84\n    void setAge(int age) {\n        if (age &lt; 0 || age &gt; 150) {\n            cout &lt;&lt; \"\u4f60\u4e2a\u8001\u5996\u7cbe!\" &lt;&lt; endl;\n            return;\n        }\n        m_Age = age;\n    }\n\n    //\u60c5\u4eba\u8bbe\u7f6e\u4e3a\u53ea\u5199\n    void setLover(string lover) {\n        m_Lover = lover;\n    }\n\nprivate:\n    string m_Name; //\u53ef\u8bfb\u53ef\u5199  \u59d3\u540d\n\n    int m_Age; //\u53ea\u8bfb  \u5e74\u9f84\n\n    string m_Lover; //\u53ea\u5199  \u60c5\u4eba\n};\n\n\nint main() {\n\n    Person p;\n    //\u59d3\u540d\u8bbe\u7f6e\n    p.setName(\"\u5f20\u4e09\");\n    cout &lt;&lt; \"\u59d3\u540d\uff1a \" &lt;&lt; p.getName() &lt;&lt; endl;\n\n    //\u5e74\u9f84\u8bbe\u7f6e\n    p.setAge(50);\n    cout &lt;&lt; \"\u5e74\u9f84\uff1a \" &lt;&lt; p.getAge() &lt;&lt; endl;\n\n    //\u60c5\u4eba\u8bbe\u7f6e\n    p.setLover(\"\u82cd\u4e95\");\n    //cout &lt;&lt; \"\u60c5\u4eba\uff1a \" &lt;&lt; p.m_Lover &lt;&lt; endl;  //\u53ea\u5199\u5c5e\u6027\uff0c\u4e0d\u53ef\u4ee5\u8bfb\u53d6\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#42", "title": "4.2 \u5bf9\u8c61\u7684\u521d\u59cb\u5316\u548c\u6e05\u7406", "text": "<p>\u751f\u6d3b\u4e2d\u6211\u4eec\u4e70\u7684\u7535\u5b50\u4ea7\u54c1\u90fd\u57fa\u672c\u4f1a\u6709\u51fa\u5382\u8bbe\u7f6e\uff0c\u5728\u67d0\u4e00\u5929\u6211\u4eec\u4e0d\u7528\u65f6\u5019\u4e5f\u4f1a\u5220\u9664\u4e00\u4e9b\u81ea\u5df1\u4fe1\u606f\u6570\u636e\u4fdd\u8bc1\u5b89\u5168\u3002C++\u4e2d\u7684\u9762\u5411\u5bf9\u8c61\u6765\u6e90\u4e8e\u751f\u6d3b\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u4e5f\u90fd\u4f1a\u6709 \u521d\u59cb\u8bbe\u7f6e \u4ee5\u53ca \u5bf9\u8c61\u9500\u6bc1\u524d\u7684\u6e05\u7406\u6570\u636e \u7684\u8bbe\u7f6e\u3002\u8fd9\u5c31\u5bf9\u5e94\u4e86\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u3002</p>"}, {"location": "record/algo/code/cpp/01_basic/#421", "title": "4.2.1 \u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570", "text": "<p>\u5bf9\u8c61\u7684 \u521d\u59cb\u5316\u548c\u6e05\u7406 \u4e5f\u662f\u4e24\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u5b89\u5168\u95ee\u9898\uff1a</p> <ul> <li>\u4e00\u4e2a\u5bf9\u8c61\u6216\u8005\u53d8\u91cf\u6ca1\u6709\u521d\u59cb\u72b6\u6001\uff0c\u5bf9\u5176\u4f7f\u7528\u540e\u679c\u662f\u672a\u77e5</li> <li>\u540c\u6837\u7684\u4f7f\u7528\u5b8c\u4e00\u4e2a\u5bf9\u8c61\u6216\u53d8\u91cf\uff0c\u6ca1\u6709\u53ca\u65f6\u6e05\u7406\uff0c\u4e5f\u4f1a\u9020\u6210\u4e00\u5b9a\u7684\u5b89\u5168\u95ee\u9898</li> </ul> <p>c++\u5229\u7528\u4e86 \u6784\u9020\u51fd\u6570 \u548c \u6790\u6784\u51fd\u6570 \u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\uff0c\u8fd9\u4e24\u4e2a\u51fd\u6570\u5c06\u4f1a\u88ab\u7f16\u8bd1\u5668\u81ea\u52a8\u8c03\u7528\uff0c\u5b8c\u6210\u5bf9\u8c61\u521d\u59cb\u5316\u548c\u6e05\u7406\u5de5\u4f5c\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff1a</p> <ul> <li>\u5bf9\u8c61\u7684\u521d\u59cb\u5316\u548c\u6e05\u7406\u5de5\u4f5c\u662f\u7f16\u8bd1\u5668\u5f3a\u5236\u8981\u6211\u4eec\u505a\u7684\u4e8b\u60c5\uff0c\u56e0\u6b64\u5982\u679c \u6211\u4eec\u4e0d\u63d0\u4f9b\u6784\u9020\u548c\u6790\u6784\uff0c\u7f16\u8bd1\u5668\u4f1a\u63d0\u4f9b - \u7f16\u8bd1\u5668\u63d0\u4f9b\u7684\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u662f\u7a7a\u5b9e\u73b0\u3002 ##### \u6784\u9020\u51fd\u6570</li> </ul> <p>\u4e3b\u8981\u4f5c\u7528\u5728\u4e8e\u521b\u5efa\u5bf9\u8c61\u65f6\u4e3a\u5bf9\u8c61\u7684\u6210\u5458\u5c5e\u6027\u8d4b\u503c\uff0c\u6784\u9020\u51fd\u6570\u7531\u7f16\u8bd1\u5668\u81ea\u52a8\u8c03\u7528\uff0c\u65e0\u987b\u624b\u52a8\u8c03\u7528\u3002 \u6784\u9020\u51fd\u6570\u8bed\u6cd5\uff1a <code>\u7c7b\u540d(){}</code></p> <ol> <li>\u6784\u9020\u51fd\u6570\uff0c\u6ca1\u6709\u8fd4\u56de\u503c\u4e5f\u4e0d\u5199void</li> <li>\u51fd\u6570\u540d\u79f0\u4e0e\u7c7b\u540d\u76f8\u540c</li> <li>\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u6709\u53c2\u6570\uff0c\u56e0\u6b64\u53ef\u4ee5\u53d1\u751f\u91cd\u8f7d</li> <li>\u7a0b\u5e8f\u5728\u8c03\u7528\u5bf9\u8c61\u65f6\u5019\u4f1a\u81ea\u52a8\u8c03\u7528\u6784\u9020\uff0c\u65e0\u987b\u624b\u52a8\u8c03\u7528\uff0c\u800c\u4e14\u53ea\u4f1a\u8c03\u7528\u4e00\u6b21</li> </ol>"}, {"location": "record/algo/code/cpp/01_basic/#_24", "title": "\u6790\u6784\u51fd\u6570", "text": "<p>\u4e3b\u8981\u4f5c\u7528\u5728\u4e8e\u5bf9\u8c61 \u9500\u6bc1\u524d \u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\uff0c\u6267\u884c\u4e00\u4e9b\u6e05\u7406\u5de5\u4f5c\u3002 \u6790\u6784\u51fd\u6570\u8bed\u6cd5\uff1a <code>~\u7c7b\u540d(){}</code></p> <ol> <li>\u6790\u6784\u51fd\u6570\uff0c\u6ca1\u6709\u8fd4\u56de\u503c\u4e5f\u4e0d\u5199void</li> <li>\u51fd\u6570\u540d\u79f0\u4e0e\u7c7b\u540d\u76f8\u540c\uff0c\u5728\u540d\u79f0\u524d\u52a0\u4e0a\u7b26\u53f7  ~</li> <li>\u6790\u6784\u51fd\u6570 \u4e0d\u53ef\u4ee5\u6709\u53c2\u6570\uff0c\u56e0\u6b64\u4e0d\u53ef\u4ee5\u53d1\u751f\u91cd\u8f7d 4. \u7a0b\u5e8f\u5728\u5bf9\u8c61\u9500\u6bc1\u524d\u4f1a\u81ea\u52a8\u8c03\u7528\u6790\u6784\uff0c\u65e0\u987b\u624b\u52a8\u8c03\u7528\uff0c\u800c\u4e14\u53ea\u4f1a\u8c03\u7528\u4e00\u6b21</li> </ol> <pre><code>class Person\n{\npublic:\n    //\u6784\u9020\u51fd\u6570\n    Person()\n    {\n        cout &lt;&lt; \"Person\u7684\u6784\u9020\u51fd\u6570\u8c03\u7528\" &lt;&lt; endl;\n    }\n    //\u6790\u6784\u51fd\u6570\n    ~Person()\n    {\n        cout &lt;&lt; \"Person\u7684\u6790\u6784\u51fd\u6570\u8c03\u7528\" &lt;&lt; endl;\n    }\n\n};\n\nvoid test01()\n{\n    Person p;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#422", "title": "4.2.2 \u6784\u9020\u51fd\u6570\u7684\u5206\u7c7b\u53ca\u8c03\u7528", "text": ""}, {"location": "record/algo/code/cpp/01_basic/#_25", "title": "\u4e24\u79cd\u5206\u7c7b\u65b9\u5f0f\uff1a", "text": "<ul> <li> <p>\u6309\u53c2\u6570\u5206\u4e3a\uff1a \u65e0\u53c2\u6784\u9020\uff08\u9ed8\u8ba4\uff09\u548c\u6709\u53c2\u6784\u9020</p> </li> <li> <p>\u6309\u7c7b\u578b\u5206\u4e3a\uff1a \u666e\u901a\u6784\u9020\u548c\u62f7\u8d1d\u6784\u9020</p> </li> </ul> <pre><code>// \u62f7\u8d1d\u6784\u9020\nclass Person {\n  public:\n      // 1.const\uff1b2.\u4f20\u5165\u5f15\u7528\n      Person(const Person &amp;p) {}\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#_26", "title": "\u4e09\u79cd\u8c03\u7528\u65b9\u5f0f\uff1a", "text": "<ul> <li>\u62ec\u53f7\u6cd5</li> </ul> <pre><code>Person p(10);\nPerson p; // \u6ce8\u610f\uff0c\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u65f6\uff0c\u4e0d\u80fd\u52a0()\uff1b\u56e0\u4e3a\u7f16\u8bd1\u5668\u4f1a\u8ba4\u4e3a\u662f\u4e00\u4e2a\u51fd\u6570\u7684\u58f0\u660e Person p();\n</code></pre> <ul> <li>\u663e\u793a\u6cd5</li> </ul> <pre><code>Person p = Person(10);\n\nPerson(10); //\u8fd9\u662f\u4e00\u4e2a\u201c\u533f\u540d\u5bf9\u8c61\u201d\u3002\u7279\u70b9\uff1a\u5f53\u524d\u884c\u6267\u884c\u7ed3\u675f\u540e\uff0c\u7cfb\u7edf\u4f1a\u7acb\u5373\u56de\u6536\u533f\u540d\u5bf9\u8c61\u3002\n\nPerson(p); //\u6ce8\u610f\uff0c\u4e0d\u8981\u5229\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u533f\u540d\u5bf9\u50cf\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u4f1a\u8ba4\u4e3a\u662f Person (p); \u4e3a Person p; \u5bfc\u81f4\u53d8\u91cf\u91cd\u590d\u58f0\u660e\u3002\n</code></pre> <ul> <li>\u9690\u5f0f\u8f6c\u6362\u6cd5</li> </ul> <pre><code>person p4=10; //Person p4=Person(10);\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#_27", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>//1\u3001\u6784\u9020\u51fd\u6570\u5206\u7c7b\n// \u6309\u7167\u53c2\u6570\u5206\u7c7b\u5206\u4e3a \u6709\u53c2\u548c\u65e0\u53c2\u6784\u9020   \u65e0\u53c2\u53c8\u79f0\u4e3a\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\n// \u6309\u7167\u7c7b\u578b\u5206\u7c7b\u5206\u4e3a \u666e\u901a\u6784\u9020\u548c\u62f7\u8d1d\u6784\u9020\n\nclass Person {\npublic:\n    //\u65e0\u53c2\uff08\u9ed8\u8ba4\uff09\u6784\u9020\u51fd\u6570\n    Person() {\n        cout &lt;&lt; \"\u65e0\u53c2\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n    }\n    //\u6709\u53c2\u6784\u9020\u51fd\u6570\n    Person(int a) {\n        age = a;\n        cout &lt;&lt; \"\u6709\u53c2\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n    }\n    //\u62f7\u8d1d\u6784\u9020\u51fd\u6570\n    Person(const Person&amp; p) {\n        age = p.age;\n        cout &lt;&lt; \"\u62f7\u8d1d\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n    }\n    //\u6790\u6784\u51fd\u6570\n    ~Person() {\n        cout &lt;&lt; \"\u6790\u6784\u51fd\u6570!\" &lt;&lt; endl;\n    }\npublic:\n    int age;\n};\n\n//2\u3001\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\n//\u8c03\u7528\u65e0\u53c2\u6784\u9020\u51fd\u6570\nvoid test01() {\n    Person p; //\u8c03\u7528\u65e0\u53c2\u6784\u9020\u51fd\u6570\n}\n\n//\u8c03\u7528\u6709\u53c2\u7684\u6784\u9020\u51fd\u6570\nvoid test02() {\n\n    //2.1  \u62ec\u53f7\u6cd5\uff0c\u5e38\u7528\n    Person p1(10);\n    //\u6ce8\u610f1\uff1a\u8c03\u7528\u65e0\u53c2\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u52a0\u62ec\u53f7\uff0c\u5982\u679c\u52a0\u4e86\u7f16\u8bd1\u5668\u8ba4\u4e3a\u8fd9\u662f\u4e00\u4e2a\u51fd\u6570\u58f0\u660e\n    //Person p2();\n\n    //2.2 \u663e\u5f0f\u6cd5\n    Person p2 = Person(10); \n    Person p3 = Person(p2);\n    //Person(10)\u5355\u72ec\u5199\u5c31\u662f\u533f\u540d\u5bf9\u8c61  \u5f53\u524d\u884c\u7ed3\u675f\u4e4b\u540e\uff0c\u9a6c\u4e0a\u6790\u6784\n\n    //2.3 \u9690\u5f0f\u8f6c\u6362\u6cd5\n    Person p4 = 10; // Person p4 = Person(10); \n    Person p5 = p4; // Person p5 = Person(p4); \n\n    //\u6ce8\u610f2\uff1a\u4e0d\u80fd\u5229\u7528 \u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u521d\u59cb\u5316\u533f\u540d\u5bf9\u8c61 \u7f16\u8bd1\u5668\u8ba4\u4e3a\u662f\u5bf9\u8c61\u58f0\u660e\n    //Person p5(p4);\n}\n\nint main() {\n\n    test01();\n    //test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#423", "title": "4.2.3 \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u8c03\u7528\u65f6\u673a", "text": "<p>C++\u4e2d\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u8c03\u7528\u65f6\u673a\u901a\u5e38\u6709\u4e09\u79cd\u60c5\u51b5</p> <ul> <li>\u4f7f\u7528\u4e00\u4e2a\u5df2\u7ecf\u521b\u5efa\u5b8c\u6bd5\u7684\u5bf9\u8c61\u6765\u521d\u59cb\u5316\u4e00\u4e2a\u65b0\u5bf9\u8c61</li> <li>\u503c\u4f20\u9012\u7684\u65b9\u5f0f\u7ed9\u51fd\u6570\u53c2\u6570\u4f20\u503c</li> <li>\u4ee5\u503c\u65b9\u5f0f\u8fd4\u56de\u5c40\u90e8\u5bf9\u8c61</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_28", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Person {\npublic:\n    Person() {\n        cout &lt;&lt; \"\u65e0\u53c2\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n        mAge = 0;\n    }\n    Person(int age) {\n        cout &lt;&lt; \"\u6709\u53c2\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n        mAge = age;\n    }\n    Person(const Person&amp; p) {\n        cout &lt;&lt; \"\u62f7\u8d1d\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n        mAge = p.mAge;\n    }\n    //\u6790\u6784\u51fd\u6570\u5728\u91ca\u653e\u5185\u5b58\u4e4b\u524d\u8c03\u7528\n    ~Person() {\n        cout &lt;&lt; \"\u6790\u6784\u51fd\u6570!\" &lt;&lt; endl;\n    }\npublic:\n    int mAge;\n};\n\n//1. \u4f7f\u7528\u4e00\u4e2a\u5df2\u7ecf\u521b\u5efa\u5b8c\u6bd5\u7684\u5bf9\u8c61\u6765\u521d\u59cb\u5316\u4e00\u4e2a\u65b0\u5bf9\u8c61\nvoid test01() {\n\n    Person man(100); //p\u5bf9\u8c61\u5df2\u7ecf\u521b\u5efa\u5b8c\u6bd5\n    Person newman(man); //\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\n    Person newman2 = man; //\u62f7\u8d1d\u6784\u9020\n\n    //Person newman3;\n    //newman3 = man; //\u4e0d\u662f\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u8d4b\u503c\u64cd\u4f5c\n}\n\n//2. \u503c\u4f20\u9012\u7684\u65b9\u5f0f\u7ed9\u51fd\u6570\u53c2\u6570\u4f20\u503c\n//\u76f8\u5f53\u4e8ePerson p1 = p;\nvoid doWork(Person p1) {}\nvoid test02() {\n    Person p; //\u65e0\u53c2\u6784\u9020\u51fd\u6570\n    doWork(p);\n}\n\n//3. \u4ee5\u503c\u65b9\u5f0f\u8fd4\u56de\u5c40\u90e8\u5bf9\u8c61\nPerson doWork2()\n{\n    Person p1;\n    cout &lt;&lt; (int *)&amp;p1 &lt;&lt; endl;\n    return p1;\n}\n\nvoid test03()\n{\n    Person p = doWork2();\n    cout &lt;&lt; (int *)&amp;p &lt;&lt; endl;\n}\n\n\nint main() {\n\n    //test01();\n    //test02();\n    test03();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#424", "title": "4.2.4 \u6784\u9020\u51fd\u6570\u8c03\u7528\u89c4\u5219", "text": "<p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cc++\u7f16\u8bd1\u5668\u81f3\u5c11\u7ed9\u4e00\u4e2a\u7c7b\u6dfb\u52a03\u4e2a\u51fd\u6570</p> <p>1\uff0e\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff1a\u65e0\u53c2\uff0c\u51fd\u6570\u4f53\u4e3a\u7a7a</p> <p>2\uff0e\u9ed8\u8ba4\u6790\u6784\u51fd\u6570\uff1a\u65e0\u53c2\uff0c\u51fd\u6570\u4f53\u4e3a\u7a7a</p> <p>3\uff0e\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5bf9\u5c5e\u6027\u8fdb\u884c\u503c\u62f7\u8d1d</p> <p>\u6784\u9020\u51fd\u6570\u8c03\u7528\u89c4\u5219\u5982\u4e0b\uff1a</p> <ul> <li> <p>\u5982\u679c\u7528\u6237\u5b9a\u4e49\u6709\u53c2\u6784\u9020\u51fd\u6570\uff0cc++ \u4e0d\u4f1a\u518d\u63d0\u4f9b\u9ed8\u8ba4\u65e0\u53c2\u6784\u9020 \uff0c\u4f46\u662f\u4f1a\u63d0\u4f9b\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020</p> </li> <li> <p>\u5982\u679c\u7528\u6237\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0cc++\u4e0d\u4f1a\u518d\u63d0\u4f9b\u5176\u4ed6\u6784\u9020\u51fd\u6570</p> </li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_29", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Person {\npublic:\n    //\u65e0\u53c2\uff08\u9ed8\u8ba4\uff09\u6784\u9020\u51fd\u6570\n    Person() {\n        cout &lt;&lt; \"\u65e0\u53c2\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n    }\n    //\u6709\u53c2\u6784\u9020\u51fd\u6570\n    Person(int a) {\n        age = a;\n        cout &lt;&lt; \"\u6709\u53c2\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n    }\n    //\u62f7\u8d1d\u6784\u9020\u51fd\u6570\n    Person(const Person&amp; p) {\n        age = p.age;\n        cout &lt;&lt; \"\u62f7\u8d1d\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n    }\n    //\u6790\u6784\u51fd\u6570\n    ~Person() {\n        cout &lt;&lt; \"\u6790\u6784\u51fd\u6570!\" &lt;&lt; endl;\n    }\npublic:\n    int age;\n};\n\nvoid test01()\n{\n    Person p1(18);\n    //\u5982\u679c\u4e0d\u5199\u62f7\u8d1d\u6784\u9020\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u6dfb\u52a0\u62f7\u8d1d\u6784\u9020\uff0c\u5e76\u4e14\u505a\u6d45\u62f7\u8d1d\u64cd\u4f5c\n    Person p2(p1);\n\n    cout &lt;&lt; \"p2\u7684\u5e74\u9f84\u4e3a\uff1a \" &lt;&lt; p2.age &lt;&lt; endl;\n}\n\nvoid test02()\n{\n    //\u5982\u679c\u7528\u6237\u63d0\u4f9b\u6709\u53c2\u6784\u9020\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\uff0c\u4f1a\u63d0\u4f9b\u62f7\u8d1d\u6784\u9020\n    Person p1; //\u6b64\u65f6\u5982\u679c\u7528\u6237\u81ea\u5df1\u6ca1\u6709\u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\uff0c\u4f1a\u51fa\u9519\n    Person p2(10); //\u7528\u6237\u63d0\u4f9b\u7684\u6709\u53c2\n    Person p3(p2); //\u6b64\u65f6\u5982\u679c\u7528\u6237\u6ca1\u6709\u63d0\u4f9b\u62f7\u8d1d\u6784\u9020\uff0c\u7f16\u8bd1\u5668\u4f1a\u63d0\u4f9b\n\n    //\u5982\u679c\u7528\u6237\u63d0\u4f9b\u62f7\u8d1d\u6784\u9020\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u63d0\u4f9b\u5176\u4ed6\u6784\u9020\u51fd\u6570\n    Person p4; //\u6b64\u65f6\u5982\u679c\u7528\u6237\u81ea\u5df1\u6ca1\u6709\u63d0\u4f9b\u9ed8\u8ba4\u6784\u9020\uff0c\u4f1a\u51fa\u9519\n    Person p5(10); //\u6b64\u65f6\u5982\u679c\u7528\u6237\u81ea\u5df1\u6ca1\u6709\u63d0\u4f9b\u6709\u53c2\uff0c\u4f1a\u51fa\u9519\n    Person p6(p5); //\u7528\u6237\u81ea\u5df1\u63d0\u4f9b\u62f7\u8d1d\u6784\u9020\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#425", "title": "4.2.5 \u6df1\u62f7\u8d1d\u4e0e\u6d45\u62f7\u8d1d", "text": "<p>\u6df1\u6d45\u62f7\u8d1d\u662f\u9762\u8bd5\u7ecf\u5178\u95ee\u9898\uff0c\u4e5f\u662f\u5e38\u89c1\u7684\u4e00\u4e2a\u5751 \u6d45\u62f7\u8d1d \uff1a\u7b80\u5355\u7684\u8d4b\u503c\u62f7\u8d1d\u64cd\u4f5c \u6df1\u62f7\u8d1d \uff1a\u5728\u5806\u533a\u91cd\u65b0\u7533\u8bf7\u7a7a\u95f4\uff0c\u8fdb\u884c\u62f7\u8d1d\u64cd\u4f5c</p> <ul> <li>\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u7c7b\u7684\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4e2d\u662f\u6d45\u62f7\u8d1d\uff0c\u5982\u6709\u5bf9\u8c61b\u662f\u5bf9\u8c61a\u7684\u6d45\u62f7\u8d1d\uff0c\u4e14a\u4e2d\u5305\u542b\u5806\u4e2d\u7684\u7a7a\u95f4\uff0c\u5728\u4e24\u4e2a\u5bf9\u8c61\u88ab\u91ca\u653e\u65f6\uff0c\u6790\u6784\u51fd\u6570\u4e2d\u4f1a\u91ca\u653e\u5806\u4e2d\u7684\u7a7a\u95f4\uff0c\u800c\u51fa\u73b0\u540c\u4e00\u5757\u7a7a\u95f4\u88ab\u91cd\u590d\u91ca\u653e\u7684\u95ee\u9898\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</li> </ul> <p></p> <p>\u89e3\u51b3\u65b9\u6cd5\u5c31\u662f\u5728\u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u8fdb\u884c\u6df1\u62f7\u8d1d\uff0c\u5373\u7a0b\u5e8f\u5458\u65b0\u7533\u8bf7\u4e00\u5757\u5185\u5b58\u7528\u6765\u62f7\u8d1d\u5806\u4e2d\u7684\u5185\u5bb9\uff0c\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p> \u603b\u7ed3 \uff1a\u5982\u679c\u5c5e\u6027\u6709\u5728 \u5806\u533a \u5f00\u8f9f\u7684\uff0c\u4e00\u5b9a\u8981 \u81ea\u5df1\u63d0\u4f9b\u62f7\u8d1d\u6784\u9020\u51fd\u6570 \uff0c\u9632\u6b62\u6d45\u62f7\u8d1d\u5e26\u6765\u7684\u95ee\u9898\u3002</p>"}, {"location": "record/algo/code/cpp/01_basic/#_30", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Person {\npublic:\n    //\u65e0\u53c2\uff08\u9ed8\u8ba4\uff09\u6784\u9020\u51fd\u6570\n    Person() {\n        cout &lt;&lt; \"\u65e0\u53c2\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n    }\n    //\u6709\u53c2\u6784\u9020\u51fd\u6570\n    Person(int age \uff0cint height) {\n\n        cout &lt;&lt; \"\u6709\u53c2\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n\n        m_age = age;\n        m_height = new int(height);\n\n    }\n    //\u62f7\u8d1d\u6784\u9020\u51fd\u6570  \n    Person(const Person&amp; p) {\n        cout &lt;&lt; \"\u62f7\u8d1d\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n        //\u5982\u679c\u4e0d\u5229\u7528\u6df1\u62f7\u8d1d\u5728\u5806\u533a\u521b\u5efa\u65b0\u5185\u5b58\uff0c\u4f1a\u5bfc\u81f4\u6d45\u62f7\u8d1d\u5e26\u6765\u7684\u91cd\u590d\u91ca\u653e\u5806\u533a\u95ee\u9898\n        m_age = p.m_age;\n        m_height = new int(*p.m_height);\n\n    }\n\n    //\u6790\u6784\u51fd\u6570\n    ~Person() {\n        cout &lt;&lt; \"\u6790\u6784\u51fd\u6570!\" &lt;&lt; endl;\n        if (m_height != NULL)\n        {\n            delete m_height;\n        }\n    }\npublic:\n    int m_age;\n    int* m_height;\n};\n\nvoid test01()\n{\n    Person p1(18\uff0c 180);\n\n    Person p2(p1);\n\n    cout &lt;&lt; \"p1\u7684\u5e74\u9f84\uff1a \" &lt;&lt; p1.m_age &lt;&lt; \" \u8eab\u9ad8\uff1a \" &lt;&lt; *p1.m_height &lt;&lt; endl;\n\n    cout &lt;&lt; \"p2\u7684\u5e74\u9f84\uff1a \" &lt;&lt; p2.m_age &lt;&lt; \" \u8eab\u9ad8\uff1a \" &lt;&lt; *p2.m_height &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#426-c-1122", "title": "4.2.6 \u521d\u59cb\u5316\u5217\u8868 \u4f5c\u7528\uff1a C++\u63d0\u4f9b\u4e86\u521d\u59cb\u5316\u5217\u8868\u8bed\u6cd5\uff0c\u7528\u6765\u521d\u59cb\u5316\u5c5e\u6027 \u8bed\u6cd5\uff1a <code>\u6784\u9020\u51fd\u6570()\uff1a\u5c5e\u60271(\u503c1)\uff0c\u5c5e\u60272\uff08\u503c2\uff09... {}</code>", "text": ""}, {"location": "record/algo/code/cpp/01_basic/#_31", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Person {\npublic:\n\n    ////\u4f20\u7edf\u65b9\u5f0f\u521d\u59cb\u5316\n    //Person(int a\uff0c int b\uff0c int c) {\n    //  m_A = a;\n    //  m_B = b;\n    //  m_C = c;\n    //}\n\n    //\u521d\u59cb\u5316\u5217\u8868\u65b9\u5f0f\u521d\u59cb\u5316\n    Person(int a\uff0c int b\uff0c int c) :m_A(a)\uff0c m_B(b)\uff0c m_C(c) {}\n    void PrintPerson() {\n        cout &lt;&lt; \"mA:\" &lt;&lt; m_A &lt;&lt; endl;\n        cout &lt;&lt; \"mB:\" &lt;&lt; m_B &lt;&lt; endl;\n        cout &lt;&lt; \"mC:\" &lt;&lt; m_C &lt;&lt; endl;\n    }\nprivate:\n    int m_A;\n    int m_B;\n    int m_C;\n};\n\nint main() {\n\n    Person p(1\uff0c 2\uff0c 3);\n    p.PrintPerson();\n\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#427", "title": "4.2.7 \u7c7b\u5bf9\u8c61\u4f5c\u4e3a\u7c7b\u6210\u5458", "text": "<p>C++\u7c7b\u4e2d\u7684\u6210\u5458\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61\uff0c\u6211\u4eec\u79f0\u8be5\u6210\u5458\u4e3a \u5bf9\u8c61\u6210\u5458\u3002</p> <p>\u4f8b\u5982\uff1a</p> <pre><code>class A {}\nclass B\n{\n    A a\uff1b\n}\n</code></pre> <p>B\u7c7b\u4e2d\u6709\u5bf9\u8c61A\u4f5c\u4e3a\u6210\u5458\uff0cA\u4e3a\u5bf9\u8c61\u6210\u5458\u3002</p> <p>\u90a3\u4e48\u5f53\u521b\u5efaB\u5bf9\u8c61\u65f6\uff0c A\u4e0eB\u7684\u6784\u9020\u548c\u6790\u6784\u7684\u987a\u5e8f\u662f\u8c01\u5148\u8c01\u540e \uff1f</p> <ul> <li>\u5f53\u7c7b\u4e2d\u6210\u5458\u662f\u5176\u4ed6\u7c7b\u5bf9\u8c61\u65f6\uff0c\u6211\u4eec\u79f0\u8be5\u6210\u5458\u4e3a\u5bf9\u8c61\u6210\u5458</li> <li>\u6784\u9020\u7684\u987a\u5e8f\u662f\uff1a\u5148\u8c03\u7528\u5bf9\u8c61\u6210\u5458\u7684\u6784\u9020\uff0c\u518d\u8c03\u7528\u672c\u7c7b\u6784\u9020</li> <li>\u6790\u6784\u987a\u5e8f\u4e0e\u6784\u9020\u76f8\u53cd\uff0c\u5373\u5148\u8c03\u7528\u672c\u7c7b\u7684\u6790\u6784\uff0c\u518d\u8c03\u7528\u5bf9\u8c61\u6210\u5458\u6790\u6784</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_32", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Phone\n{\npublic:\n    Phone(string name)\n    {\n        m_PhoneName = name;\n        cout &lt;&lt; \"Phone\u6784\u9020\" &lt;&lt; endl;\n    }\n\n    ~Phone()\n    {\n        cout &lt;&lt; \"Phone\u6790\u6784\" &lt;&lt; endl;\n    }\n\n    string m_PhoneName;\n\n};\n\n\nclass Person\n{\npublic:\n\n    //\u521d\u59cb\u5316\u5217\u8868\u53ef\u4ee5\u544a\u8bc9\u7f16\u8bd1\u5668\u8c03\u7528\u54ea\u4e00\u4e2a\u6784\u9020\u51fd\u6570\n    Person(string name\uff0c string pName) :m_Name(name)\uff0c m_Phone(pName)\n    {\n        cout &lt;&lt; \"Person\u6784\u9020\" &lt;&lt; endl;\n    }\n\n    ~Person()\n    {\n        cout &lt;&lt; \"Person\u6790\u6784\" &lt;&lt; endl;\n    }\n\n    void playGame()\n    {\n        cout &lt;&lt; m_Name &lt;&lt; \" \u4f7f\u7528\" &lt;&lt; m_Phone.m_PhoneName &lt;&lt; \" \u724c\u624b\u673a! \" &lt;&lt; endl;\n    }\n\n    string m_Name;\n    Phone m_Phone;\n\n};\nvoid test01()\n{\n    //\u5f53\u7c7b\u4e2d\u6210\u5458\u662f\u5176\u4ed6\u7c7b\u5bf9\u8c61\u65f6\uff0c\u6211\u4eec\u79f0\u8be5\u6210\u5458\u4e3a \u5bf9\u8c61\u6210\u5458\n    //\u6784\u9020\u7684\u987a\u5e8f\u662f \uff1a\u5148\u8c03\u7528\u5bf9\u8c61\u6210\u5458\u7684\u6784\u9020\uff0c\u518d\u8c03\u7528\u672c\u7c7b\u6784\u9020\n    //\u6790\u6784\u987a\u5e8f\u4e0e\u6784\u9020\u76f8\u53cd\n    Person p(\"\u5f20\u4e09\" \uff0c \"\u82f9\u679cX\");\n    p.playGame();\n\n}\n\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#428", "title": "4.2.8 \u9759\u6001\u6210\u5458", "text": "<p>\u9759\u6001\u6210\u5458\u5c31\u662f\u5728\u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\u524d\u52a0\u4e0a\u5173\u952e\u5b57static\uff0c\u79f0\u4e3a\u9759\u6001\u6210\u5458\u3002</p> <p>\u9759\u6001\u6210\u5458\u5206\u4e3a\uff1a</p> <ul> <li> <p>\u9759\u6001\u6210\u5458\u53d8\u91cf</p> </li> <li> <p>\u5728\u7f16\u8bd1\u9636\u6bb5\u5206\u914d\u5185\u5b58</p> </li> <li> <p>\u7c7b\u5185\u58f0\u660e\uff0c\u7c7b\u5916\u521d\u59cb\u5316</p> </li> <li> <p>\u6240\u6709\u5bf9\u8c61 \u5171\u4eab\u540c\u4e00\u4efd\u6570\u636e</p> <ul> <li>\u56e0\u6b64\uff0c\u9759\u6001\u6210\u5458\u53d8\u91cf\u6709\u4e24\u79cd\u8bbf\u95ee\u65b9\u5f0f\uff1a</li> </ul> <pre><code>// 1. \u901a\u8fc7\u5bf9\u8c61\nPerson p1; p1.m_A = 100;\n// 2. \u901a\u8fc7\u7c7b\u540d\nPerson::m_A = 100;\n</code></pre> </li> <li> <p>\u9759\u6001\u6210\u5458\u51fd\u6570</p> </li> <li> <p>\u9759\u6001\u6210\u5458\u51fd\u6570\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\u53d8\u91cf</p> </li> <li>\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u4e2a\u51fd\u6570<ul> <li>\u56e0\u6b64\uff0c\u4e0e\u9759\u6001\u6210\u5458\u53d8\u91cf\u7c7b\u4f3c\uff0c\u9759\u6001\u6210\u5458\u53d8\u91cf\u4e5f\u53ef\u901a\u8fc7\u7c7b\u540d\u8fdb\u884c\u8bbf\u95ee</li> </ul> </li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#1_2", "title": "\u793a\u4f8b1 \uff1a\u9759\u6001\u6210\u5458\u53d8\u91cf", "text": "<pre><code>class Person\n{\n\npublic:\n\n    static int m_A; //\u9759\u6001\u6210\u5458\u53d8\u91cf\n\n    //\u9759\u6001\u6210\u5458\u53d8\u91cf\u7279\u70b9\uff1a\n    //1 \u5728\u7f16\u8bd1\u9636\u6bb5\u5206\u914d\u5185\u5b58\n    //2 \u7c7b\u5185\u58f0\u660e\uff0c\u7c7b\u5916\u521d\u59cb\u5316\n    //3 \u6240\u6709\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u4efd\u6570\u636e\n\nprivate:\n    static int m_B; //\u9759\u6001\u6210\u5458\u53d8\u91cf\u4e5f\u662f\u6709\u8bbf\u95ee\u6743\u9650\u7684\n};\nint Person::m_A = 10;\nint Person::m_B = 10;\n\nvoid test01()\n{\n    //\u9759\u6001\u6210\u5458\u53d8\u91cf\u4e24\u79cd\u8bbf\u95ee\u65b9\u5f0f\n\n    //1\u3001\u901a\u8fc7\u5bf9\u8c61\n    Person p1;\n    p1.m_A = 100;\n    cout &lt;&lt; \"p1.m_A = \" &lt;&lt; p1.m_A &lt;&lt; endl;\n\n    Person p2;\n    p2.m_A = 200;\n    cout &lt;&lt; \"p1.m_A = \" &lt;&lt; p1.m_A &lt;&lt; endl; //\u5171\u4eab\u540c\u4e00\u4efd\u6570\u636e\n    cout &lt;&lt; \"p2.m_A = \" &lt;&lt; p2.m_A &lt;&lt; endl;\n\n    //2\u3001\u901a\u8fc7\u7c7b\u540d\n    cout &lt;&lt; \"m_A = \" &lt;&lt; Person::m_A &lt;&lt; endl;\n\n\n    //cout &lt;&lt; \"m_B = \" &lt;&lt; Person::m_B &lt;&lt; endl; //\u79c1\u6709\u6743\u9650\u8bbf\u95ee\u4e0d\u5230\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#2_2", "title": "\u793a\u4f8b2\uff1a\u9759\u6001\u6210\u5458\u51fd\u6570", "text": "<pre><code>class Person\n{\n\npublic:\n\n    //\u9759\u6001\u6210\u5458\u51fd\u6570\u7279\u70b9\uff1a\n    //1 \u7a0b\u5e8f\u5171\u4eab\u4e00\u4e2a\u51fd\u6570\n    //2 \u9759\u6001\u6210\u5458\u51fd\u6570\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\u53d8\u91cf\n\n    static void func()\n    {\n        cout &lt;&lt; \"func\u8c03\u7528\" &lt;&lt; endl;\n        m_A = 100;\n        //m_B = 100; //\u9519\u8bef\uff0c\u4e0d\u53ef\u4ee5\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\n    }\n\n    static int m_A; //\u9759\u6001\u6210\u5458\u53d8\u91cf\n    int m_B; // \nprivate:\n\n    //\u9759\u6001\u6210\u5458\u51fd\u6570\u4e5f\u662f\u6709\u8bbf\u95ee\u6743\u9650\u7684\n    static void func2()\n    {\n        cout &lt;&lt; \"func2\u8c03\u7528\" &lt;&lt; endl;\n    }\n};\nint Person::m_A = 10;\n\n\nvoid test01()\n{\n    //\u9759\u6001\u6210\u5458\u53d8\u91cf\u4e24\u79cd\u8bbf\u95ee\u65b9\u5f0f\n\n    //1\u3001\u901a\u8fc7\u5bf9\u8c61\n    Person p1;\n    p1.func();\n\n    //2\u3001\u901a\u8fc7\u7c7b\u540d\n    Person::func();\n\n\n    //Person::func2(); //\u79c1\u6709\u6743\u9650\u8bbf\u95ee\u4e0d\u5230\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#43-cthis", "title": "4.3 C++\u5bf9\u8c61\u6a21\u578b\u548cthis\u6307\u9488", "text": ""}, {"location": "record/algo/code/cpp/01_basic/#431", "title": "4.3.1 \u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\u5206\u5f00\u5b58\u50a8", "text": "<p>\u5728C++\u4e2d\uff0c\u7c7b\u5185\u7684 \u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\u5206\u5f00\u5b58\u50a8 \uff0c\u4e14 \u53ea\u6709\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u624d\u5c5e\u4e8e\u7c7b\u7684\u5bf9\u8c61 \u4e0a\u3002</p> <ul> <li>\u7279\u6b8a\u60c5\u51b5\uff1a\u7a7a\u5bf9\u8c61\u5360\u7528\u5185\u5b58\u7a7a\u95f4\u4e3a 1 \u5b57\u8282\uff08\u4e3a\u4e86\u533a\u5206\u7a7a\u5bf9\u8c61\u5360\u5185\u5b58\u7684\u4f4d\u7f6e\uff0c\u56e0\u6b64\u6bcf\u4e2a\u7a7a\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684\u5185\u5b58\u5730\u5740\uff09</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_33", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Person {\npublic:\n    Person() {\n        mA = 0;\n    }\n    //\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\u5360\u5bf9\u8c61\u7a7a\u95f4\n    int mA;\n    //\u9759\u6001\u6210\u5458\u53d8\u91cf\u4e0d\u5360\u5bf9\u8c61\u7a7a\u95f4\n    static int mB; \n    //\u51fd\u6570\u4e5f\u4e0d\u5360\u5bf9\u8c61\u7a7a\u95f4\uff0c\u6240\u6709\u51fd\u6570\u5171\u4eab\u4e00\u4e2a\u51fd\u6570\u5b9e\u4f8b\n    void func() {\n        cout &lt;&lt; \"mA:\" &lt;&lt; this-&gt;mA &lt;&lt; endl;\n    }\n    //\u9759\u6001\u6210\u5458\u51fd\u6570\u4e5f\u4e0d\u5360\u5bf9\u8c61\u7a7a\u95f4\n    static void sfunc() {\n    }\n};\n\nint main() {\n\n    cout &lt;&lt; sizeof(Person) &lt;&lt; endl;\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#432-this", "title": "4.3.2 this\u6307\u9488\u6982\u5ff5", "text": "<p>\u901a\u8fc74.3.1\u6211\u4eec\u77e5\u9053\u5728C++\u4e2d\u6210\u5458\u53d8\u91cf\u548c\u6210\u5458\u51fd\u6570\u662f\u5206\u5f00\u5b58\u50a8\u7684\uff0c\u6bcf\u4e00\u4e2a\u975e\u9759\u6001\u6210\u5458\u51fd\u6570 \u53ea\u4f1a\u8bde\u751f\u4e00\u4efd\u51fd\u6570\u5b9e\u4f8b\uff0c\u4e5f\u5c31\u662f\u8bf4\u591a\u4e2a\u540c\u7c7b\u578b\u7684\u5bf9\u8c61\u4f1a\u5171\u7528\u4e00\u5757\u4ee3\u7801 \u3002</p> <p>\u90a3\u4e48\u95ee\u9898\u662f\uff1a\u8fd9\u4e00\u5757\u4ee3\u7801\u662f\u5982\u4f55\u533a\u5206\u90a3\u4e2a\u5bf9\u8c61\u8c03\u7528\u81ea\u5df1\u7684\u5462\uff1f</p> <ul> <li>c++\u901a\u8fc7\u63d0\u4f9b\u7279\u6b8a\u7684\u5bf9\u8c61\u6307\u9488\uff0cthis\u6307\u9488\uff0c\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u3002 this\u6307\u9488\u6307\u5411\u88ab\u8c03\u7528\u7684\u6210\u5458\u51fd\u6570\u6240\u5c5e\u7684\u5bf9\u8c61 - this\u6307\u9488\u662f\u9690\u542b\u6bcf\u4e00\u4e2a\u975e\u9759\u6001\u6210\u5458\u51fd\u6570\u5185\u7684\u4e00\u79cd\u6307\u9488</li> <li> <p>this\u6307\u9488\u4e0d\u9700\u8981\u5b9a\u4e49\uff0c\u76f4\u63a5\u4f7f\u7528\u5373\u53ef this\u6307\u9488\u7684\u7528\u9014 \uff1a</p> </li> <li> <p>\u5f53\u5f62\u53c2\u548c\u6210\u5458\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u53ef\u7528this\u6307\u9488\u6765\u533a\u5206</p> </li> <li>\u5728\u7c7b\u7684\u975e\u9759\u6001\u6210\u5458\u51fd\u6570\u4e2d\u8fd4\u56de\u5bf9\u8c61\u672c\u8eab\uff0c\u53ef\u4f7f\u7528return *this</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_34", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Person\n{\npublic:\n\n    Person(int age)\n    {\n        //1\u3001\u5f53\u5f62\u53c2\u548c\u6210\u5458\u53d8\u91cf\u540c\u540d\u65f6\uff0c\u53ef\u7528this\u6307\u9488\u6765\u533a\u5206\n        this-&gt;age = age;\n    }\n\n    Person&amp; PersonAddPerson(Person p)\n    {\n        this-&gt;age += p.age;\n        //\u8fd4\u56de\u5bf9\u8c61\u672c\u8eab\n        return *this;\n    }\n\n    int age;\n};\n\nvoid test01()\n{\n    Person p1(10);\n    cout &lt;&lt; \"p1.age = \" &lt;&lt; p1.age &lt;&lt; endl;\n\n    Person p2(10);\n    p2.PersonAddPerson(p1).PersonAddPerson(p1).PersonAddPerson(p1);\n    cout &lt;&lt; \"p2.age = \" &lt;&lt; p2.age &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#433", "title": "4.3.3 \u7a7a\u6307\u9488\u8bbf\u95ee\u6210\u5458\u51fd\u6570", "text": "<p>C++\u4e2d\u7a7a\u6307\u9488\u4e5f\u662f\u53ef\u4ee5\u8c03\u7528\u6210\u5458\u51fd\u6570\u7684\uff0c\u4f46\u662f\u4e5f\u8981\u6ce8\u610f\u6709\u6ca1\u6709\u7528\u5230this\u6307\u9488\u3002\u5982\u679c\u7528\u5230this\u6307\u9488\uff0c\u9700\u8981\u52a0\u4ee5\u5224\u65ad\u4fdd\u8bc1\u4ee3\u7801\u7684\u5065\u58ee\u6027\u3002</p>"}, {"location": "record/algo/code/cpp/01_basic/#_35", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>//\u7a7a\u6307\u9488\u8bbf\u95ee\u6210\u5458\u51fd\u6570\nclass Person {\npublic:\n\n    void ShowClassName() {\n        cout &lt;&lt; \"\u6211\u662fPerson\u7c7b!\" &lt;&lt; endl;\n    }\n\n    void ShowPerson() {\n        if (this == NULL) {\n            return;\n        }\n        cout &lt;&lt; mAge &lt;&lt; endl;\n    }\n\npublic:\n    int mAge;\n};\n\nvoid test01()\n{\n    Person * p = NULL;\n    p-&gt;ShowClassName(); //\u7a7a\u6307\u9488\uff0c\u53ef\u4ee5\u8c03\u7528\u6210\u5458\u51fd\u6570\n    p-&gt;ShowPerson();  //\u4f46\u662f\u5982\u679c\u6210\u5458\u51fd\u6570\u4e2d\u7528\u5230\u4e86this\u6307\u9488\uff0c\u5c31\u4e0d\u53ef\u4ee5\u4e86\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#434-const", "title": "4.3.4 const \u4fee\u9970\u6210\u5458\u51fd\u6570 \u5e38\u51fd\u6570 \uff1a", "text": "<ul> <li>\u6210\u5458\u51fd\u6570\u540e\u52a0 <code>const</code> \u540e\u6211\u4eec\u79f0\u4e3a\u8fd9\u4e2a\u51fd\u6570\u4e3a \u5e38\u51fd\u6570 &gt; \u89e3\u91ca\uff1athis\u6307\u9488\u7684\u672c\u8d28\u662f\u6307\u9488\u5e38\u91cf\uff0c\u5373\u6307\u9488\u7684\u6307\u5411\u662f\u4e0d\u53ef\u4ee5\u4fee\u6539\u7684\u3002\u800c\u6210\u5458\u51fd\u6570\u540e\u52a0<code>const</code>\uff0c\u8fd9\u4e2a<code>const</code>\u4fee\u9970\u7684\u662fthis\u6307\u9488\u7684\u6307\u5411\uff0c\u4f7f\u5f97\u6307\u9488\u6307\u5411\u7684\u503c\u4e5f\u4e0d\u80fd\u4fee\u6539\u3002</li> </ul> <pre><code>Person* const this;\n---&gt;\nconst Person* const this;\n</code></pre> <ul> <li> <p>\u5e38\u51fd\u6570\u5185\u4e0d\u53ef\u4ee5\u4fee\u6539\u6210\u5458\u5c5e\u6027</p> </li> <li> <p>\u6210\u5458\u5c5e\u6027\u58f0\u660e\u65f6\u52a0\u5173\u952e\u5b57 <code>mutable</code> \u540e\uff0c\u5728\u5e38\u51fd\u6570\u4e2d\u4f9d\u7136\u53ef\u4ee5\u4fee\u6539 \u5e38\u5bf9\u8c61 \uff1a</p> </li> <li> <p>\u58f0\u660e\u5bf9\u8c61\u524d\u52a0 <code>const</code> \u79f0\u8be5\u5bf9\u8c61\u4e3a\u5e38\u5bf9\u8c61</p> </li> <li>\u5e38\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528\u5e38\u51fd\u6570 ##### \u793a\u4f8b\uff1a</li> </ul> <pre><code>class Person {\npublic:\n    Person() {\n        m_A = 0;\n        m_B = 0;\n    }\n\n    //this\u6307\u9488\u7684\u672c\u8d28\u662f\u4e00\u4e2a\u6307\u9488\u5e38\u91cf\uff0c\u6307\u9488\u7684\u6307\u5411\u4e0d\u53ef\u4fee\u6539\n    //\u5982\u679c\u60f3\u8ba9\u6307\u9488\u6307\u5411\u7684\u503c\u4e5f\u4e0d\u53ef\u4ee5\u4fee\u6539\uff0c\u9700\u8981\u58f0\u660e\u5e38\u51fd\u6570\n    void ShowPerson() const {\n        //const Type* const pointer;\n        //this = NULL; //\u4e0d\u80fd\u4fee\u6539\u6307\u9488\u7684\u6307\u5411 Person* const this;\n        //this-&gt;mA = 100; //\u4f46\u662fthis\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u7684\u6570\u636e\u662f\u53ef\u4ee5\u4fee\u6539\u7684\n\n        //const\u4fee\u9970\u6210\u5458\u51fd\u6570\uff0c\u8868\u793a\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u7684\u6570\u636e\u4e0d\u80fd\u4fee\u6539\uff0c\u9664\u4e86mutable\u4fee\u9970\u7684\u53d8\u91cf\n        this-&gt;m_B = 100;\n    }\n\n    void MyFunc() const {\n        //mA = 10000;\n    }\n\npublic:\n    int m_A;\n    mutable int m_B; //\u53ef\u4fee\u6539 \u53ef\u53d8\u7684\n};\n\n\n//const\u4fee\u9970\u5bf9\u8c61  \u5e38\u5bf9\u8c61\nvoid test01() {\n\n    const Person person; //\u5e38\u91cf\u5bf9\u8c61  \n    cout &lt;&lt; person.m_A &lt;&lt; endl;\n    //person.mA = 100; //\u5e38\u5bf9\u8c61\u4e0d\u80fd\u4fee\u6539\u6210\u5458\u53d8\u91cf\u7684\u503c\uff0c\u4f46\u662f\u53ef\u4ee5\u8bbf\u95ee\n    person.m_B = 100; //\u4f46\u662f\u5e38\u5bf9\u8c61\u53ef\u4ee5\u4fee\u6539mutable\u4fee\u9970\u6210\u5458\u53d8\u91cf\n\n    //\u5e38\u5bf9\u8c61\u8bbf\u95ee\u6210\u5458\u51fd\u6570\n    person.MyFunc(); //\u5e38\u5bf9\u8c61\u4e0d\u80fd\u8c03\u7528const\u7684\u51fd\u6570\n\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#44", "title": "4.4 \u53cb\u5143", "text": "<p>\u751f\u6d3b\u4e2d\u4f60\u7684\u5bb6\u6709\u5ba2\u5385(Public)\uff0c\u6709\u4f60\u7684\u5367\u5ba4(Private)\u3002\u5ba2\u5385\u6240\u6709\u6765\u7684\u5ba2\u4eba\u90fd\u53ef\u4ee5\u8fdb\u53bb\uff0c\u4f46\u662f\u4f60\u7684\u5367\u5ba4\u662f\u79c1\u6709\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\u53ea\u6709\u4f60\u80fd\u8fdb\u53bb\u3002\u4f46\u662f\u5462\uff0c\u4f60\u4e5f\u53ef\u4ee5\u5141\u8bb8\u4f60\u7684\u597d\u95fa\u871c\u597d\u57fa\u53cb\u8fdb\u53bb\u3002</p> <p>\u5728\u7a0b\u5e8f\u91cc\uff0c \u6709\u4e9b\u79c1\u6709\u5c5e\u6027\u4e5f\u60f3\u8ba9\u7c7b\u5916\u7279\u6b8a\u7684\u4e00\u4e9b\u51fd\u6570\u6216\u8005\u7c7b\u8fdb\u884c\u8bbf\u95ee\uff0c\u5c31\u9700\u8981\u7528\u5230\u53cb\u5143\u7684\u6280\u672f \u3002</p> <ul> <li> <p>\u53cb\u5143\u7684\u76ee\u7684\u5c31\u662f\u8ba9\u4e00\u4e2a\u51fd\u6570\u6216\u8005\u7c7b\u8bbf\u95ee\u53e6\u4e00\u4e2a\u7c7b\u4e2d\u79c1\u6709\u6210\u5458\u3002</p> </li> <li> <p>\u53cb\u5143\u7684\u5173\u952e\u5b57\u4e3a <code>friend</code> \u53cb\u5143\u7684\u4e09\u79cd\u5b9e\u73b0 * \u5168\u5c40\u51fd\u6570\u505a\u53cb\u5143</p> </li> <li>\u7c7b\u505a\u53cb\u5143</li> <li>\u6210\u5458\u51fd\u6570\u505a\u53cb\u5143</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#441", "title": "4.4.1 \u5168\u5c40\u51fd\u6570\u505a\u53cb\u5143", "text": "<pre><code>class Building\n{\n    //\u544a\u8bc9\u7f16\u8bd1\u5668 goodGay\u5168\u5c40\u51fd\u6570 \u662f Building\u7c7b\u7684\u597d\u670b\u53cb\uff0c\u53ef\u4ee5\u8bbf\u95ee\u7c7b\u4e2d\u7684\u79c1\u6709\u5185\u5bb9\n    friend void goodGay(Building * building);\n\npublic:\n\n    Building()\n    {\n        this-&gt;m_SittingRoom = \"\u5ba2\u5385\";\n        this-&gt;m_BedRoom = \"\u5367\u5ba4\";\n    }\n\n\npublic:\n    string m_SittingRoom; //\u5ba2\u5385\n\nprivate:\n    string m_BedRoom; //\u5367\u5ba4\n};\n\n\nvoid goodGay(Building * building)\n{\n    cout &lt;&lt; \"\u597d\u57fa\u53cb\u6b63\u5728\u8bbf\u95ee\uff1a \" &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;\n    cout &lt;&lt; \"\u597d\u57fa\u53cb\u6b63\u5728\u8bbf\u95ee\uff1a \" &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;\n}\n\n\nvoid test01()\n{\n    Building b;\n    goodGay(&amp;b);\n}\n\nint main(){\n\n    test01();\n\n    system(\"pause\");\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#442", "title": "4.4.2 \u7c7b\u505a\u53cb\u5143", "text": "<pre><code>class Building;\nclass goodGay\n{\npublic:\n\n    goodGay();\n    void visit();\n\nprivate:\n    Building *building;\n};\n\n\nclass Building\n{\n    //\u544a\u8bc9\u7f16\u8bd1\u5668 goodGay\u7c7b\u662fBuilding\u7c7b\u7684\u597d\u670b\u53cb\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5230Building\u7c7b\u4e2d\u79c1\u6709\u5185\u5bb9\n    friend class goodGay;\n\npublic:\n    Building();\n\npublic:\n    string m_SittingRoom; //\u5ba2\u5385\nprivate:\n    string m_BedRoom;//\u5367\u5ba4\n};\n\nBuilding::Building()\n{\n    this-&gt;m_SittingRoom = \"\u5ba2\u5385\";\n    this-&gt;m_BedRoom = \"\u5367\u5ba4\";\n}\n\ngoodGay::goodGay()\n{\n    building = new Building;\n}\n\nvoid goodGay::visit()\n{\n    cout &lt;&lt; \"\u597d\u57fa\u53cb\u6b63\u5728\u8bbf\u95ee\" &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;\n    cout &lt;&lt; \"\u597d\u57fa\u53cb\u6b63\u5728\u8bbf\u95ee\" &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;\n}\n\nvoid test01()\n{\n    goodGay gg;\n    gg.visit();\n\n}\n\nint main(){\n\n    test01();\n\n    system(\"pause\");\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#443", "title": "4.4.3 \u6210\u5458\u51fd\u6570\u505a\u53cb\u5143", "text": "<pre><code>class Building;\nclass goodGay\n{\npublic:\n\n    goodGay();\n    void visit(); //\u53ea\u8ba9visit\u51fd\u6570\u4f5c\u4e3aBuilding\u7684\u597d\u670b\u53cb\uff0c\u53ef\u4ee5\u53d1\u8bbf\u95eeBuilding\u4e2d\u79c1\u6709\u5185\u5bb9\n    void visit2(); \n\nprivate:\n    Building *building;\n};\n\n\nclass Building\n{\n    //\u544a\u8bc9\u7f16\u8bd1\u5668  goodGay\u7c7b\u4e2d\u7684visit\u6210\u5458\u51fd\u6570 \u662fBuilding\u597d\u670b\u53cb\uff0c\u53ef\u4ee5\u8bbf\u95ee\u79c1\u6709\u5185\u5bb9\n    friend void goodGay::visit();\n\npublic:\n    Building();\n\npublic:\n    string m_SittingRoom; //\u5ba2\u5385\nprivate:\n    string m_BedRoom;//\u5367\u5ba4\n};\n\nBuilding::Building()\n{\n    this-&gt;m_SittingRoom = \"\u5ba2\u5385\";\n    this-&gt;m_BedRoom = \"\u5367\u5ba4\";\n}\n\ngoodGay::goodGay()\n{\n    building = new Building;\n}\n\nvoid goodGay::visit()\n{\n    cout &lt;&lt; \"\u597d\u57fa\u53cb\u6b63\u5728\u8bbf\u95ee\" &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;\n    cout &lt;&lt; \"\u597d\u57fa\u53cb\u6b63\u5728\u8bbf\u95ee\" &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;\n}\n\nvoid goodGay::visit2()\n{\n    cout &lt;&lt; \"\u597d\u57fa\u53cb\u6b63\u5728\u8bbf\u95ee\" &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;\n    //cout &lt;&lt; \"\u597d\u57fa\u53cb\u6b63\u5728\u8bbf\u95ee\" &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;\n}\n\nvoid test01()\n{\n    goodGay  gg;\n    gg.visit();\n\n}\n\nint main(){\n\n    test01();\n\n    system(\"pause\");\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#45", "title": "4.5 \u8fd0\u7b97\u7b26\u91cd\u8f7d", "text": "<p>\u8fd0\u7b97\u7b26\u91cd\u8f7d\u6982\u5ff5\uff1a\u5bf9\u5df2\u6709\u7684\u8fd0\u7b97\u7b26\u91cd\u65b0\u8fdb\u884c\u5b9a\u4e49\uff0c\u8d4b\u4e88\u5176\u53e6\u4e00\u79cd\u529f\u80fd\uff0c\u4ee5\u9002\u5e94\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002</p> <ul> <li>\u5bf9\u4e8e\u5185\u7f6e\u6570\u636e\u7c7b\u578b\uff0c\u7f16\u8bd1\u5668\u77e5\u9053\u5982\u4f55\u8fdb\u884c\u8fd0\u7b97\uff0c\u4f8b\u5982\uff1a</li> </ul> <pre><code>int a = 10;\nint b = 10;\nint c = a + b;\n</code></pre> <ul> <li>\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5982\u7c7b\uff0c\u5219\u9700\u8981\u81ea\u5b9a\u4e49\u8fd0\u7b97\u7b26\uff1a</li> </ul> <p></p> <ul> <li> <p>\u6ce8\u610f\u4e8b\u9879 \uff1a</p> </li> <li> <p>\u5168\u5c40\u91cd\u8f7d\u4e0e\u5c40\u90e8\u91cd\u8f7d\u7684\u672c\u8d28\uff1a</p> <pre><code>//\u6210\u5458\u51fd\u6570\u91cd\u8f7d\u672c\u8d28\u8c03\u7528\nPerson p3=p1.operator+(p2):\n//\u5168\u5c40\u51fd\u6570\u91cd\u8f7d\u672c\u8d28\u8c03\u7528\nPerson p3=operator+(p1,p2):\n//\u7b80\u5316\u5199\u6cd5\nPerson p3 = p1 + p2;\n</code></pre> </li> <li> <p>\u5bf9\u4e8e\u5185\u7f6e\u7684\u6570\u636e\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\u7684\u7684\u8fd0\u7b97\u7b26\u662f\u4e0d\u53ef\u80fd\u6539\u53d8\u7684</p> </li> <li> <p>\u4e0d\u8981\u6ee5\u7528\u8fd0\u7b97\u7b26\u91cd\u8f7d</p> </li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#451", "title": "4.5.1 \u52a0\u53f7\u8fd0\u7b97\u7b26\u91cd\u8f7d", "text": "<p>\u4f5c\u7528\uff1a\u5b9e\u73b0\u4e24\u4e2a\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u76f8\u52a0\u7684\u8fd0\u7b97\u3002</p>"}, {"location": "record/algo/code/cpp/01_basic/#_36", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Person {\npublic:\n    Person() {};\n    Person(int a\uff0c int b)\n    {\n        this-&gt;m_A = a;\n        this-&gt;m_B = b;\n    }\n    //\u6210\u5458\u51fd\u6570\u5b9e\u73b0 + \u53f7\u8fd0\u7b97\u7b26\u91cd\u8f7d\n    Person operator+(const Person&amp; p) {\n        Person temp;\n        temp.m_A = this-&gt;m_A + p.m_A;\n        temp.m_B = this-&gt;m_B + p.m_B;\n        return temp;\n    }\n\n\npublic:\n    int m_A;\n    int m_B;\n};\n\n//\u5168\u5c40\u51fd\u6570\u5b9e\u73b0 + \u53f7\u8fd0\u7b97\u7b26\u91cd\u8f7d\n//Person operator+(const Person&amp; p1\uff0c const Person&amp; p2) {\n//  Person temp(0\uff0c 0);\n//  temp.m_A = p1.m_A + p2.m_A;\n//  temp.m_B = p1.m_B + p2.m_B;\n//  return temp;\n//}\n\n//\u8fd0\u7b97\u7b26\u91cd\u8f7d \u53ef\u4ee5\u53d1\u751f\u51fd\u6570\u91cd\u8f7d \nPerson operator+(const Person&amp; p2\uff0c int val)  \n{\n    Person temp;\n    temp.m_A = p2.m_A + val;\n    temp.m_B = p2.m_B + val;\n    return temp;\n}\n\nvoid test() {\n\n    Person p1(10\uff0c 10);\n    Person p2(20\uff0c 20);\n\n    //\u6210\u5458\u51fd\u6570\u65b9\u5f0f\n    Person p3 = p2 + p1;  //\u76f8\u5f53\u4e8e p2.operaor+(p1)\n    cout &lt;&lt; \"mA:\" &lt;&lt; p3.m_A &lt;&lt; \" mB:\" &lt;&lt; p3.m_B &lt;&lt; endl;\n\n\n    Person p4 = p3 + 10; //\u76f8\u5f53\u4e8e operator+(p3\uff0c10)\n    cout &lt;&lt; \"mA:\" &lt;&lt; p4.m_A &lt;&lt; \" mB:\" &lt;&lt; p4.m_B &lt;&lt; endl;\n\n}\n\nint main() {\n\n    test();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#452", "title": "4.5.2 \u5de6\u79fb\u8fd0\u7b97\u7b26\u91cd\u8f7d", "text": "<p>\u4f5c\u7528\uff1a\u91cd\u8f7d\u5de6\u79fb\u8fd0\u7b97\u7b26 <code>&lt;&lt;</code> \u914d\u5408\u53cb\u5143\u53ef\u4ee5\u5b9e\u73b0 \u8f93\u51fa\uff08cout\uff09\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b \u3002</p> <ul> <li>\u4e00\u822c\u4e0d\u4f1a\u901a\u8fc7\u6210\u5458\u51fd\u6570\u91cd\u8f7d <code>&lt;&lt;</code>\uff0c\u56e0\u4e3a\u65e0\u6cd5\u5b9e\u73b0 <code>cout</code> \u5728\u5de6\u4fa7\u3002\u53ea\u80fd\u4f7f\u7528\u5168\u5c40\u51fd\u6570\u8fdb\u884c\u91cd\u8f7d\uff1a</li> </ul> <pre><code>ostream &amp; operator&lt;&lt;(ostream &amp;cout, Person &amp;p) {\n    cout &lt;&lt; p.m_A &lt;&lt; p.m_B;\n    return cout;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#_37", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Person {\n    friend ostream&amp; operator&lt;&lt;(ostream&amp; out\uff0c Person&amp; p);\n\npublic:\n\n    Person(int a\uff0c int b)\n    {\n        this-&gt;m_A = a;\n        this-&gt;m_B = b;\n    }\n\n    //\u6210\u5458\u51fd\u6570 \u5b9e\u73b0\u4e0d\u4e86  p &lt;&lt; cout \u4e0d\u662f\u6211\u4eec\u60f3\u8981\u7684\u6548\u679c\n    //void operator&lt;&lt;(Person&amp; p){\n    //}\n\nprivate:\n    int m_A;\n    int m_B;\n};\n\n//\u5168\u5c40\u51fd\u6570\u5b9e\u73b0\u5de6\u79fb\u91cd\u8f7d\n//ostream\u5bf9\u8c61\u53ea\u80fd\u6709\u4e00\u4e2a\nostream&amp; operator&lt;&lt;(ostream&amp; out\uff0c Person&amp; p) {\n    out &lt;&lt; \"a:\" &lt;&lt; p.m_A &lt;&lt; \" b:\" &lt;&lt; p.m_B;\n    return out;\n}\n\nvoid test() {\n\n    Person p1(10\uff0c 20);\n\n    cout &lt;&lt; p1 &lt;&lt; \"hello world\" &lt;&lt; endl; //\u94fe\u5f0f\u7f16\u7a0b\n}\n\nint main() {\n\n    test();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#453", "title": "4.5.3 \u9012\u589e\u8fd0\u7b97\u7b26\u91cd\u8f7d", "text": "<p>\u4f5c\u7528\uff1a \u901a\u8fc7\u91cd\u8f7d\u9012\u589e\u8fd0\u7b97\u7b26\uff0c\u5b9e\u73b0\u81ea\u5df1\u7684\u6574\u578b\u6570\u636e\u3002 </p> <ul> <li>\u6ce8\u610f\uff1a \u524d\u7f6e\u9012\u589e\u8fd4\u56de\u5f15\u7528\uff0c\u540e\u7f6e\u9012\u589e\u8fd4\u56de\u503c - \u4f7f\u7528 <code>int</code> \u5360\u4f4d\u53c2\u6570\u533a\u5206\u524d\u7f6e\u548c\u540e\u7f6e\u9012\u589e\uff1a</li> </ul> <pre><code>Person&amp; operator++() {} // \u524d\u7f6e\u9012\u589e\nPerson operator++(int){} // \u540e\u7f6e\u9012\u589e\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#_38", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class MyInteger {\n\n    friend ostream&amp; operator&lt;&lt;(ostream&amp; out\uff0c MyInteger myint);\n\npublic:\n    MyInteger() {\n        m_Num = 0;\n    }\n    //\u524d\u7f6e++\n    MyInteger&amp; operator++() {\n        //\u5148++\n        m_Num++;\n        //\u518d\u8fd4\u56de\n        return *this;\n    }\n\n    //\u540e\u7f6e++\n    MyInteger operator++(int) {\n        //\u5148\u8fd4\u56de\n        MyInteger temp = *this; //\u8bb0\u5f55\u5f53\u524d\u672c\u8eab\u7684\u503c\uff0c\u7136\u540e\u8ba9\u672c\u8eab\u7684\u503c\u52a01\uff0c\u4f46\u662f\u8fd4\u56de\u7684\u662f\u4ee5\u524d\u7684\u503c\uff0c\u8fbe\u5230\u5148\u8fd4\u56de\u540e++\uff1b\n        m_Num++;\n        return temp;\n    }\n\nprivate:\n    int m_Num;\n};\n\n\nostream&amp; operator&lt;&lt;(ostream&amp; out\uff0c MyInteger myint) {\n    out &lt;&lt; myint.m_Num;\n    return out;\n}\n\n\n//\u524d\u7f6e++ \u5148++ \u518d\u8fd4\u56de\nvoid test01() {\n    MyInteger myInt;\n    cout &lt;&lt; ++myInt &lt;&lt; endl;\n    cout &lt;&lt; myInt &lt;&lt; endl;\n}\n\n//\u540e\u7f6e++ \u5148\u8fd4\u56de \u518d++\nvoid test02() {\n\n    MyInteger myInt;\n    cout &lt;&lt; myInt++ &lt;&lt; endl;\n    cout &lt;&lt; myInt &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n    //test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#454", "title": "4.5.4 \u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d", "text": "<p>c++\u7f16\u8bd1\u5668\u81f3\u5c11\u7ed9\u4e00\u4e2a\u7c7b\u6dfb\u52a04\u4e2a\u51fd\u6570</p> <ol> <li>\u9ed8\u8ba4\u6784\u9020\u51fd\u6570(\u65e0\u53c2\uff0c\u51fd\u6570\u4f53\u4e3a\u7a7a)</li> <li>\u9ed8\u8ba4\u6790\u6784\u51fd\u6570(\u65e0\u53c2\uff0c\u51fd\u6570\u4f53\u4e3a\u7a7a)</li> <li>\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5bf9\u5c5e\u6027\u8fdb\u884c\u503c\u62f7\u8d1d</li> <li>\u8d4b\u503c\u8fd0\u7b97\u7b26 operator=\uff0c \u5bf9\u5c5e\u6027\u8fdb\u884c\u503c\u62f7\u8d1d\uff08\u6d45\u62f7\u8d1d\uff09</li> </ol> <p>\u5982\u679c\u7c7b\u4e2d\u6709\u5c5e\u6027\u6307\u5411\u5806\u533a\uff0c\u505a\u8d4b\u503c\u64cd\u4f5c\u65f6\u4e5f\u4f1a\u51fa\u73b0\u6df1\u6d45\u62f7\u8d1d\u95ee\u9898\u3002\u6b64\u65f6\u5c31\u9700\u8981\u901a\u8fc7\u91cd\u8f7d\u8d4b\u503c\u8fd0\u7b97\u7b26 <code>=</code> \u8fdb\u884c\u89e3\u51b3\u3002</p>"}, {"location": "record/algo/code/cpp/01_basic/#_39", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Person\n{\npublic:\n\n    Person(int age)\n    {\n        //\u5c06\u5e74\u9f84\u6570\u636e\u5f00\u8f9f\u5230\u5806\u533a\n        m_Age = new int(age);\n    }\n\n    //\u91cd\u8f7d\u8d4b\u503c\u8fd0\u7b97\u7b26 \n    Person&amp; operator=(Person &amp;p)\n    {\n        if (m_Age != NULL)\n        {\n            delete m_Age;\n            m_Age = NULL;\n        }\n        //\u7f16\u8bd1\u5668\u63d0\u4f9b\u7684\u4ee3\u7801\u662f\u6d45\u62f7\u8d1d\n        //m_Age = p.m_Age;\n\n        //\u63d0\u4f9b\u6df1\u62f7\u8d1d \u89e3\u51b3\u6d45\u62f7\u8d1d\u7684\u95ee\u9898\n        m_Age = new int(*p.m_Age);\n\n        //\u8fd4\u56de\u81ea\u8eab\n        return *this;\n    }\n\n\n    ~Person()\n    {\n        if (m_Age != NULL)\n        {\n            delete m_Age;\n            m_Age = NULL;\n        }\n    }\n\n    //\u5e74\u9f84\u7684\u6307\u9488\n    int *m_Age;\n\n};\n\n\nvoid test01()\n{\n    Person p1(18);\n\n    Person p2(20);\n\n    Person p3(30);\n\n    p3 = p2 = p1; //\u8d4b\u503c\u64cd\u4f5c\n\n    cout &lt;&lt; \"p1\u7684\u5e74\u9f84\u4e3a\uff1a\" &lt;&lt; *p1.m_Age &lt;&lt; endl;\n\n    cout &lt;&lt; \"p2\u7684\u5e74\u9f84\u4e3a\uff1a\" &lt;&lt; *p2.m_Age &lt;&lt; endl;\n\n    cout &lt;&lt; \"p3\u7684\u5e74\u9f84\u4e3a\uff1a\" &lt;&lt; *p3.m_Age &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    //int a = 10;\n    //int b = 20;\n    //int c = 30;\n\n    //c = b = a;\n    //cout &lt;&lt; \"a = \" &lt;&lt; a &lt;&lt; endl;\n    //cout &lt;&lt; \"b = \" &lt;&lt; b &lt;&lt; endl;\n    //cout &lt;&lt; \"c = \" &lt;&lt; c &lt;&lt; endl;\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#455", "title": "4.5.5 \u5173\u7cfb\u8fd0\u7b97\u7b26\u91cd\u8f7d \u4f5c\u7528\uff1a \u91cd\u8f7d\u5173\u7cfb\u8fd0\u7b97\u7b26\uff0c\u53ef\u4ee5\u8ba9\u4e24\u4e2a\u81ea\u5b9a\u4e49\u7c7b\u578b\u5bf9\u8c61\u8fdb\u884c\u5bf9\u6bd4\u64cd\u4f5c\u3002", "text": ""}, {"location": "record/algo/code/cpp/01_basic/#_40", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Person\n{\npublic:\n    Person(string name\uff0c int age)\n    {\n        this-&gt;m_Name = name;\n        this-&gt;m_Age = age;\n    };\n\n    bool operator==(Person &amp; p)\n    {\n        if (this-&gt;m_Name == p.m_Name &amp;&amp; this-&gt;m_Age == p.m_Age)\n        {\n            return true;\n        }\n        else\n        {\n            return false;\n        }\n    }\n\n    bool operator!=(Person &amp; p)\n    {\n        if (this-&gt;m_Name == p.m_Name &amp;&amp; this-&gt;m_Age == p.m_Age)\n        {\n            return false;\n        }\n        else\n        {\n            return true;\n        }\n    }\n\n    string m_Name;\n    int m_Age;\n};\n\nvoid test01()\n{\n    //int a = 0;\n    //int b = 0;\n\n    Person a(\"\u5b59\u609f\u7a7a\"\uff0c 18);\n    Person b(\"\u5b59\u609f\u7a7a\"\uff0c 18);\n\n    if (a == b)\n    {\n        cout &lt;&lt; \"a\u548cb\u76f8\u7b49\" &lt;&lt; endl;\n    }\n    else\n    {\n        cout &lt;&lt; \"a\u548cb\u4e0d\u76f8\u7b49\" &lt;&lt; endl;\n    }\n\n    if (a != b)\n    {\n        cout &lt;&lt; \"a\u548cb\u4e0d\u76f8\u7b49\" &lt;&lt; endl;\n    }\n    else\n    {\n        cout &lt;&lt; \"a\u548cb\u76f8\u7b49\" &lt;&lt; endl;\n    }\n}\n\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#456", "title": "4.5.6 \u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u91cd\u8f7d", "text": "<ul> <li>\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26 <code>()</code>  \u4e5f\u53ef\u4ee5\u91cd\u8f7d</li> <li>\u7531\u4e8e\u91cd\u8f7d\u540e\u4f7f\u7528\u7684\u65b9\u5f0f\u975e\u5e38\u50cf\u51fd\u6570\u7684\u8c03\u7528\uff0c\u56e0\u6b64\u79f0\u4e3a\u4eff\u51fd\u6570</li> <li>\u4eff\u51fd\u6570\u6ca1\u6709\u56fa\u5b9a\u5199\u6cd5\uff0c\u975e\u5e38\u7075\u6d3b</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_41", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class MyPrint\n{\npublic:\n    void operator()(string text)\n    {\n        cout &lt;&lt; text &lt;&lt; endl;\n    }\n\n};\nvoid test01()\n{\n    //\u91cd\u8f7d\u7684\uff08\uff09\u64cd\u4f5c\u7b26 \u4e5f\u79f0\u4e3a\u4eff\u51fd\u6570\n    MyPrint myFunc;\n    myFunc(\"hello world\");\n}\n\n\nclass MyAdd\n{\npublic:\n    int operator()(int v1\uff0c int v2)\n    {\n        return v1 + v2;\n    }\n};\n\nvoid test02()\n{\n    MyAdd add;\n    int ret = add(10\uff0c 10);\n    cout &lt;&lt; \"ret = \" &lt;&lt; ret &lt;&lt; endl;\n\n    //\u533f\u540d\u5bf9\u8c61\u8c03\u7528  \n    cout &lt;&lt; \"MyAdd()(100\uff0c100) = \" &lt;&lt; MyAdd()(100\uff0c 100) &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#46", "title": "4.6  \u7ee7\u627f \u7ee7\u627f\u662f\u9762\u5411\u5bf9\u8c61\u4e09\u5927\u7279\u6027\u4e4b\u4e00 \u6709\u4e9b\u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u5b58\u5728\u7279\u6b8a\u7684\u5173\u7cfb\uff0c\u4f8b\u5982\u4e0b\u56fe\u4e2d\uff1a", "text": "<p>\u6211\u4eec\u53d1\u73b0\uff0c\u5b9a\u4e49\u8fd9\u4e9b\u7c7b\u65f6\uff0c\u4e0b\u7ea7\u522b\u7684\u6210\u5458\u9664\u4e86\u62e5\u6709\u4e0a\u4e00\u7ea7\u7684\u5171\u6027\uff0c\u8fd8\u6709\u81ea\u5df1\u7684\u7279\u6027\u3002</p> <p>\u8fd9\u4e2a\u65f6\u5019\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u5229\u7528\u7ee7\u627f\u7684\u6280\u672f\uff0c\u51cf\u5c11\u91cd\u590d\u4ee3\u7801\u3002</p>"}, {"location": "record/algo/code/cpp/01_basic/#461", "title": "4.6.1 \u7ee7\u627f\u7684\u57fa\u672c\u8bed\u6cd5", "text": "<p>\u4f8b\u5982\u6211\u4eec\u770b\u5230\u5f88\u591a\u7f51\u7ad9\u4e2d\uff0c\u90fd\u6709\u516c\u5171\u7684\u5934\u90e8\uff0c\u516c\u5171\u7684\u5e95\u90e8\uff0c\u751a\u81f3\u516c\u5171\u7684\u5de6\u4fa7\u5217\u8868\uff0c\u53ea\u6709\u4e2d\u5fc3\u5185\u5bb9\u4e0d\u540c\u3002</p> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u5206\u522b\u5229\u7528\u666e\u901a\u5199\u6cd5\u548c\u7ee7\u627f\u7684\u5199\u6cd5\u6765\u5b9e\u73b0\u7f51\u9875\u4e2d\u7684\u5185\u5bb9\uff0c\u770b\u4e00\u4e0b\u7ee7\u627f\u5b58\u5728\u7684\u610f\u4e49\u4ee5\u53ca\u597d\u5904\u3002</p> <p>\u7ee7\u627f\u7684\u597d\u5904\uff1a \u53ef\u4ee5\u51cf\u5c11\u91cd\u590d\u7684\u4ee3\u7801 - class A : public B;    - A \u7c7b\u79f0\u4e3a\u5b50\u7c7b \u6216 \u6d3e\u751f\u7c7b   - B \u7c7b\u79f0\u4e3a\u7236\u7c7b \u6216 \u57fa\u7c7b \u6d3e\u751f\u7c7b\u4e2d\u7684\u6210\u5458\uff0c\u5305\u542b\u4e24\u5927\u90e8\u5206 \uff1a</p> <ul> <li>\u4e00\u7c7b\u662f\u4ece\u57fa\u7c7b\u7ee7\u627f\u8fc7\u6765\u7684\uff0c\u4e00\u7c7b\u662f\u81ea\u5df1\u589e\u52a0\u7684\u6210\u5458\u3002</li> <li>\u4ece\u57fa\u7c7b\u7ee7\u627f\u8fc7\u8fc7\u6765\u7684\u8868\u73b0\u5176\u5171\u6027\uff0c\u800c\u65b0\u589e\u7684\u6210\u5458\u4f53\u73b0\u4e86\u5176\u4e2a\u6027\u3002</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_42", "title": "\u666e\u901a\u5b9e\u73b0\uff1a", "text": "<pre><code>//Java\u9875\u9762\nclass Java \n{\npublic:\n    void header()\n    {\n        cout &lt;&lt; \"\u9996\u9875\u3001\u516c\u5f00\u8bfe\u3001\u767b\u5f55\u3001\u6ce8\u518c...\uff08\u516c\u5171\u5934\u90e8\uff09\" &lt;&lt; endl;\n    }\n    void footer()\n    {\n        cout &lt;&lt; \"\u5e2e\u52a9\u4e2d\u5fc3\u3001\u4ea4\u6d41\u5408\u4f5c\u3001\u7ad9\u5185\u5730\u56fe...(\u516c\u5171\u5e95\u90e8)\" &lt;&lt; endl;\n    }\n    void left()\n    {\n        cout &lt;&lt; \"Java\uff0cPython\uff0cC++...(\u516c\u5171\u5206\u7c7b\u5217\u8868)\" &lt;&lt; endl;\n    }\n    void content()\n    {\n        cout &lt;&lt; \"JAVA\u5b66\u79d1\u89c6\u9891\" &lt;&lt; endl;\n    }\n};\n//Python\u9875\u9762\nclass Python\n{\npublic:\n    void header()\n    {\n        cout &lt;&lt; \"\u9996\u9875\u3001\u516c\u5f00\u8bfe\u3001\u767b\u5f55\u3001\u6ce8\u518c...\uff08\u516c\u5171\u5934\u90e8\uff09\" &lt;&lt; endl;\n    }\n    void footer()\n    {\n        cout &lt;&lt; \"\u5e2e\u52a9\u4e2d\u5fc3\u3001\u4ea4\u6d41\u5408\u4f5c\u3001\u7ad9\u5185\u5730\u56fe...(\u516c\u5171\u5e95\u90e8)\" &lt;&lt; endl;\n    }\n    void left()\n    {\n        cout &lt;&lt; \"Java\uff0cPython\uff0cC++...(\u516c\u5171\u5206\u7c7b\u5217\u8868)\" &lt;&lt; endl;\n    }\n    void content()\n    {\n        cout &lt;&lt; \"Python\u5b66\u79d1\u89c6\u9891\" &lt;&lt; endl;\n    }\n};\n//C++\u9875\u9762\nclass CPP \n{\npublic:\n    void header()\n    {\n        cout &lt;&lt; \"\u9996\u9875\u3001\u516c\u5f00\u8bfe\u3001\u767b\u5f55\u3001\u6ce8\u518c...\uff08\u516c\u5171\u5934\u90e8\uff09\" &lt;&lt; endl;\n    }\n    void footer()\n    {\n        cout &lt;&lt; \"\u5e2e\u52a9\u4e2d\u5fc3\u3001\u4ea4\u6d41\u5408\u4f5c\u3001\u7ad9\u5185\u5730\u56fe...(\u516c\u5171\u5e95\u90e8)\" &lt;&lt; endl;\n    }\n    void left()\n    {\n        cout &lt;&lt; \"Java\uff0cPython\uff0cC++...(\u516c\u5171\u5206\u7c7b\u5217\u8868)\" &lt;&lt; endl;\n    }\n    void content()\n    {\n        cout &lt;&lt; \"C++\u5b66\u79d1\u89c6\u9891\" &lt;&lt; endl;\n    }\n};\n\nvoid test01()\n{\n    //Java\u9875\u9762\n    cout &lt;&lt; \"Java\u4e0b\u8f7d\u89c6\u9891\u9875\u9762\u5982\u4e0b\uff1a \" &lt;&lt; endl;\n    Java ja;\n    ja.header();\n    ja.footer();\n    ja.left();\n    ja.content();\n    cout &lt;&lt; \"--------------------\" &lt;&lt; endl;\n\n    //Python\u9875\u9762\n    cout &lt;&lt; \"Python\u4e0b\u8f7d\u89c6\u9891\u9875\u9762\u5982\u4e0b\uff1a \" &lt;&lt; endl;\n    Python py;\n    py.header();\n    py.footer();\n    py.left();\n    py.content();\n    cout &lt;&lt; \"--------------------\" &lt;&lt; endl;\n\n    //C++\u9875\u9762\n    cout &lt;&lt; \"C++\u4e0b\u8f7d\u89c6\u9891\u9875\u9762\u5982\u4e0b\uff1a \" &lt;&lt; endl;\n    CPP cp;\n    cp.header();\n    cp.footer();\n    cp.left();\n    cp.content();\n\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#_43", "title": "\u7ee7\u627f\u5b9e\u73b0\uff1a", "text": "<pre><code>//\u516c\u5171\u9875\u9762\nclass BasePage\n{\npublic:\n    void header()\n    {\n        cout &lt;&lt; \"\u9996\u9875\u3001\u516c\u5f00\u8bfe\u3001\u767b\u5f55\u3001\u6ce8\u518c...\uff08\u516c\u5171\u5934\u90e8\uff09\" &lt;&lt; endl;\n    }\n\n    void footer()\n    {\n        cout &lt;&lt; \"\u5e2e\u52a9\u4e2d\u5fc3\u3001\u4ea4\u6d41\u5408\u4f5c\u3001\u7ad9\u5185\u5730\u56fe...(\u516c\u5171\u5e95\u90e8)\" &lt;&lt; endl;\n    }\n    void left()\n    {\n        cout &lt;&lt; \"Java\uff0cPython\uff0cC++...(\u516c\u5171\u5206\u7c7b\u5217\u8868)\" &lt;&lt; endl;\n    }\n\n};\n\n//Java\u9875\u9762\nclass Java : public BasePage\n{\npublic:\n    void content()\n    {\n        cout &lt;&lt; \"JAVA\u5b66\u79d1\u89c6\u9891\" &lt;&lt; endl;\n    }\n};\n//Python\u9875\u9762\nclass Python : public BasePage\n{\npublic:\n    void content()\n    {\n        cout &lt;&lt; \"Python\u5b66\u79d1\u89c6\u9891\" &lt;&lt; endl;\n    }\n};\n//C++\u9875\u9762\nclass CPP : public BasePage\n{\npublic:\n    void content()\n    {\n        cout &lt;&lt; \"C++\u5b66\u79d1\u89c6\u9891\" &lt;&lt; endl;\n    }\n};\n\nvoid test01()\n{\n    //Java\u9875\u9762\n    cout &lt;&lt; \"Java\u4e0b\u8f7d\u89c6\u9891\u9875\u9762\u5982\u4e0b\uff1a \" &lt;&lt; endl;\n    Java ja;\n    ja.header();\n    ja.footer();\n    ja.left();\n    ja.content();\n    cout &lt;&lt; \"--------------------\" &lt;&lt; endl;\n\n    //Python\u9875\u9762\n    cout &lt;&lt; \"Python\u4e0b\u8f7d\u89c6\u9891\u9875\u9762\u5982\u4e0b\uff1a \" &lt;&lt; endl;\n    Python py;\n    py.header();\n    py.footer();\n    py.left();\n    py.content();\n    cout &lt;&lt; \"--------------------\" &lt;&lt; endl;\n\n    //C++\u9875\u9762\n    cout &lt;&lt; \"C++\u4e0b\u8f7d\u89c6\u9891\u9875\u9762\u5982\u4e0b\uff1a \" &lt;&lt; endl;\n    CPP cp;\n    cp.header();\n    cp.footer();\n    cp.left();\n    cp.content();\n\n\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#462", "title": "4.6.2 \u7ee7\u627f\u65b9\u5f0f", "text": "<p>\u7ee7\u627f\u7684\u8bed\u6cd5\uff1a<code>class \u5b50\u7c7b : \u7ee7\u627f\u65b9\u5f0f  \u7236\u7c7b</code> \u7ee7\u627f\u65b9\u5f0f\u4e00\u5171\u6709\u4e09\u79cd\uff1a * \u516c\u5171\u7ee7\u627f\uff1b\u4fdd\u62a4\u7ee7\u627f\uff1b\u79c1\u6709\u7ee7\u627f</p> <p></p>"}, {"location": "record/algo/code/cpp/01_basic/#_44", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Base1\n{\npublic: \n    int m_A;\nprotected:\n    int m_B;\nprivate:\n    int m_C;\n};\n\n//\u516c\u5171\u7ee7\u627f\nclass Son1 :public Base1\n{\npublic:\n    void func()\n    {\n        m_A; //\u53ef\u8bbf\u95ee public\u6743\u9650\n        m_B; //\u53ef\u8bbf\u95ee protected\u6743\u9650\n        //m_C; //\u4e0d\u53ef\u8bbf\u95ee\n    }\n};\n\nvoid myClass()\n{\n    Son1 s1;\n    s1.m_A; //\u5176\u4ed6\u7c7b\u53ea\u80fd\u8bbf\u95ee\u5230\u516c\u5171\u6743\u9650\n}\n\n//\u4fdd\u62a4\u7ee7\u627f\nclass Base2\n{\npublic:\n    int m_A;\nprotected:\n    int m_B;\nprivate:\n    int m_C;\n};\nclass Son2:protected Base2\n{\npublic:\n    void func()\n    {\n        m_A; //\u53ef\u8bbf\u95ee protected\u6743\u9650\n        m_B; //\u53ef\u8bbf\u95ee protected\u6743\u9650\n        //m_C; //\u4e0d\u53ef\u8bbf\u95ee\n    }\n};\nvoid myClass2()\n{\n    Son2 s;\n    //s.m_A; //\u4e0d\u53ef\u8bbf\u95ee\n}\n\n//\u79c1\u6709\u7ee7\u627f\nclass Base3\n{\npublic:\n    int m_A;\nprotected:\n    int m_B;\nprivate:\n    int m_C;\n};\nclass Son3:private Base3\n{\npublic:\n    void func()\n    {\n        m_A; //\u53ef\u8bbf\u95ee private\u6743\u9650\n        m_B; //\u53ef\u8bbf\u95ee private\u6743\u9650\n        //m_C; //\u4e0d\u53ef\u8bbf\u95ee\n    }\n};\nclass GrandSon3 :public Son3\n{\npublic:\n    void func()\n    {\n        //Son3\u662f\u79c1\u6709\u7ee7\u627f\uff0c\u6240\u4ee5\u7ee7\u627fSon3\u7684\u5c5e\u6027\u5728GrandSon3\u4e2d\u90fd\u65e0\u6cd5\u8bbf\u95ee\u5230\n        //m_A;\n        //m_B;\n        //m_C;\n    }\n};\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#463", "title": "4.6.3 \u7ee7\u627f\u4e2d\u7684\u5bf9\u8c61\u6a21\u578b \u95ee\u9898\uff1a \u4ece\u7236\u7c7b\u7ee7\u627f\u8fc7\u6765\u7684\u6210\u5458\uff0c\u54ea\u4e9b\u5c5e\u4e8e\u5b50\u7c7b\u5bf9\u8c61\u4e2d\uff1f", "text": "<ul> <li>\u7236\u7c7b\u4e2d\u6240\u6709\u975e\u9759\u6001\u6210\u5458\u5c5e\u6027\u90fd\u4f1a\u88ab\u5b50\u7c7b\u7ee7\u627f\u4e0b\u53bb</li> <li>\u7236\u7c7b\u4e2d \u79c1\u6709\u6210\u5458\u5c5e\u6027 \u662f\u88ab\u7f16\u8bd1\u5668\u7ed9\u9690\u85cf\u4e86\uff0c\u56e0\u6b64\u662f\u8bbf\u95ee\u4e0d\u5230\uff0c\u4f46\u662f\u786e\u5b9e \u88ab\u7ee7\u627f \u4e0b\u53bb\u4e86</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_45", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Base\n{\npublic:\n    int m_A;\nprotected:\n    int m_B;\nprivate:\n    int m_C; //\u79c1\u6709\u6210\u5458\u53ea\u662f\u88ab\u9690\u85cf\u4e86\uff0c\u4f46\u662f\u8fd8\u662f\u4f1a\u7ee7\u627f\u4e0b\u53bb\n};\n\n//\u516c\u5171\u7ee7\u627f\nclass Son :public Base\n{\npublic:\n    int m_D;\n};\n\nvoid test01()\n{\n    cout &lt;&lt; \"sizeof Son = \" &lt;&lt; sizeof(Son) &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#_46", "title": "\u5229\u7528\u5de5\u5177\u67e5\u770b\uff1a", "text": "<p>\u6253\u5f00\u5de5\u5177\u7a97\u53e3\u540e\uff0c\u5b9a\u4f4d\u5230\u5f53\u524dCPP\u6587\u4ef6\u7684\u76d8\u7b26\uff0c\u7136\u540e\u8f93\u5165\uff1a<code>cl /d1 reportgingleClassLayout[\u67e5\u770b\u7684\u7c7b\u540d] [\u6240\u5c5e\u6587\u4ef6\u540d]</code></p> <p></p> <p>\u6548\u679c\u5982\u4e0b\u56fe\uff1a</p> <p></p>"}, {"location": "record/algo/code/cpp/01_basic/#464", "title": "4.6.4 \u7ee7\u627f\u4e2d\u6784\u9020\u548c\u6790\u6784\u987a\u5e8f", "text": "<p>\u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u540e\uff0c\u5f53\u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61\uff0c\u4e5f\u4f1a\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002</p> <p>\u95ee\u9898\uff1a\u7236\u7c7b\u548c\u5b50\u7c7b\u7684\u6784\u9020\u548c\u6790\u6784\u987a\u5e8f\u662f\u8c01\u5148\u8c01\u540e\uff1f</p> <ul> <li>\u6784\u9020\u65f6\uff0c\u5148\u6784\u9020\u7236\u7c7b\uff0c\u518d\u6784\u9020\u5b50\u7c7b\uff1b</li> <li>\u6790\u6784\u65f6\uff0c\u5148\u6790\u6784\u5b50\u7c7b\uff0c\u518d\u6790\u6784\u7236\u7c7b\u3002</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_47", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Base \n{\npublic:\n    Base()\n    {\n        cout &lt;&lt; \"Base\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n    }\n    ~Base()\n    {\n        cout &lt;&lt; \"Base\u6790\u6784\u51fd\u6570!\" &lt;&lt; endl;\n    }\n};\n\nclass Son : public Base\n{\npublic:\n    Son()\n    {\n        cout &lt;&lt; \"Son\u6784\u9020\u51fd\u6570!\" &lt;&lt; endl;\n    }\n    ~Son()\n    {\n        cout &lt;&lt; \"Son\u6790\u6784\u51fd\u6570!\" &lt;&lt; endl;\n    }\n\n};\n\n\nvoid test01()\n{\n    //\u7ee7\u627f\u4e2d \u5148\u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u518d\u8c03\u7528\u5b50\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u6790\u6784\u987a\u5e8f\u4e0e\u6784\u9020\u76f8\u53cd\n    Son s;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#465", "title": "4.6.5 \u7ee7\u627f\u540c\u540d\u6210\u5458\u5904\u7406\u65b9\u5f0f", "text": "<p>\u95ee\u9898\uff1a\u5f53\u5b50\u7c7b\u4e0e\u7236\u7c7b\u51fa\u73b0\u540c\u540d\u7684\u6210\u5458\uff0c\u5982\u4f55\u901a\u8fc7\u5b50\u7c7b\u5bf9\u8c61\uff0c\u8bbf\u95ee\u5230\u5b50\u7c7b\u6216\u7236\u7c7b\u4e2d\u540c\u540d\u7684\u6570\u636e\u5462\uff1f</p> <ul> <li>\u8bbf\u95ee\u5b50\u7c7b\u540c\u540d\u6210\u5458   \u76f4\u63a5\u8bbf\u95ee\u5373\u53ef</li> <li>\u8bbf\u95ee\u7236\u7c7b\u540c\u540d\u6210\u5458   \u9700\u8981\u52a0\u4f5c\u7528\u57df</li> </ul> <p>\u603b\u7ed3\uff1a</p> <ol> <li>\u5b50\u7c7b\u5bf9\u8c61\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5230\u5b50\u7c7b\u4e2d\u540c\u540d\u6210\u5458</li> <li>\u5b50\u7c7b\u5bf9\u8c61\u52a0\u4f5c\u7528\u57df\u53ef\u4ee5\u8bbf\u95ee\u5230\u7236\u7c7b\u540c\u540d\u6210\u5458</li> <li>\u5f53\u5b50\u7c7b\u4e0e\u7236\u7c7b\u62e5\u6709\u540c\u540d\u7684\u6210\u5458\u51fd\u6570\uff0c\u5b50\u7c7b\u4f1a\u9690\u85cf\u7236\u7c7b\u4e2d\u540c\u540d\u6210\u5458\u51fd\u6570\uff0c\u52a0\u4f5c\u7528\u57df\u53ef\u4ee5\u8bbf\u95ee\u5230\u7236\u7c7b\u4e2d\u540c\u540d\u51fd\u6570</li> </ol>"}, {"location": "record/algo/code/cpp/01_basic/#_48", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Base {\npublic:\n    Base()\n    {\n        m_A = 100;\n    }\n\n    void func()\n    {\n        cout &lt;&lt; \"Base - func()\u8c03\u7528\" &lt;&lt; endl;\n    }\n\n    void func(int a)\n    {\n        cout &lt;&lt; \"Base - func(int a)\u8c03\u7528\" &lt;&lt; endl;\n    }\n\npublic:\n    int m_A;\n};\n\n\nclass Son : public Base {\npublic:\n    Son()\n    {\n        m_A = 200;\n    }\n\n    //\u5f53\u5b50\u7c7b\u4e0e\u7236\u7c7b\u62e5\u6709\u540c\u540d\u7684\u6210\u5458\u51fd\u6570\uff0c\u5b50\u7c7b\u4f1a\u9690\u85cf\u7236\u7c7b\u4e2d\u6240\u6709\u7248\u672c\u7684\u540c\u540d\u6210\u5458\u51fd\u6570\n    //\u5982\u679c\u60f3\u8bbf\u95ee\u7236\u7c7b\u4e2d\u88ab\u9690\u85cf\u7684\u540c\u540d\u6210\u5458\u51fd\u6570\uff0c\u9700\u8981\u52a0\u7236\u7c7b\u7684\u4f5c\u7528\u57df\n    void func()\n    {\n        cout &lt;&lt; \"Son - func()\u8c03\u7528\" &lt;&lt; endl;\n    }\npublic:\n    int m_A;\n};\n\nvoid test01()\n{\n    Son s;\n\n    cout &lt;&lt; \"Son\u4e0b\u7684m_A = \" &lt;&lt; s.m_A &lt;&lt; endl;\n    cout &lt;&lt; \"Base\u4e0b\u7684m_A = \" &lt;&lt; s.Base::m_A &lt;&lt; endl;\n\n    s.func();\n    s.Base::func();\n    s.Base::func(10);\n\n}\nint main() {\n\n    test01();\n\n    system(\"pause\");\n    return EXIT_SUCCESS;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#466", "title": "4.6.6 \u7ee7\u627f\u540c\u540d\u9759\u6001\u6210\u5458\u5904\u7406\u65b9\u5f0f", "text": "<p>\u95ee\u9898\uff1a\u7ee7\u627f\u4e2d\u540c\u540d\u7684\u9759\u6001\u6210\u5458\u5728\u5b50\u7c7b\u5bf9\u8c61\u4e0a\u5982\u4f55\u8fdb\u884c\u8bbf\u95ee\uff1f</p> <p>\u9759\u6001\u6210\u5458\u548c\u975e\u9759\u6001\u6210\u5458\u51fa\u73b0\u540c\u540d\uff0c\u5904\u7406\u65b9\u5f0f\u4e00\u81f4</p> <ul> <li>\u8bbf\u95ee\u5b50\u7c7b\u540c\u540d\u6210\u5458   \u76f4\u63a5\u8bbf\u95ee\u5373\u53ef</li> <li> <p>\u8bbf\u95ee\u7236\u7c7b\u540c\u540d\u6210\u5458   \u9700\u8981\u52a0\u4f5c\u7528\u57df \u793a\u4f8b\uff1a ```C++ class Base { public:     static void func()     {         cout &lt;&lt; \"Base - static void func()\" &lt;&lt; endl;     }     static void func(int a)     {         cout &lt;&lt; \"Base - static void func(int a)\" &lt;&lt; endl;     }</p> <p>static int m_A; };</p> </li> </ul> <p>int Base::m_A = 100;</p> <p>class Son : public Base { public:     static void func()     {         cout &lt;&lt; \"Son - static void func()\" &lt;&lt; endl;     }     static int m_A; };</p> <p>int Son::m_A = 200;</p> <p>//\u540c\u540d\u6210\u5458\u5c5e\u6027 void test01() {     //\u901a\u8fc7\u5bf9\u8c61\u8bbf\u95ee     cout &lt;&lt; \"\u901a\u8fc7\u5bf9\u8c61\u8bbf\u95ee\uff1a \" &lt;&lt; endl;     Son s;     cout &lt;&lt; \"Son  \u4e0b m_A = \" &lt;&lt; s.m_A &lt;&lt; endl;     cout &lt;&lt; \"Base \u4e0b m_A = \" &lt;&lt; s.Base::m_A &lt;&lt; endl;</p> <pre><code>//\u901a\u8fc7\u7c7b\u540d\u8bbf\u95ee\ncout &lt;&lt; \"\u901a\u8fc7\u7c7b\u540d\u8bbf\u95ee\uff1a \" &lt;&lt; endl;\ncout &lt;&lt; \"Son  \u4e0b m_A = \" &lt;&lt; Son::m_A &lt;&lt; endl;\ncout &lt;&lt; \"Base \u4e0b m_A = \" &lt;&lt; Son::Base::m_A &lt;&lt; endl;\n</code></pre> <p>}</p> <p>//\u540c\u540d\u6210\u5458\u51fd\u6570 void test02() {     //\u901a\u8fc7\u5bf9\u8c61\u8bbf\u95ee     cout &lt;&lt; \"\u901a\u8fc7\u5bf9\u8c61\u8bbf\u95ee\uff1a \" &lt;&lt; endl;     Son s;     s.func();     s.Base::func();</p> <pre><code>cout &lt;&lt; \"\u901a\u8fc7\u7c7b\u540d\u8bbf\u95ee\uff1a \" &lt;&lt; endl;\nSon::func();\nSon::Base::func();\n//\u51fa\u73b0\u540c\u540d\uff0c\u5b50\u7c7b\u4f1a\u9690\u85cf\u6389\u7236\u7c7b\u4e2d\u6240\u6709\u540c\u540d\u6210\u5458\u51fd\u6570\uff0c\u9700\u8981\u52a0\u4f5c\u4f5c\u7528\u57df\u8bbf\u95ee\nSon::Base::func(100);\n</code></pre> <p>} int main() {</p> <pre><code>//test01();\ntest02();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` </p>"}, {"location": "record/algo/code/cpp/01_basic/#467", "title": "4.6.7 \u591a\u7ee7\u627f\u8bed\u6cd5", "text": "<p>C++\u5141\u8bb8 \u4e00\u4e2a\u7c7b\u7ee7\u627f\u591a\u4e2a\u7c7b \u3002  - \u8bed\u6cd5\uff1a<code>class \u5b50\u7c7b \uff1a\u7ee7\u627f\u65b9\u5f0f \u7236\u7c7b1 \uff0c \u7ee7\u627f\u65b9\u5f0f \u7236\u7c7b2...</code>  - \u6ce8\u610f\uff1a\u591a\u7ee7\u627f\u53ef\u80fd\u4f1a\u5f15\u53d1\u7236\u7c7b\u4e2d\u6709\u540c\u540d\u6210\u5458\u51fa\u73b0\uff0c\u9700\u8981\u52a0\u4f5c\u7528\u57df\u533a\u5206 - C++\u5b9e\u9645\u5f00\u53d1\u4e2d\u4e0d\u5efa\u8bae\u7528\u591a\u7ee7\u627f \u3002 </p>"}, {"location": "record/algo/code/cpp/01_basic/#_49", "title": "\u793a\u4f8b\uff1a", "text": "<p><code>C++ class Base1 { public:     Base1()     {         m_A = 100;     } public:     int m_A; };  class Base2 { public:     Base2()     {         m_A = 200;  //\u5f00\u59cb\u662fm_B \u4e0d\u4f1a\u51fa\u95ee\u9898\uff0c\u4f46\u662f\u6539\u4e3amA\u5c31\u4f1a\u51fa\u73b0\u4e0d\u660e\u786e     } public:     int m_A; };  //\u8bed\u6cd5\uff1aclass \u5b50\u7c7b\uff1a\u7ee7\u627f\u65b9\u5f0f \u7236\u7c7b1 \uff0c\u7ee7\u627f\u65b9\u5f0f \u7236\u7c7b2  class Son : public Base2\uff0c public Base1  { public:     Son()     {         m_C = 300;         m_D = 400;     } public:     int m_C;     int m_D; };   //\u591a\u7ee7\u627f\u5bb9\u6613\u4ea7\u751f\u6210\u5458\u540c\u540d\u7684\u60c5\u51b5 //\u901a\u8fc7\u4f7f\u7528\u7c7b\u540d\u4f5c\u7528\u57df\u53ef\u4ee5\u533a\u5206\u8c03\u7528\u54ea\u4e00\u4e2a\u57fa\u7c7b\u7684\u6210\u5458 void test01() {     Son s;     cout &lt;&lt; \"sizeof Son = \" &lt;&lt; sizeof(s) &lt;&lt; endl;     cout &lt;&lt; s.Base1::m_A &lt;&lt; endl;     cout &lt;&lt; s.Base2::m_A &lt;&lt; endl; }  int main() {      test01();      system(\"pause\");      return 0; }</code></p>"}, {"location": "record/algo/code/cpp/01_basic/#468-", "title": "4.6.8 \u83f1\u5f62\u7ee7\u627f \u83f1\u5f62\u7ee7\u627f\u6982\u5ff5\uff1a - \u4e24\u4e2a\u6d3e\u751f\u7c7b\u7ee7\u627f\u540c\u4e00\u4e2a\u57fa\u7c7b", "text": "<ul> <li>\u53c8\u6709\u67d0\u4e2a\u7c7b\u540c\u65f6\u7ee7\u627f\u8005\u4e24\u4e2a\u6d3e\u751f\u7c7b</li> <li>\u8fd9\u79cd\u7ee7\u627f\u88ab\u79f0\u4e3a\u83f1\u5f62\u7ee7\u627f\uff0c\u6216\u8005\u94bb\u77f3\u7ee7\u627f \u5178\u578b\u7684\u83f1\u5f62\u7ee7\u627f\u6848\u4f8b\uff1a \u83f1\u5f62\u7ee7\u627f\u95ee\u9898\uff1a 1.     \u7f8a\u7ee7\u627f\u4e86\u52a8\u7269\u7684\u6570\u636e\uff0c\u9a7c\u540c\u6837\u7ee7\u627f\u4e86\u52a8\u7269\u7684\u6570\u636e\uff0c\u5f53\u8349\u6ce5\u9a6c\u4f7f\u7528\u6570\u636e\u65f6\uff0c\u5c31\u4f1a\u4ea7\u751f\u4e8c\u4e49\u6027\u3002</li> <li> <p>\u8349\u6ce5\u9a6c\u7ee7\u627f\u81ea\u52a8\u7269\u7684\u6570\u636e\u7ee7\u627f\u4e86\u4e24\u4efd\uff0c\u5176\u5b9e\u6211\u4eec\u5e94\u8be5\u6e05\u695a\uff0c\u8fd9\u4efd\u6570\u636e\u6211\u4eec\u53ea\u9700\u8981\u4e00\u4efd\u5c31\u53ef\u4ee5\u3002 \u603b\u7ed3 \uff1a</p> </li> <li> <p>\u83f1\u5f62\u7ee7\u627f\u5e26\u6765\u7684\u4e3b\u8981\u95ee\u9898\u662f\u5b50\u7c7b\u7ee7\u627f\u4e24\u4efd\u76f8\u540c\u7684\u6570\u636e\uff0c\u5bfc\u81f4\u8d44\u6e90\u6d6a\u8d39\u4ee5\u53ca\u6beb\u65e0\u610f\u4e49</p> </li> <li> <p>\u5229\u7528 \u865a\u7ee7\u627f \u53ef\u4ee5\u89e3\u51b3\u83f1\u5f62\u7ee7\u627f\u95ee\u9898</p> </li> </ul> <pre><code>class sheep : virtual public Animal{};\n</code></pre> <p></p>"}, {"location": "record/algo/code/cpp/01_basic/#_50", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Animal\n{\npublic:\n    int m_Age;\n};\n\n//\u7ee7\u627f\u524d\u52a0virtual\u5173\u952e\u5b57\u540e\uff0c\u53d8\u4e3a\u865a\u7ee7\u627f\n//\u6b64\u65f6\u516c\u5171\u7684\u7236\u7c7bAnimal\u79f0\u4e3a\u865a\u57fa\u7c7b\nclass Sheep : virtual public Animal {};\nclass Tuo   : virtual public Animal {};\nclass SheepTuo : public Sheep\uff0c public Tuo {};\n\nvoid test01()\n{\n    SheepTuo st;\n    st.Sheep::m_Age = 100;\n    st.Tuo::m_Age = 200;\n\n    cout &lt;&lt; \"st.Sheep::m_Age = \" &lt;&lt; st.Sheep::m_Age &lt;&lt; endl;\n    cout &lt;&lt; \"st.Tuo::m_Age = \" &lt;&lt;  st.Tuo::m_Age &lt;&lt; endl;\n    cout &lt;&lt; \"st.m_Age = \" &lt;&lt; st.m_Age &lt;&lt; endl;\n}\n\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#47", "title": "4.7  \u591a\u6001", "text": ""}, {"location": "record/algo/code/cpp/01_basic/#471-c", "title": "4.7.1 \u591a\u6001\u7684\u57fa\u672c\u6982\u5ff5 \u591a\u6001\u662fC++\u9762\u5411\u5bf9\u8c61\u4e09\u5927\u7279\u6027\u4e4b\u4e00 \u591a\u6001\u5206\u4e3a\u4e24\u7c7b", "text": "<ul> <li>\u9759\u6001\u591a\u6001\uff1a\u51fd\u6570\u91cd\u8f7d \u548c \u8fd0\u7b97\u7b26\u91cd\u8f7d\u5c5e\u4e8e\u9759\u6001\u591a\u6001\uff0c\u590d\u7528\u51fd\u6570\u540d</li> <li>\u52a8\u6001\u591a\u6001\uff1a\u6d3e\u751f\u7c7b\u548c\u865a\u51fd\u6570\u5b9e\u73b0\u8fd0\u884c\u65f6\u591a\u6001</li> </ul> <p>\u9759\u6001\u591a\u6001\u548c\u52a8\u6001\u591a\u6001\u533a\u522b\uff1a</p> <ul> <li>\u9759\u6001\u591a\u6001\u7684\u51fd\u6570\u5730\u5740\u65e9\u7ed1\u5b9a  -  \u7f16\u8bd1\u9636\u6bb5\u786e\u5b9a\u51fd\u6570\u5730\u5740</li> <li>\u52a8\u6001\u591a\u6001\u7684\u51fd\u6570\u5730\u5740\u665a\u7ed1\u5b9a  -  \u8fd0\u884c\u9636\u6bb5\u786e\u5b9a\u51fd\u6570\u5730\u5740</li> </ul> <p>\u603b\u7ed3\uff1a</p> <ul> <li> <p>\u591a\u6001\u6ee1\u8db3\u6761\u4ef6</p> </li> <li> <p>\u6709\u7ee7\u627f\u5173\u7cfb</p> </li> <li> <p>\u5b50\u7c7b\u91cd\u5199\u7236\u7c7b\u4e2d\u7684\u865a\u51fd\u6570</p> </li> <li> <p>\u591a\u6001\u4f7f\u7528\u6761\u4ef6</p> </li> <li>\u7236\u7c7b\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61 \u91cd\u5199 \uff1a\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b  \u51fd\u6570\u540d \u53c2\u6570\u5217\u8868 \u5b8c\u5168\u4e00\u81f4\u79f0\u4e3a\u91cd\u5199\u3002 \u52a8\u6001\u591a\u6001\u7684\u539f\u7406 \uff1a\u865a\u51fd\u6570\u6307\u9488\u4e0e\u865a\u51fd\u6570\u8868</li> </ul> <p></p> \u7236\u7c7b vfptr \u4e0e vftable \u5b50\u7c7b\uff08\u672a\u91cd\u5199\u865a\u51fd\u6570\uff09 \u5b50\u7c7b\uff08\u91cd\u5199\u865a\u51fd\u6570\uff09"}, {"location": "record/algo/code/cpp/01_basic/#_51", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Animal\n{\npublic:\n    //Speak\u51fd\u6570\u5c31\u662f\u865a\u51fd\u6570\n    //\u51fd\u6570\u524d\u9762\u52a0\u4e0avirtual\u5173\u952e\u5b57\uff0c\u53d8\u6210\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u7684\u65f6\u5019\u5c31\u4e0d\u80fd\u786e\u5b9a\u51fd\u6570\u8c03\u7528\u4e86\u3002\n    virtual void speak()\n    {\n        cout &lt;&lt; \"\u52a8\u7269\u5728\u8bf4\u8bdd\" &lt;&lt; endl;\n    }\n};\n\nclass Cat :public Animal\n{\npublic:\n    void speak()\n    {\n        cout &lt;&lt; \"\u5c0f\u732b\u5728\u8bf4\u8bdd\" &lt;&lt; endl;\n    }\n};\n\nclass Dog :public Animal\n{\npublic:\n\n    void speak()\n    {\n        cout &lt;&lt; \"\u5c0f\u72d7\u5728\u8bf4\u8bdd\" &lt;&lt; endl;\n    }\n\n};\n//\u6211\u4eec\u5e0c\u671b\u4f20\u5165\u4ec0\u4e48\u5bf9\u8c61\uff0c\u90a3\u4e48\u5c31\u8c03\u7528\u4ec0\u4e48\u5bf9\u8c61\u7684\u51fd\u6570\n//\u5982\u679c\u51fd\u6570\u5730\u5740\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u80fd\u786e\u5b9a\uff0c\u90a3\u4e48\u9759\u6001\u8054\u7f16\n//\u5982\u679c\u51fd\u6570\u5730\u5740\u5728\u8fd0\u884c\u9636\u6bb5\u624d\u80fd\u786e\u5b9a\uff0c\u5c31\u662f\u52a8\u6001\u8054\u7f16\n\nvoid DoSpeak(Animal &amp; animal)\n{\n    animal.speak();\n}\n//\n//\u591a\u6001\u6ee1\u8db3\u6761\u4ef6\uff1a \n//1\u3001\u6709\u7ee7\u627f\u5173\u7cfb\n//2\u3001\u5b50\u7c7b\u91cd\u5199\u7236\u7c7b\u4e2d\u7684\u865a\u51fd\u6570\n//\u591a\u6001\u4f7f\u7528\uff1a\n//\u7236\u7c7b\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61\n\nvoid test01()\n{\n    Cat cat;\n    DoSpeak(cat);\n\n\n    Dog dog;\n    DoSpeak(dog);\n}\n\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#472-", "title": "4.7.2 \u591a\u6001\u6848\u4f8b\u4e00-\u8ba1\u7b97\u5668\u7c7b \u6848\u4f8b\u63cf\u8ff0 \uff1a\u5206\u522b\u5229\u7528\u666e\u901a\u5199\u6cd5\u548c\u591a\u6001\u6280\u672f\uff0c\u8bbe\u8ba1\u5b9e\u73b0\u4e24\u4e2a\u64cd\u4f5c\u6570\u8fdb\u884c\u8fd0\u7b97\u7684\u8ba1\u7b97\u5668\u7c7b\u3002", "text": "<p>\u591a\u6001\u7684\u4f18\u70b9\uff1a</p> <ul> <li>\u4ee3\u7801\u7ec4\u7ec7\u7ed3\u6784\u6e05\u6670</li> <li>\u53ef\u8bfb\u6027\u5f3a</li> <li>\u5229\u4e8e\u524d\u671f\u548c\u540e\u671f\u7684\u6269\u5c55\u4ee5\u53ca\u7ef4\u62a4 \u5f00\u95ed\u539f\u5219 \uff1a\u5bf9\u6269\u5c55\u8fdb\u884c\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u8fdb\u884c\u5173\u95ed\u3002</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_52", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>//\u666e\u901a\u5b9e\u73b0\nclass Calculator {\npublic:\n    int getResult(string oper)\n    {\n        if (oper == \"+\") {\n            return m_Num1 + m_Num2;\n        }\n        else if (oper == \"-\") {\n            return m_Num1 - m_Num2;\n        }\n        else if (oper == \"*\") {\n            return m_Num1 * m_Num2;\n        }\n        //\u5982\u679c\u8981\u63d0\u4f9b\u65b0\u7684\u8fd0\u7b97\uff0c\u9700\u8981\u4fee\u6539\u6e90\u7801\n    }\npublic:\n    int m_Num1;\n    int m_Num2;\n};\n\nvoid test01()\n{\n    //\u666e\u901a\u5b9e\u73b0\u6d4b\u8bd5\n    Calculator c;\n    c.m_Num1 = 10;\n    c.m_Num2 = 10;\n    cout &lt;&lt; c.m_Num1 &lt;&lt; \" + \" &lt;&lt; c.m_Num2 &lt;&lt; \" = \" &lt;&lt; c.getResult(\"+\") &lt;&lt; endl;\n\n    cout &lt;&lt; c.m_Num1 &lt;&lt; \" - \" &lt;&lt; c.m_Num2 &lt;&lt; \" = \" &lt;&lt; c.getResult(\"-\") &lt;&lt; endl;\n\n    cout &lt;&lt; c.m_Num1 &lt;&lt; \" * \" &lt;&lt; c.m_Num2 &lt;&lt; \" = \" &lt;&lt; c.getResult(\"*\") &lt;&lt; endl;\n}\n\n\n\n//\u591a\u6001\u5b9e\u73b0\n//\u62bd\u8c61\u8ba1\u7b97\u5668\u7c7b\n//\u591a\u6001\u4f18\u70b9\uff1a\u4ee3\u7801\u7ec4\u7ec7\u7ed3\u6784\u6e05\u6670\uff0c\u53ef\u8bfb\u6027\u5f3a\uff0c\u5229\u4e8e\u524d\u671f\u548c\u540e\u671f\u7684\u6269\u5c55\u4ee5\u53ca\u7ef4\u62a4\nclass AbstractCalculator\n{\npublic :\n\n    virtual int getResult()\n    {\n        return 0;\n    }\n\n    int m_Num1;\n    int m_Num2;\n};\n\n//\u52a0\u6cd5\u8ba1\u7b97\u5668\nclass AddCalculator :public AbstractCalculator\n{\npublic:\n    int getResult()\n    {\n        return m_Num1 + m_Num2;\n    }\n};\n\n//\u51cf\u6cd5\u8ba1\u7b97\u5668\nclass SubCalculator :public AbstractCalculator\n{\npublic:\n    int getResult()\n    {\n        return m_Num1 - m_Num2;\n    }\n};\n\n//\u4e58\u6cd5\u8ba1\u7b97\u5668\nclass MulCalculator :public AbstractCalculator\n{\npublic:\n    int getResult()\n    {\n        return m_Num1 * m_Num2;\n    }\n};\n\n\nvoid test02()\n{\n    //\u521b\u5efa\u52a0\u6cd5\u8ba1\u7b97\u5668\n    AbstractCalculator *abc = new AddCalculator;\n    abc-&gt;m_Num1 = 10;\n    abc-&gt;m_Num2 = 10;\n    cout &lt;&lt; abc-&gt;m_Num1 &lt;&lt; \" + \" &lt;&lt; abc-&gt;m_Num2 &lt;&lt; \" = \" &lt;&lt; abc-&gt;getResult() &lt;&lt; endl;\n    delete abc;  //\u7528\u5b8c\u4e86\u8bb0\u5f97\u9500\u6bc1\n\n    //\u521b\u5efa\u51cf\u6cd5\u8ba1\u7b97\u5668\n    abc = new SubCalculator;\n    abc-&gt;m_Num1 = 10;\n    abc-&gt;m_Num2 = 10;\n    cout &lt;&lt; abc-&gt;m_Num1 &lt;&lt; \" - \" &lt;&lt; abc-&gt;m_Num2 &lt;&lt; \" = \" &lt;&lt; abc-&gt;getResult() &lt;&lt; endl;\n    delete abc;  \n\n    //\u521b\u5efa\u4e58\u6cd5\u8ba1\u7b97\u5668\n    abc = new MulCalculator;\n    abc-&gt;m_Num1 = 10;\n    abc-&gt;m_Num2 = 10;\n    cout &lt;&lt; abc-&gt;m_Num1 &lt;&lt; \" * \" &lt;&lt; abc-&gt;m_Num2 &lt;&lt; \" = \" &lt;&lt; abc-&gt;getResult() &lt;&lt; endl;\n    delete abc;\n}\n\nint main() {\n\n    //test01();\n\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#473", "title": "4.7.3 \u7eaf\u865a\u51fd\u6570\u548c\u62bd\u8c61\u7c7b", "text": "<p>\u5728\u591a\u6001\u4e2d\uff0c\u901a\u5e38\u7236\u7c7b\u4e2d\u865a\u51fd\u6570\u7684\u5b9e\u73b0\u662f\u6beb\u65e0\u610f\u4e49\u7684\uff0c\u4e3b\u8981\u90fd\u662f\u8c03\u7528\u5b50\u7c7b\u91cd\u5199\u7684\u5185\u5bb9\u3002\u56e0\u6b64\u53ef\u4ee5\u5c06\u865a\u51fd\u6570\u6539\u4e3a \u7eaf\u865a\u51fd\u6570 \u3002</p> <p>\u7eaf\u865a\u51fd\u6570\u8bed\u6cd5\uff1a<code>virtual \u8fd4\u56de\u503c\u7c7b\u578b \u51fd\u6570\u540d \uff08\u53c2\u6570\u5217\u8868\uff09= 0 ;</code></p> <p>\u5f53\u7c7b\u4e2d \u6709\u4e86 \u7eaf\u865a\u51fd\u6570\uff0c\u8fd9\u4e2a\u7c7b\u4e5f\u79f0\u4e3a \u62bd\u8c61\u7c7b \u3002\uff08\u53ea\u8981\u6709\u4e00\u4e2a\u7eaf\u865a\u51fd\u6570\uff0c\u5c31\u53d8\u6210\u4e86\u62bd\u8c61\u7c7b\u3002\uff09 \u62bd\u8c61\u7c7b\u7279\u70b9 \uff1a</p> <ul> <li>\u65e0\u6cd5\u5b9e\u4f8b\u5316\u5bf9\u8c61</li> <li>\u5b50\u7c7b\u5fc5\u987b\u91cd\u5199\u62bd\u8c61\u7c7b\u4e2d\u7684\u7eaf\u865a\u51fd\u6570\uff0c\u5426\u5219\u4e5f\u5c5e\u4e8e\u62bd\u8c61\u7c7b</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_53", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Base\n{\npublic:\n    //\u7eaf\u865a\u51fd\u6570\n    //\u7c7b\u4e2d\u53ea\u8981\u6709\u4e00\u4e2a\u7eaf\u865a\u51fd\u6570\u5c31\u79f0\u4e3a\u62bd\u8c61\u7c7b\n    //\u62bd\u8c61\u7c7b\u65e0\u6cd5\u5b9e\u4f8b\u5316\u5bf9\u8c61\n    //\u5b50\u7c7b\u5fc5\u987b\u91cd\u5199\u7236\u7c7b\u4e2d\u7684\u7eaf\u865a\u51fd\u6570\uff0c\u5426\u5219\u4e5f\u5c5e\u4e8e\u62bd\u8c61\u7c7b\n    virtual void func() = 0;\n};\n\nclass Son :public Base\n{\npublic:\n    virtual void func() \n    {\n        cout &lt;&lt; \"func\u8c03\u7528\" &lt;&lt; endl;\n    };\n};\n\nvoid test01()\n{\n    Base * base = NULL;\n    //base = new Base; // \u9519\u8bef\uff0c\u62bd\u8c61\u7c7b\u65e0\u6cd5\u5b9e\u4f8b\u5316\u5bf9\u8c61\n    base = new Son;\n    base-&gt;func();\n    delete base;//\u8bb0\u5f97\u9500\u6bc1\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#474-", "title": "4.7.4 \u591a\u6001\u6848\u4f8b\u4e8c-\u5236\u4f5c\u996e\u54c1 \u6848\u4f8b\u63cf\u8ff0\uff1a \u5236\u4f5c\u996e\u54c1\u7684\u5927\u81f4\u6d41\u7a0b\u4e3a\uff1a\u716e\u6c34 -  \u51b2\u6ce1 - \u5012\u5165\u676f\u4e2d - \u52a0\u5165\u8f85\u6599\u3002", "text": "<p>\u5229\u7528\u591a\u6001\u6280\u672f\u5b9e\u73b0\u672c\u6848\u4f8b\uff0c\u63d0\u4f9b\u62bd\u8c61\u5236\u4f5c\u996e\u54c1\u57fa\u7c7b\uff0c\u63d0\u4f9b\u5b50\u7c7b\u5236\u4f5c\u5496\u5561\u548c\u8336\u53f6\u3002</p> <p></p>"}, {"location": "record/algo/code/cpp/01_basic/#_54", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>//\u62bd\u8c61\u5236\u4f5c\u996e\u54c1\nclass AbstractDrinking {\npublic:\n    //\u70e7\u6c34\n    virtual void Boil() = 0;\n    //\u51b2\u6ce1\n    virtual void Brew() = 0;\n    //\u5012\u5165\u676f\u4e2d\n    virtual void PourInCup() = 0;\n    //\u52a0\u5165\u8f85\u6599\n    virtual void PutSomething() = 0;\n    //\u89c4\u5b9a\u6d41\u7a0b\n    void MakeDrink() {\n        Boil();\n        Brew();\n        PourInCup();\n        PutSomething();\n    }\n};\n\n//\u5236\u4f5c\u5496\u5561\nclass Coffee : public AbstractDrinking {\npublic:\n    //\u70e7\u6c34\n    virtual void Boil() {\n        cout &lt;&lt; \"\u716e\u519c\u592b\u5c71\u6cc9!\" &lt;&lt; endl;\n    }\n    //\u51b2\u6ce1\n    virtual void Brew() {\n        cout &lt;&lt; \"\u51b2\u6ce1\u5496\u5561!\" &lt;&lt; endl;\n    }\n    //\u5012\u5165\u676f\u4e2d\n    virtual void PourInCup() {\n        cout &lt;&lt; \"\u5c06\u5496\u5561\u5012\u5165\u676f\u4e2d!\" &lt;&lt; endl;\n    }\n    //\u52a0\u5165\u8f85\u6599\n    virtual void PutSomething() {\n        cout &lt;&lt; \"\u52a0\u5165\u725b\u5976!\" &lt;&lt; endl;\n    }\n};\n\n//\u5236\u4f5c\u8336\u6c34\nclass Tea : public AbstractDrinking {\npublic:\n    //\u70e7\u6c34\n    virtual void Boil() {\n        cout &lt;&lt; \"\u716e\u81ea\u6765\u6c34!\" &lt;&lt; endl;\n    }\n    //\u51b2\u6ce1\n    virtual void Brew() {\n        cout &lt;&lt; \"\u51b2\u6ce1\u8336\u53f6!\" &lt;&lt; endl;\n    }\n    //\u5012\u5165\u676f\u4e2d\n    virtual void PourInCup() {\n        cout &lt;&lt; \"\u5c06\u8336\u6c34\u5012\u5165\u676f\u4e2d!\" &lt;&lt; endl;\n    }\n    //\u52a0\u5165\u8f85\u6599\n    virtual void PutSomething() {\n        cout &lt;&lt; \"\u52a0\u5165\u67b8\u675e!\" &lt;&lt; endl;\n    }\n};\n\n//\u4e1a\u52a1\u51fd\u6570\nvoid DoWork(AbstractDrinking* drink) {\n    drink-&gt;MakeDrink();\n    delete drink;\n}\n\nvoid test01() {\n    DoWork(new Coffee);\n    cout &lt;&lt; \"--------------\" &lt;&lt; endl;\n    DoWork(new Tea);\n}\n\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#475", "title": "4.7.5 \u865a\u6790\u6784\u548c\u7eaf\u865a\u6790\u6784", "text": "<p>\u591a\u6001\u4f7f\u7528\u65f6\uff0c\u5982\u679c\u5b50\u7c7b\u4e2d\u6709\u5c5e\u6027\u5f00\u8f9f\u5230\u5806\u533a\uff0c\u90a3\u4e48\u7236\u7c7b\u6307\u9488\u5728\u91ca\u653e\u65f6\u65e0\u6cd5\u8c03\u7528\u5230\u5b50\u7c7b\u7684\u6790\u6784\u4ee3\u7801\u3002</p> <p>\u89e3\u51b3\u65b9\u5f0f\uff1a\u5c06\u7236\u7c7b\u4e2d\u7684\u6790\u6784\u51fd\u6570\u6539\u4e3a \u865a\u6790\u6784 \u6216\u8005 \u7eaf\u865a\u6790\u6784 \u3002</p> <p>\u865a\u6790\u6784\u548c\u7eaf\u865a\u6790\u6784\u5171\u6027\uff1a</p> <ul> <li>\u53ef\u4ee5\u89e3\u51b3\u7236\u7c7b\u6307\u9488\u91ca\u653e\u5b50\u7c7b\u5bf9\u8c61</li> <li> <p>\u90fd\u9700\u8981\u6709\u5177\u4f53\u7684\u51fd\u6570\u5b9e\u73b0 \u865a\u6790\u6784\u548c\u7eaf\u865a\u6790\u6784\u533a\u522b\uff1a</p> </li> <li> <p>\u5982\u679c\u662f\u7eaf\u865a\u6790\u6784\uff0c\u8be5\u7c7b\u5c5e\u4e8e\u62bd\u8c61\u7c7b\uff0c\u65e0\u6cd5\u5b9e\u4f8b\u5316\u5bf9\u8c61</p> </li> </ul> <p>\u865a\u6790\u6784\u8bed\u6cd5\uff1a<code>virtual ~\u7c7b\u540d(){}</code></p> <p>\u7eaf\u865a\u6790\u6784\u8bed\u6cd5\uff1a</p> <ul> <li><code>virtual ~\u7c7b\u540d() = 0;</code></li> <li><code>\u7c7b\u540d::~\u7c7b\u540d(){}</code></li> </ul> <p>\u603b\u7ed3\uff1a</p> <pre><code>1. \u865a\u6790\u6784\u6216\u7eaf\u865a\u6790\u6784\u5c31\u662f\u7528\u6765\u89e3\u51b3\u901a\u8fc7\u7236\u7c7b\u6307\u9488\u91ca\u653e\u5b50\u7c7b\u5bf9\u8c61\n1. \u5982\u679c\u5b50\u7c7b\u4e2d\u6ca1\u6709\u5806\u533a\u6570\u636e\uff0c\u53ef\u4ee5\u4e0d\u5199\u4e3a\u865a\u6790\u6784\u6216\u7eaf\u865a\u6790\u6784\n\n3. \u62e5\u6709\u7eaf\u865a\u6790\u6784\u51fd\u6570\u7684\u7c7b\u4e5f\u5c5e\u4e8e\u62bd\u8c61\u7c7b\n4. \u7eaf\u865a\u51fd\u6570\u4e0e\u7eaf\u865a\u6784\u51fd\u6570\u7684\u533a\u522b\uff1a\u7eaf\u865a\u6784\u51fd\u6570\u9700\u8981\u6709\u5b9e\u73b0\uff0c\u7eaf\u865a\u51fd\u6570\u4e0d\u9700\u8981\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#_55", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>class Animal {\npublic:\n\n    Animal()\n    {\n        cout &lt;&lt; \"Animal \u6784\u9020\u51fd\u6570\u8c03\u7528\uff01\" &lt;&lt; endl;\n    }\n    virtual void Speak() = 0;\n\n    //\u6790\u6784\u51fd\u6570\u52a0\u4e0avirtual\u5173\u952e\u5b57\uff0c\u53d8\u6210\u865a\u6790\u6784\u51fd\u6570\n    //virtual ~Animal()\n    //{\n    //  cout &lt;&lt; \"Animal\u865a\u6790\u6784\u51fd\u6570\u8c03\u7528\uff01\" &lt;&lt; endl;\n    //}\n\n\n    virtual ~Animal() = 0;\n};\n\nAnimal::~Animal()\n{\n    cout &lt;&lt; \"Animal \u7eaf\u865a\u6790\u6784\u51fd\u6570\u8c03\u7528\uff01\" &lt;&lt; endl;\n}\n\n//\u548c\u5305\u542b\u666e\u901a\u7eaf\u865a\u51fd\u6570\u7684\u7c7b\u4e00\u6837\uff0c\u5305\u542b\u4e86\u7eaf\u865a\u6790\u6784\u51fd\u6570\u7684\u7c7b\u4e5f\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\u3002\u4e0d\u80fd\u591f\u88ab\u5b9e\u4f8b\u5316\u3002\n\nclass Cat : public Animal {\npublic:\n    Cat(string name)\n    {\n        cout &lt;&lt; \"Cat\u6784\u9020\u51fd\u6570\u8c03\u7528\uff01\" &lt;&lt; endl;\n        m_Name = new string(name);\n    }\n    virtual void Speak()\n    {\n        cout &lt;&lt; *m_Name &lt;&lt;  \"\u5c0f\u732b\u5728\u8bf4\u8bdd!\" &lt;&lt; endl;\n    }\n    ~Cat()\n    {\n        cout &lt;&lt; \"Cat\u6790\u6784\u51fd\u6570\u8c03\u7528!\" &lt;&lt; endl;\n        if (this-&gt;m_Name != NULL) {\n            delete m_Name;\n            m_Name = NULL;\n        }\n    }\n\npublic:\n    string *m_Name;\n};\n\nvoid test01()\n{\n    Animal *animal = new Cat(\"Tom\");\n    animal-&gt;Speak();\n\n    //\u901a\u8fc7\u7236\u7c7b\u6307\u9488\u53bb\u91ca\u653e\uff0c\u4f1a\u5bfc\u81f4\u5b50\u7c7b\u5bf9\u8c61\u53ef\u80fd\u6e05\u7406\u4e0d\u5e72\u51c0\uff0c\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\n    //\u600e\u4e48\u89e3\u51b3\uff1f\u7ed9\u57fa\u7c7b\u589e\u52a0\u4e00\u4e2a\u865a\u6790\u6784\u51fd\u6570\n    //\u865a\u6790\u6784\u51fd\u6570\u5c31\u662f\u7528\u6765\u89e3\u51b3\u901a\u8fc7\u7236\u7c7b\u6307\u9488\u91ca\u653e\u5b50\u7c7b\u5bf9\u8c61\n    delete animal;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#476-cpu", "title": "4.7.6 \u591a\u6001\u6848\u4f8b\u4e09-\u7535\u8111\u7ec4\u88c5 \u6848\u4f8b\u63cf\u8ff0\uff1a \u7535\u8111\u4e3b\u8981\u7ec4\u6210\u90e8\u4ef6\u4e3a CPU\uff08\u7528\u4e8e\u8ba1\u7b97\uff09\uff0c\u663e\u5361\uff08\u7528\u4e8e\u663e\u793a\uff09\uff0c\u5185\u5b58\u6761\uff08\u7528\u4e8e\u5b58\u50a8\uff09\u3002", "text": "<p>\u5c06\u6bcf\u4e2a\u96f6\u4ef6\u5c01\u88c5\u51fa\u62bd\u8c61\u57fa\u7c7b\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e0d\u540c\u7684\u5382\u5546\u751f\u4ea7\u4e0d\u540c\u7684\u96f6\u4ef6\uff0c\u4f8b\u5982Intel\u5382\u5546\u548cLenovo\u5382\u5546\u3002</p> <p>\u521b\u5efa\u7535\u8111\u7c7b\u63d0\u4f9b\u8ba9\u7535\u8111\u5de5\u4f5c\u7684\u51fd\u6570\uff0c\u5e76\u4e14\u8c03\u7528\u6bcf\u4e2a\u96f6\u4ef6\u5de5\u4f5c\u7684\u63a5\u53e3</p> <p>\u6d4b\u8bd5\u65f6\u7ec4\u88c5\u4e09\u53f0\u4e0d\u540c\u7684\u7535\u8111\u8fdb\u884c\u5de5\u4f5c\u3002</p> <p></p>"}, {"location": "record/algo/code/cpp/01_basic/#_56", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>#include&lt;iostream&gt;\nusing namespace std;\n\n//\u62bd\u8c61CPU\u7c7b\nclass CPU\n{\npublic:\n    //\u62bd\u8c61\u7684\u8ba1\u7b97\u51fd\u6570\n    virtual void calculate() = 0;\n};\n\n//\u62bd\u8c61\u663e\u5361\u7c7b\nclass VideoCard\n{\npublic:\n    //\u62bd\u8c61\u7684\u663e\u793a\u51fd\u6570\n    virtual void display() = 0;\n};\n\n//\u62bd\u8c61\u5185\u5b58\u6761\u7c7b\nclass Memory\n{\npublic:\n    //\u62bd\u8c61\u7684\u5b58\u50a8\u51fd\u6570\n    virtual void storage() = 0;\n};\n\n//\u7535\u8111\u7c7b\nclass Computer\n{\npublic:\n    Computer(CPU * cpu\uff0c VideoCard * vc\uff0c Memory * mem)\n    {\n        m_cpu = cpu;\n        m_vc = vc;\n        m_mem = mem;\n    }\n\n    //\u63d0\u4f9b\u5de5\u4f5c\u7684\u51fd\u6570\n    void work()\n    {\n        //\u8ba9\u96f6\u4ef6\u5de5\u4f5c\u8d77\u6765\uff0c\u8c03\u7528\u63a5\u53e3\n        m_cpu-&gt;calculate();\n\n        m_vc-&gt;display();\n\n        m_mem-&gt;storage();\n    }\n\n    //\u63d0\u4f9b\u6790\u6784\u51fd\u6570 \u91ca\u653e3\u4e2a\u7535\u8111\u96f6\u4ef6\n    ~Computer()\n    {\n\n        //\u91ca\u653eCPU\u96f6\u4ef6\n        if (m_cpu != NULL)\n        {\n            delete m_cpu;\n            m_cpu = NULL;\n        }\n\n        //\u91ca\u653e\u663e\u5361\u96f6\u4ef6\n        if (m_vc != NULL)\n        {\n            delete m_vc;\n            m_vc = NULL;\n        }\n\n        //\u91ca\u653e\u5185\u5b58\u6761\u96f6\u4ef6\n        if (m_mem != NULL)\n        {\n            delete m_mem;\n            m_mem = NULL;\n        }\n    }\n\nprivate:\n\n    CPU * m_cpu; //CPU\u7684\u96f6\u4ef6\u6307\u9488\n    VideoCard * m_vc; //\u663e\u5361\u96f6\u4ef6\u6307\u9488\n    Memory * m_mem; //\u5185\u5b58\u6761\u96f6\u4ef6\u6307\u9488\n};\n\n//\u5177\u4f53\u5382\u5546\n//Intel\u5382\u5546\nclass IntelCPU :public CPU\n{\npublic:\n    virtual void calculate()\n    {\n        cout &lt;&lt; \"Intel\u7684CPU\u5f00\u59cb\u8ba1\u7b97\u4e86\uff01\" &lt;&lt; endl;\n    }\n};\n\nclass IntelVideoCard :public VideoCard\n{\npublic:\n    virtual void display()\n    {\n        cout &lt;&lt; \"Intel\u7684\u663e\u5361\u5f00\u59cb\u663e\u793a\u4e86\uff01\" &lt;&lt; endl;\n    }\n};\n\nclass IntelMemory :public Memory\n{\npublic:\n    virtual void storage()\n    {\n        cout &lt;&lt; \"Intel\u7684\u5185\u5b58\u6761\u5f00\u59cb\u5b58\u50a8\u4e86\uff01\" &lt;&lt; endl;\n    }\n};\n\n//Lenovo\u5382\u5546\nclass LenovoCPU :public CPU\n{\npublic:\n    virtual void calculate()\n    {\n        cout &lt;&lt; \"Lenovo\u7684CPU\u5f00\u59cb\u8ba1\u7b97\u4e86\uff01\" &lt;&lt; endl;\n    }\n};\n\nclass LenovoVideoCard :public VideoCard\n{\npublic:\n    virtual void display()\n    {\n        cout &lt;&lt; \"Lenovo\u7684\u663e\u5361\u5f00\u59cb\u663e\u793a\u4e86\uff01\" &lt;&lt; endl;\n    }\n};\n\nclass LenovoMemory :public Memory\n{\npublic:\n    virtual void storage()\n    {\n        cout &lt;&lt; \"Lenovo\u7684\u5185\u5b58\u6761\u5f00\u59cb\u5b58\u50a8\u4e86\uff01\" &lt;&lt; endl;\n    }\n};\n\n\nvoid test01()\n{\n    //\u7b2c\u4e00\u53f0\u7535\u8111\u96f6\u4ef6\n    CPU * intelCpu = new IntelCPU;\n    VideoCard * intelCard = new IntelVideoCard;\n    Memory * intelMem = new IntelMemory;\n\n    cout &lt;&lt; \"\u7b2c\u4e00\u53f0\u7535\u8111\u5f00\u59cb\u5de5\u4f5c\uff1a\" &lt;&lt; endl;\n    //\u521b\u5efa\u7b2c\u4e00\u53f0\u7535\u8111\n    Computer * computer1 = new Computer(intelCpu\uff0c intelCard\uff0c intelMem);\n    computer1-&gt;work();\n    delete computer1;\n\n    cout &lt;&lt; \"-----------------------\" &lt;&lt; endl;\n    cout &lt;&lt; \"\u7b2c\u4e8c\u53f0\u7535\u8111\u5f00\u59cb\u5de5\u4f5c\uff1a\" &lt;&lt; endl;\n    //\u7b2c\u4e8c\u53f0\u7535\u8111\u7ec4\u88c5\n    Computer * computer2 = new Computer(new LenovoCPU\uff0c new LenovoVideoCard\uff0c new LenovoMemory);;\n    computer2-&gt;work();\n    delete computer2;\n\n    cout &lt;&lt; \"-----------------------\" &lt;&lt; endl;\n    cout &lt;&lt; \"\u7b2c\u4e09\u53f0\u7535\u8111\u5f00\u59cb\u5de5\u4f5c\uff1a\" &lt;&lt; endl;\n    //\u7b2c\u4e09\u53f0\u7535\u8111\u7ec4\u88c5\n    Computer * computer3 = new Computer(new LenovoCPU\uff0c new IntelVideoCard\uff0c new LenovoMemory);;\n    computer3-&gt;work();\n    delete computer3;\n\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#5", "title": "5 \u6587\u4ef6\u64cd\u4f5c", "text": "<p>\u7a0b\u5e8f\u8fd0\u884c\u65f6\u4ea7\u751f\u7684\u6570\u636e\u90fd\u5c5e\u4e8e\u4e34\u65f6\u6570\u636e\uff0c\u7a0b\u5e8f\u4e00\u65e6\u8fd0\u884c\u7ed3\u675f\u90fd\u4f1a\u88ab\u91ca\u653e\u3002</p> <p>\u901a\u8fc7 \u6587\u4ef6\u53ef\u4ee5\u5c06\u6570\u636e\u6301\u4e45\u5316 \u3002</p> <p>C++\u4e2d\u5bf9\u6587\u4ef6\u64cd\u4f5c\u9700\u8981\u5305\u542b\u5934\u6587\u4ef6 \u3002 <p>\u6587\u4ef6\u7c7b\u578b\u5206\u4e3a\u4e24\u79cd\uff1a</p> <ol> <li>\u6587\u672c\u6587\u4ef6 -  \u6587\u4ef6\u4ee5\u6587\u672c\u7684 ASCII\u7801 \u5f62\u5f0f\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u4e2d</li> <li>\u4e8c\u8fdb\u5236\u6587\u4ef6 -  \u6587\u4ef6\u4ee5\u6587\u672c\u7684 \u4e8c\u8fdb\u5236 \u5f62\u5f0f\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u7528\u6237\u4e00\u822c\u4e0d\u80fd\u76f4\u63a5\u8bfb\u61c2\u5b83\u4eec</li> </ol> <p>\u64cd\u4f5c\u6587\u4ef6\u7684\u4e09\u5927\u7c7b:</p> <ol> <li>ofstream\uff1a\u5199\u64cd\u4f5c</li> <li>ifstream\uff1a \u8bfb\u64cd\u4f5c</li> <li>fstream \uff1a \u8bfb\u5199\u64cd\u4f5c</li> </ol>"}, {"location": "record/algo/code/cpp/01_basic/#51", "title": "5.1\u6587\u672c\u6587\u4ef6", "text": ""}, {"location": "record/algo/code/cpp/01_basic/#511", "title": "5.1.1\u5199\u6587\u4ef6", "text": "<p>\u5199\u6587\u4ef6\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u5305\u542b\u5934\u6587\u4ef6   </li> </ol> <p><code>#include &lt;fstream&gt;</code></p> <ol> <li>\u521b\u5efa\u6d41\u5bf9\u8c61  </li> </ol> <p><code>ofstream ofs;</code></p> <ol> <li>\u6253\u5f00\u6587\u4ef6</li> </ol> <p><code>ofs.open(\"\u6587\u4ef6\u8def\u5f84\"\uff0c\u6253\u5f00\u65b9\u5f0f);</code></p> <ol> <li>\u5199\u6570\u636e</li> </ol> <p><code>ofs &lt;&lt; \"\u5199\u5165\u7684\u6570\u636e\";</code></p> <ol> <li>\u5173\u95ed\u6587\u4ef6</li> </ol> <p><code>ofs.close();</code></p> <p>\u6587\u4ef6\u6253\u5f00\u65b9\u5f0f\uff1a</p> \u6253\u5f00\u65b9\u5f0f \u89e3\u91ca ios::in \u4e3a\u8bfb\u6587\u4ef6\u800c\u6253\u5f00\u6587\u4ef6 ios::out \u4e3a\u5199\u6587\u4ef6\u800c\u6253\u5f00\u6587\u4ef6 ios::ate \u521d\u59cb\u4f4d\u7f6e\uff1a\u6587\u4ef6\u5c3e ios::app \u8ffd\u52a0\u65b9\u5f0f\u5199\u6587\u4ef6 ios::trunc \u5982\u679c\u6587\u4ef6\u5b58\u5728\u5148\u5220\u9664\uff0c\u518d\u521b\u5efa ios::binary \u4e8c\u8fdb\u5236\u65b9\u5f0f <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u6587\u4ef6\u64cd\u4f5c\u5fc5\u987b\u5305\u542b\u5934\u6587\u4ef6 fstream</li> <li>\u8bfb\u6587\u4ef6\u53ef\u4ee5\u5229\u7528 ofstream  \uff0c\u6216\u8005fstream\u7c7b</li> <li>\u6253\u5f00\u6587\u4ef6\u65f6\u5019\u9700\u8981\u6307\u5b9a\u64cd\u4f5c\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u4ee5\u53ca\u6253\u5f00\u65b9\u5f0f</li> <li>\u5229\u7528&lt;&lt;\u53ef\u4ee5\u5411\u6587\u4ef6\u4e2d\u5199\u6570\u636e</li> <li>\u64cd\u4f5c\u5b8c\u6bd5\uff0c\u8981\u5173\u95ed\u6587\u4ef6</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_57", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>#include &lt;fstream&gt;\n\nvoid test01()\n{\n    ofstream ofs;\n    ofs.open(\"test.txt\"\uff0c ios::out);\n\n    ofs &lt;&lt; \"\u59d3\u540d\uff1a\u5f20\u4e09\" &lt;&lt; endl;\n    ofs &lt;&lt; \"\u6027\u522b\uff1a\u7537\" &lt;&lt; endl;\n    ofs &lt;&lt; \"\u5e74\u9f84\uff1a18\" &lt;&lt; endl;\n\n    ofs.close();\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#512", "title": "5.1.2\u8bfb\u6587\u4ef6", "text": "<p>\u8bfb\u6587\u4ef6\u4e0e\u5199\u6587\u4ef6\u6b65\u9aa4\u76f8\u4f3c\uff0c\u4f46\u662f\u8bfb\u53d6\u65b9\u5f0f\u76f8\u5bf9\u4e8e\u6bd4\u8f83\u591a</p> <p>\u8bfb\u6587\u4ef6\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u5305\u542b\u5934\u6587\u4ef6   </li> </ol> <p><code>#include &lt;fstream&gt;</code></p> <ol> <li>\u521b\u5efa\u6d41\u5bf9\u8c61  </li> </ol> <p><code>ifstream ifs;</code></p> <ol> <li>\u6253\u5f00\u6587\u4ef6\u5e76\u5224\u65ad\u6587\u4ef6\u662f\u5426\u6253\u5f00\u6210\u529f</li> </ol> <p><code>ifs.open(\"\u6587\u4ef6\u8def\u5f84\"\uff0c\u6253\u5f00\u65b9\u5f0f);</code></p> <ol> <li>\u8bfb\u6570\u636e</li> </ol> <p><code>\u56db\u79cd\u65b9\u5f0f\u8bfb\u53d6</code></p> <ol> <li>\u5173\u95ed\u6587\u4ef6</li> </ol> <p><code>ifs.close();</code></p> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u8bfb\u6587\u4ef6\u53ef\u4ee5\u5229\u7528 ifstream  \uff0c\u6216\u8005fstream\u7c7b</li> <li>\u5229\u7528is_open\u51fd\u6570\u53ef\u4ee5\u5224\u65ad\u6587\u4ef6\u662f\u5426\u6253\u5f00\u6210\u529f</li> <li>close \u5173\u95ed\u6587\u4ef6 </li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#_58", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>#include &lt;fstream&gt;\n#include &lt;string&gt;\nvoid test01()\n{\n    ifstream ifs;\n    ifs.open(\"test.txt\"\uff0c ios::in);\n\n    if (!ifs.is_open())\n    {\n        cout &lt;&lt; \"\u6587\u4ef6\u6253\u5f00\u5931\u8d25\" &lt;&lt; endl;\n        return;\n    }\n\n    //\u7b2c\u4e00\u79cd\u65b9\u5f0f\n    //char buf[1024] = { 0 };\n    //while (ifs &gt;&gt; buf)\n    //{\n    //  cout &lt;&lt; buf &lt;&lt; endl;\n    //}\n\n    //\u7b2c\u4e8c\u79cd\n    //char buf[1024] = { 0 };\n    //while (ifs.getline(buf\uff0csizeof(buf)))\n    //{\n    //  cout &lt;&lt; buf &lt;&lt; endl;\n    //}\n\n    //\u7b2c\u4e09\u79cd\n    //string buf;\n    //while (getline(ifs\uff0c buf))\n    //{\n    //  cout &lt;&lt; buf &lt;&lt; endl;\n    //}\n\n    //\u7b2c\u56db\u79cd\n    char c;\n    while ((c = ifs.get()) != EOF)\n    {\n        cout &lt;&lt; c;\n    }\n\n    ifs.close();\n\n\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#52", "title": "5.2 \u4e8c\u8fdb\u5236\u6587\u4ef6", "text": "<p>\u4ee5\u4e8c\u8fdb\u5236\u7684\u65b9\u5f0f\u5bf9\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\uff1a</p> <ul> <li>\u6253\u5f00\u65b9\u5f0f\u8981\u6307\u5b9a\u4e3a <code>ios::binary</code>\u3002</li> </ul>"}, {"location": "record/algo/code/cpp/01_basic/#521", "title": "5.2.1 \u5199\u6587\u4ef6", "text": "<p>\u4e8c\u8fdb\u5236\u65b9\u5f0f\u5199\u6587\u4ef6\u4e3b\u8981\u5229\u7528\u6d41\u5bf9\u8c61\u8c03\u7528\u6210\u5458\u51fd\u6570write</p> <p>\u51fd\u6570\u539f\u578b \uff1a<code>ostream&amp; write(const char * buffer\uff0cint len);</code></p> <p>\u53c2\u6570\u89e3\u91ca\uff1a\u5b57\u7b26\u6307\u9488buffer\u6307\u5411\u5185\u5b58\u4e2d\u4e00\u6bb5\u5b58\u50a8\u7a7a\u95f4\uff1blen\u662f\u8bfb\u5199\u7684\u5b57\u8282\u6570\u3002</p>"}, {"location": "record/algo/code/cpp/01_basic/#_59", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>#include &lt;fstream&gt;\n#include &lt;string&gt;\n\nclass Person\n{\npublic:\n    char m_Name[64];\n    int m_Age;\n};\n\n//\u4e8c\u8fdb\u5236\u6587\u4ef6  \u5199\u6587\u4ef6\nvoid test01()\n{\n    //1\u3001\u5305\u542b\u5934\u6587\u4ef6\n\n    //2\u3001\u521b\u5efa\u8f93\u51fa\u6d41\u5bf9\u8c61\n    ofstream ofs(\"person.txt\"\uff0c ios::out | ios::binary);\n\n    //3\u3001\u6253\u5f00\u6587\u4ef6\n    //ofs.open(\"person.txt\"\uff0c ios::out | ios::binary);\n\n    Person p = {\"\u5f20\u4e09\"  \uff0c 18};\n\n    //4\u3001\u5199\u6587\u4ef6\n    ofs.write((const char *)&amp;p\uff0c sizeof(p));\n\n    //5\u3001\u5173\u95ed\u6587\u4ef6\n    ofs.close();\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/01_basic/#522", "title": "5.2.2 \u8bfb\u6587\u4ef6", "text": "<p>\u4e8c\u8fdb\u5236\u65b9\u5f0f\u8bfb\u6587\u4ef6\u4e3b\u8981\u5229\u7528\u6d41\u5bf9\u8c61\u8c03\u7528\u6210\u5458\u51fd\u6570read\u3002</p> <p>\u51fd\u6570\u539f\u578b\uff1a<code>istream&amp; read(char *buffer\uff0cint len);</code></p> <p>\u53c2\u6570\u89e3\u91ca\uff1a\u5b57\u7b26\u6307\u9488buffer\u6307\u5411\u5185\u5b58\u4e2d\u4e00\u6bb5\u5b58\u50a8\u7a7a\u95f4\u3002len\u662f\u8bfb\u5199\u7684\u5b57\u8282\u6570\u3002</p>"}, {"location": "record/algo/code/cpp/01_basic/#_60", "title": "\u793a\u4f8b\uff1a", "text": "<pre><code>#include &lt;fstream&gt;\n#include &lt;string&gt;\n\nclass Person\n{\npublic:\n    char m_Name[64];\n    int m_Age;\n};\n\nvoid test01()\n{\n    ifstream ifs(\"person.txt\"\uff0c ios::in | ios::binary);\n    if (!ifs.is_open())\n    {\n        cout &lt;&lt; \"\u6587\u4ef6\u6253\u5f00\u5931\u8d25\" &lt;&lt; endl;\n    }\n\n    Person p;\n    ifs.read((char *)&amp;p\uff0c sizeof(p));\n\n    cout &lt;&lt; \"\u59d3\u540d\uff1a \" &lt;&lt; p.m_Name &lt;&lt; \" \u5e74\u9f84\uff1a \" &lt;&lt; p.m_Age &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/code/cpp/02_advance/", "title": "C++\u63d0\u9ad8\u7f16\u7a0b", "text": "<ul> <li>\u672c\u9636\u6bb5\u4e3b\u8981\u9488\u5bf9C++ \u6cdb\u578b\u7f16\u7a0b \u548c STL \u6280\u672f\u505a\u8be6\u7ec6\u8bb2\u89e3\uff0c\u63a2\u8ba8C++\u66f4\u6df1\u5c42\u7684\u4f7f\u7528\u3002</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#1", "title": "1 \u6a21\u677f", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#11", "title": "1.1 \u6a21\u677f\u7684\u6982\u5ff5", "text": "<p>\u6a21\u677f\u5c31\u662f\u5efa\u7acb \u901a\u7528\u7684\u6a21\u5177 \uff0c\u5927\u5927 \u63d0\u9ad8\u590d\u7528\u6027 \u3002</p> <p>\u6a21\u677f\u7684\u7279\u70b9\uff1a</p> <ul> <li>\u6a21\u677f\u4e0d\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u6846\u67b6</li> <li>\u6a21\u677f\u7684\u901a\u7528\u5e76\u4e0d\u662f\u4e07\u80fd\u7684</li> </ul> <p>\u4f8b\u5982\u751f\u6d3b\u4e2d\u7684\u6a21\u677f\uff1a</p> \u4e00\u5bf8\u7167\u7247\u6a21\u677f PPT\u6a21\u677f"}, {"location": "record/algo/code/cpp/02_advance/#12", "title": "1.2 \u51fd\u6570\u6a21\u677f", "text": "<ul> <li> <p>\u9664\u4e86\u9762\u5411\u5bf9\u8c61\uff0cC++\u53e6\u4e00\u79cd\u7f16\u7a0b\u601d\u60f3\u79f0\u4e3a \u6cdb\u578b\u7f16\u7a0b \uff0c\u4e3b\u8981\u5229\u7528\u7684\u6280\u672f\u5c31\u662f \u6a21\u677f \u3002</p> </li> <li> <p>C++\u63d0\u4f9b\u4e24\u79cd\u6a21\u677f\u673a\u5236: \u51fd\u6570\u6a21\u677f \u548c \u7c7b\u6a21\u677f \u3002</p> </li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#121", "title": "1.2.1 \u51fd\u6570\u6a21\u677f\u8bed\u6cd5", "text": "<p>\u51fd\u6570\u6a21\u677f \u4f5c\u7528\uff1a - \u5efa\u7acb\u4e00\u4e2a\u901a\u7528\u51fd\u6570\uff0c\u5176\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u548c\u5f62\u53c2\u7c7b\u578b\u53ef\u4ee5\u4e0d\u5177\u4f53\u5236\u5b9a\uff0c\u7528\u4e00\u4e2a \u865a\u62df\u7684\u7c7b\u578b \u6765\u4ee3\u8868\u3002 \u8bed\u6cd5\uff1a <code>C++ template&lt;typename T&gt; \u51fd\u6570\u58f0\u660e\u6216\u5b9a\u4e49</code> \u89e3\u91ca\uff1a - <code>template</code>  ---  \u58f0\u660e\u521b\u5efa\u6a21\u677f</p> <ul> <li> <p><code>typename</code>  --- \u8868\u9762\u5176\u540e\u9762\u7684\u7b26\u53f7\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u7528class\u4ee3\u66ff</p> </li> <li> <p><code>T</code>    ---   \u901a\u7528\u7684\u6570\u636e\u7c7b\u578b\uff0c\u540d\u79f0\u53ef\u4ee5\u66ff\u6362\uff0c\u901a\u5e38\u4e3a\u5927\u5199\u5b57\u6bcd \u793a\u4f8b\uff1a ```C++ //\u4ea4\u6362\u6574\u578b\u51fd\u6570 void swapInt(int&amp; a, int&amp; b) {     int temp = a;     a = b;     b = temp; }</p> </li> </ul> <p>//\u4ea4\u6362\u6d6e\u70b9\u578b\u51fd\u6570 void swapDouble(double&amp; a, double&amp; b) {     double temp = a;     a = b;     b = temp; }</p> <p>//\u5229\u7528\u6a21\u677f\u63d0\u4f9b\u901a\u7528\u7684\u4ea4\u6362\u51fd\u6570 template void mySwap(T&amp; a, T&amp; b) {     T temp = a;     a = b;     b = temp; } <p>void test01() {     int a = 10;     int b = 20;</p> <pre><code>//swapInt(a, b);\n\n//\u5229\u7528\u6a21\u677f\u5b9e\u73b0\u4ea4\u6362\n//1\u3001\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\nmySwap(a, b);\n\n//2\u3001\u663e\u793a\u6307\u5b9a\u7c7b\u578b\nmySwap&lt;int&gt;(a, b);\n\ncout &lt;&lt; \"a = \" &lt;&lt; a &lt;&lt; endl;\ncout &lt;&lt; \"b = \" &lt;&lt; b &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a * \u51fd\u6570\u6a21\u677f\u5229\u7528\u5173\u952e\u5b57 template * \u4f7f\u7528\u51fd\u6570\u6a21\u677f\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\u3001\u663e\u793a\u6307\u5b9a\u7c7b\u578b * \u6a21\u677f\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u63d0\u9ad8\u590d\u7528\u6027\uff0c\u5c06\u7c7b\u578b\u53c2\u6570\u5316</p>"}, {"location": "record/algo/code/cpp/02_advance/#122-t", "title": "1.2.2 \u51fd\u6570\u6a21\u677f\u6ce8\u610f\u4e8b\u9879 \u6ce8\u610f\u4e8b\u9879\uff1a * \u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\uff0c\u5fc5\u987b\u63a8\u5bfc\u51fa \u4e00\u81f4\u7684\u6570\u636e\u7c7b\u578b <code>T</code> \u624d\u53ef\u4ee5\u4f7f\u7528", "text": "<ul> <li>\u6a21\u677f\u5fc5\u987b\u8981\u786e\u5b9a\u51faT\u7684\u6570\u636e\u7c7b\u578b\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528 \u793a\u4f8b\uff1a ```C++ //\u5229\u7528\u6a21\u677f\u63d0\u4f9b\u901a\u7528\u7684\u4ea4\u6362\u51fd\u6570 template void mySwap(T&amp; a, T&amp; b) {     T temp = a;     a = b;     b = temp; } <p>// 1\u3001\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\uff0c\u5fc5\u987b\u63a8\u5bfc\u51fa\u4e00\u81f4\u7684\u6570\u636e\u7c7b\u578bT,\u624d\u53ef\u4ee5\u4f7f\u7528 void test01() {     int a = 10;     int b = 20;     char c = 'c';</p> <pre><code>mySwap(a, b); // \u6b63\u786e\uff0c\u53ef\u4ee5\u63a8\u5bfc\u51fa\u4e00\u81f4\u7684T\n//mySwap(a, c); // \u9519\u8bef\uff0c\u63a8\u5bfc\u4e0d\u51fa\u4e00\u81f4\u7684T\u7c7b\u578b\n</code></pre> <p>}</p> <p>// 2\u3001\u6a21\u677f\u5fc5\u987b\u8981\u786e\u5b9a\u51faT\u7684\u6570\u636e\u7c7b\u578b\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528 template void func() {     cout &lt;&lt; \"func \u8c03\u7528\" &lt;&lt; endl; } <p>void test02() {     //func(); //\u9519\u8bef\uff0c\u6a21\u677f\u4e0d\u80fd\u72ec\u7acb\u4f7f\u7528\uff0c\u5fc5\u987b\u786e\u5b9a\u51faT\u7684\u7c7b\u578b     func(); //\u5229\u7528\u663e\u793a\u6307\u5b9a\u7c7b\u578b\u7684\u65b9\u5f0f\uff0c\u7ed9T\u4e00\u4e2a\u7c7b\u578b\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528\u8be5\u6a21\u677f } <p>int main() {</p> <pre><code>test01();\ntest02();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a * \u4f7f\u7528\u6a21\u677f\u65f6\u5fc5\u987b\u786e\u5b9a\u51fa\u901a\u7528\u6570\u636e\u7c7b\u578bT\uff0c\u5e76\u4e14\u80fd\u591f\u63a8\u5bfc\u51fa\u4e00\u81f4\u7684\u7c7b\u578b</p>"}, {"location": "record/algo/code/cpp/02_advance/#123", "title": "1.2.3 \u51fd\u6570\u6a21\u677f\u6848\u4f8b \u6848\u4f8b\u63cf\u8ff0\uff1a * \u5229\u7528\u51fd\u6570\u6a21\u677f\u5c01\u88c5\u4e00\u4e2a\u6392\u5e8f\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u5bf9 \u4e0d\u540c\u6570\u636e\u7c7b\u578b\u6570\u7ec4 \u8fdb\u884c\u6392\u5e8f", "text": "<ul> <li>\u6392\u5e8f\u89c4\u5219\u4ece\u5927\u5230\u5c0f\uff0c\u6392\u5e8f\u7b97\u6cd5\u4e3a \u9009\u62e9\u6392\u5e8f * \u5206\u522b\u5229\u7528 char\u6570\u7ec4 \u548c int\u6570\u7ec4 \u8fdb\u884c\u6d4b\u8bd5 \u793a\u4f8b\uff1a ```C++ //\u4ea4\u6362\u7684\u51fd\u6570\u6a21\u677f template void mySwap(T &amp;a, T&amp;b) {     T temp = a;     a = b;     b = temp; } <p>template // \u4e5f\u53ef\u4ee5\u66ff\u6362\u6210typename //\u5229\u7528\u9009\u62e9\u6392\u5e8f\uff0c\u8fdb\u884c\u5bf9\u6570\u7ec4\u4ece\u5927\u5230\u5c0f\u7684\u6392\u5e8f void mySort(T arr[], int len) {     for (int i = 0; i &lt; len; i++)     {         int max = i; //\u6700\u5927\u6570\u7684\u4e0b\u6807         for (int j = i + 1; j &lt; len; j++)         {             if (arr[max] &lt; arr[j])             {                 max = j;             }         }         if (max != i) //\u5982\u679c\u6700\u5927\u6570\u7684\u4e0b\u6807\u4e0d\u662fi\uff0c\u4ea4\u6362\u4e24\u8005         {             mySwap(arr[max], arr[i]);         }     } } template void printArray(T arr[], int len) { <pre><code>for (int i = 0; i &lt; len; i++) {\n    cout &lt;&lt; arr[i] &lt;&lt; \" \";\n}\ncout &lt;&lt; endl;\n</code></pre> <p>} void test01() {     //\u6d4b\u8bd5char\u6570\u7ec4     char charArr[] = \"bdcfeagh\";     int num = sizeof(charArr) / sizeof(char);     mySort(charArr, num);     printArray(charArr, num); }</p> <p>void test02() {     //\u6d4b\u8bd5int\u6570\u7ec4     int intArr[] = { 7, 5, 8, 1, 3, 9, 2, 4, 6 };     int num = sizeof(intArr) / sizeof(int);     mySort(intArr, num);     printArray(intArr, num); }</p> <p>int main() {</p> <pre><code>test01();\ntest02();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a \u6a21\u677f\u53ef\u4ee5\u63d0\u9ad8\u4ee3\u7801\u590d\u7528\uff0c\u9700\u8981\u719f\u7ec3\u638c\u63e1</p>"}, {"location": "record/algo/code/cpp/02_advance/#124", "title": "1.2.4 \u666e\u901a\u51fd\u6570\u4e0e\u51fd\u6570\u6a21\u677f\u7684\u533a\u522b \u666e\u901a\u51fd\u6570\u4e0e\u51fd\u6570\u6a21\u677f\u533a\u522b\uff1a * \u666e\u901a\u51fd\u6570\u8c03\u7528\u65f6\u53ef\u4ee5\u53d1\u751f\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\uff08\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff09", "text": "<ul> <li>\u51fd\u6570\u6a21\u677f\u8c03\u7528\u65f6\uff0c\u5982\u679c\u5229\u7528\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\uff0c\u4e0d\u4f1a\u53d1\u751f\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362</li> <li>\u5982\u679c\u5229\u7528\u663e\u793a\u6307\u5b9a\u7c7b\u578b\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u53d1\u751f\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362 \u793a\u4f8b\uff1a ```C++ //\u666e\u901a\u51fd\u6570 int myAdd01(int a, int b) {     return a + b; }</li> </ul> <p>//\u51fd\u6570\u6a21\u677f template T myAdd02(T a, T b) {     return a + b; } <p>//\u4f7f\u7528\u51fd\u6570\u6a21\u677f\u65f6\uff0c\u5982\u679c\u7528\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\uff0c\u4e0d\u4f1a\u53d1\u751f\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362,\u5373\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362 void test01() {     int a = 10;     int b = 20;     char c = 'c';</p> <pre><code>cout &lt;&lt; myAdd01(a, c) &lt;&lt; endl; //\u6b63\u786e\uff0c\u5c06char\u7c7b\u578b\u7684'c'\u9690\u5f0f\u8f6c\u6362\u4e3aint\u7c7b\u578b  'c' \u5bf9\u5e94 ASCII\u7801 99\n\n//myAdd02(a, c); // \u62a5\u9519\uff0c\u4f7f\u7528\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\u65f6\uff0c\u4e0d\u4f1a\u53d1\u751f\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\n\nmyAdd02&lt;int&gt;(a, c); //\u6b63\u786e\uff0c\u5982\u679c\u7528\u663e\u793a\u6307\u5b9a\u7c7b\u578b\uff0c\u53ef\u4ee5\u53d1\u751f\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1a\u5efa\u8bae\u4f7f\u7528\u663e\u793a\u6307\u5b9a\u7c7b\u578b\u7684\u65b9\u5f0f\uff0c\u8c03\u7528\u51fd\u6570\u6a21\u677f\uff0c\u56e0\u4e3a\u53ef\u4ee5\u81ea\u5df1\u786e\u5b9a\u901a\u7528\u7c7b\u578bT </p>"}, {"location": "record/algo/code/cpp/02_advance/#125-1", "title": "1.2.5 \u666e\u901a\u51fd\u6570\u4e0e\u51fd\u6570\u6a21\u677f\u7684\u8c03\u7528\u89c4\u5219 \u8c03\u7528\u89c4\u5219\u5982\u4e0b\uff1a 1. \u5982\u679c\u51fd\u6570\u6a21\u677f\u548c\u666e\u901a\u51fd\u6570\u90fd\u53ef\u4ee5\u5b9e\u73b0\uff0c\u4f18\u5148\u8c03\u7528\u666e\u901a\u51fd\u6570", "text": "<ol> <li>\u53ef\u4ee5\u901a\u8fc7\u7a7a\u6a21\u677f\u53c2\u6570\u5217\u8868\u6765\u5f3a\u5236\u8c03\u7528\u51fd\u6570\u6a21\u677f</li> <li>\u51fd\u6570\u6a21\u677f\u4e5f\u53ef\u4ee5\u53d1\u751f\u91cd\u8f7d</li> <li>\u5982\u679c\u51fd\u6570\u6a21\u677f\u53ef\u4ee5\u4ea7\u751f\u66f4\u597d\u7684\u5339\u914d,\u4f18\u5148\u8c03\u7528\u51fd\u6570\u6a21\u677f \u793a\u4f8b\uff1a <code>C++ //\u666e\u901a\u51fd\u6570\u4e0e\u51fd\u6570\u6a21\u677f\u8c03\u7528\u89c4\u5219 void myPrint(int a, int b) {     cout &lt;&lt; \"\u8c03\u7528\u7684\u666e\u901a\u51fd\u6570\" &lt;&lt; endl; }  template&lt;typename T&gt; void myPrint(T a, T b)  {      cout &lt;&lt; \"\u8c03\u7528\u7684\u6a21\u677f\" &lt;&lt; endl; }  template&lt;typename T&gt; void myPrint(T a, T b, T c)  {      cout &lt;&lt; \"\u8c03\u7528\u91cd\u8f7d\u7684\u6a21\u677f\" &lt;&lt; endl;  }  void test01() {     //1\u3001\u5982\u679c\u51fd\u6570\u6a21\u677f\u548c\u666e\u901a\u51fd\u6570\u90fd\u53ef\u4ee5\u5b9e\u73b0\uff0c\u4f18\u5148\u8c03\u7528\u666e\u901a\u51fd\u6570     // \u6ce8\u610f \u5982\u679c\u544a\u8bc9\u7f16\u8bd1\u5668  \u666e\u901a\u51fd\u6570\u662f\u6709\u7684\uff0c\u4f46\u53ea\u662f\u58f0\u660e\u6ca1\u6709\u5b9e\u73b0\uff0c\u6216\u8005\u4e0d\u5728\u5f53\u524d\u6587\u4ef6\u5185\u5b9e\u73b0\uff0c\u5c31\u4f1a\u62a5\u9519\u627e\u4e0d\u5230     int a = 10;     int b = 20;     myPrint(a, b); //\u8c03\u7528\u666e\u901a\u51fd\u6570      //2\u3001\u53ef\u4ee5\u901a\u8fc7\u7a7a\u6a21\u677f\u53c2\u6570\u5217\u8868\u6765\u5f3a\u5236\u8c03\u7528\u51fd\u6570\u6a21\u677f     myPrint&lt;&gt;(a, b); //\u8c03\u7528\u51fd\u6570\u6a21\u677f      //3\u3001\u51fd\u6570\u6a21\u677f\u4e5f\u53ef\u4ee5\u53d1\u751f\u91cd\u8f7d     int c = 30;     myPrint(a, b, c); //\u8c03\u7528\u91cd\u8f7d\u7684\u51fd\u6570\u6a21\u677f      //4\u3001 \u5982\u679c\u51fd\u6570\u6a21\u677f\u53ef\u4ee5\u4ea7\u751f\u66f4\u597d\u7684\u5339\u914d,\u4f18\u5148\u8c03\u7528\u51fd\u6570\u6a21\u677f     char c1 = 'a';     char c2 = 'b';     myPrint(c1, c2); //\u8c03\u7528\u51fd\u6570\u6a21\u677f }  int main() {      test01();      system(\"pause\");      return 0; }</code> \u603b\u7ed3\uff1a \u65e2\u7136\u63d0\u4f9b\u4e86\u51fd\u6570\u6a21\u677f\uff0c\u6700\u597d\u5c31\u4e0d\u8981\u63d0\u4f9b\u666e\u901a\u51fd\u6570\uff0c\u5426\u5219\u5bb9\u6613\u51fa\u73b0\u4e8c\u4e49\u6027\u3002 </li> </ol>"}, {"location": "record/algo/code/cpp/02_advance/#126-c", "title": "1.2.6 \u6a21\u677f\u7684\u5c40\u9650\u6027 \u5c40\u9650\u6027\uff1a * \u6a21\u677f\u7684\u901a\u7528\u6027\u5e76\u4e0d\u662f\u4e07\u80fd\u7684 \u4f8b\u5982\uff1a ```C++", "text": "<p>template void f(T a, T b) {      a = b; } ``` <p>\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u63d0\u4f9b\u7684\u8d4b\u503c\u64cd\u4f5c\uff0c\u5982\u679c\u4f20\u5165\u7684a\u548cb\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5c31\u65e0\u6cd5\u5b9e\u73b0\u4e86\u3002 \u518d\u4f8b\u5982\uff1a ```C++ template void f(T a, T b) {      if(a &gt; b) { ... } } <pre><code>\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u5982\u679cT\u7684\u6570\u636e\u7c7b\u578b\u4f20\u5165\u7684\u662f\u50cfPerson\u8fd9\u6837\u7684\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\u3002\n\n\u56e0\u6b64C++\u4e3a\u4e86\u89e3\u51b3\u8fd9\u79cd\u95ee\u9898\uff0cf\u63d0\u4f9b\u6a21\u677f\u7684\u91cd\u8f7d\uff0c\u53ef\u4ee5\u4e3a\u8fd9\u4e9b **\u7279\u5b9a\u7684\u7c7b\u578b** \u63d0\u4f9b **\u5177\u4f53\u5316\u7684\u6a21\u677f** \u3002\n\n```c++\ntemplate&lt;&gt; void f(Person &amp;a, Person &amp;b)\n{\n    ...\n}\n``` **\u793a\u4f8b\uff1a** ```C++\n#include&lt;iostream&gt;\nusing namespace std;\n\n#include &lt;string&gt;\n\nclass Person\n{\npublic:\n    Person(string name, int age)\n    {\n        this-&gt;m_Name = name;\n        this-&gt;m_Age = age;\n    }\n    string m_Name;\n    int m_Age;\n};\n\n//\u666e\u901a\u51fd\u6570\u6a21\u677f\ntemplate&lt;class T&gt;\nbool myCompare(T&amp; a, T&amp; b)\n{\n    if (a == b)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }\n}\n\n\n//\u5177\u4f53\u5316\uff0c\u663e\u793a\u5177\u4f53\u5316\u7684\u539f\u578b\u548c\u5b9a\u610f\u601d\u4ee5template&lt;&gt;\u5f00\u5934\uff0c\u5e76\u901a\u8fc7\u540d\u79f0\u6765\u6307\u51fa\u7c7b\u578b\n//\u5177\u4f53\u5316\u4f18\u5148\u4e8e\u5e38\u89c4\u6a21\u677f\ntemplate&lt;&gt; bool myCompare(Person &amp;p1, Person &amp;p2)\n{\n    if ( p1.m_Name  == p2.m_Name &amp;&amp; p1.m_Age == p2.m_Age)\n    {\n        return true;\n    }\n    else\n    {\n        return false;\n    }\n}\n\nvoid test01()\n{\n    int a = 10;\n    int b = 20;\n    //\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u901a\u7528\u7684\u51fd\u6570\u6a21\u677f\n    bool ret = myCompare(a, b);\n    if (ret)\n    {\n        cout &lt;&lt; \"a == b \" &lt;&lt; endl;\n    }\n    else\n    {\n        cout &lt;&lt; \"a != b \" &lt;&lt; endl;\n    }\n}\n\nvoid test02()\n{\n    Person p1(\"Tom\", 10);\n    Person p2(\"Tom\", 10);\n    //\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\uff0c\u4e0d\u4f1a\u8c03\u7528\u666e\u901a\u7684\u51fd\u6570\u6a21\u677f\n    //\u53ef\u4ee5\u521b\u5efa\u5177\u4f53\u5316\u7684Person\u6570\u636e\u7c7b\u578b\u7684\u6a21\u677f\uff0c\u7528\u4e8e\u7279\u6b8a\u5904\u7406\u8fd9\u4e2a\u7c7b\u578b\n    bool ret = myCompare(p1, p2);\n    if (ret)\n    {\n        cout &lt;&lt; \"p1 == p2 \" &lt;&lt; endl;\n    }\n    else\n    {\n        cout &lt;&lt; \"p1 != p2 \" &lt;&lt; endl;\n    }\n}\n\nint main() {\n\n    test01();\n\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n``` **\u603b\u7ed3\uff1a** * \u5229\u7528\u5177\u4f53\u5316\u7684\u6a21\u677f\uff0c\u53ef\u4ee5\u89e3\u51b3\u81ea\u5b9a\u4e49\u7c7b\u578b\u7684\u901a\u7528\u5316\n* \u5b66\u4e60\u6a21\u677f\u5e76\u4e0d\u662f\u4e3a\u4e86\u5199\u6a21\u677f\uff0c\u800c\u662f\u5728STL\u80fd\u591f\u8fd0\u7528\u7cfb\u7edf\u63d0\u4f9b\u7684\u6a21\u677f\n\n### 1.3 \u7c7b\u6a21\u677f\n\n#### 1.3.1 \u7c7b\u6a21\u677f\u8bed\u6cd5\n\n\u7c7b\u6a21\u677f **\u4f5c\u7528** \uff1a\n\n* \u5efa\u7acb\u4e00\u4e2a\u901a\u7528\u7c7b\uff0c\u7c7b\u4e2d\u7684\u6210\u5458 \u6570\u636e\u7c7b\u578b\u53ef\u4ee5\u4e0d\u5177\u4f53\u5236\u5b9a\uff0c\u7528\u4e00\u4e2a **\u865a\u62df\u7684\u7c7b\u578b** \u6765\u4ee3\u8868\u3002 **\u8bed\u6cd5\uff1a** ```c++\ntemplate&lt;typename T&gt;\n\u7c7b\n``` **\u89e3\u91ca\uff1a** - `template`  ---  \u58f0\u660e\u521b\u5efa\u6a21\u677f\n\n- `typename`  --- \u8868\u9762\u5176\u540e\u9762\u7684\u7b26\u53f7\u662f\u4e00\u79cd\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u7528class\u4ee3\u66ff\n\n- `T`    ---   \u901a\u7528\u7684\u6570\u636e\u7c7b\u578b\uff0c\u540d\u79f0\u53ef\u4ee5\u66ff\u6362\uff0c\u901a\u5e38\u4e3a\u5927\u5199\u5b57\u6bcd **\u793a\u4f8b\uff1a** ```C++\n#include &lt;string&gt;\n//\u7c7b\u6a21\u677f\ntemplate&lt;class NameType, class AgeType&gt; \nclass Person\n{\npublic:\n    Person(NameType name, AgeType age)\n    {\n        this-&gt;mName = name;\n        this-&gt;mAge = age;\n    }\n    void showPerson()\n    {\n        cout &lt;&lt; \"name: \" &lt;&lt; this-&gt;mName &lt;&lt; \" age: \" &lt;&lt; this-&gt;mAge &lt;&lt; endl;\n    }\npublic:\n    NameType mName;\n    AgeType mAge;\n};\n\nvoid test01()\n{\n    // \u6307\u5b9aNameType \u4e3astring\u7c7b\u578b\uff0cAgeType \u4e3a int\u7c7b\u578b\n    Person&lt;string, int&gt;P1(\"\u5b59\u609f\u7a7a\", 999);\n    P1.showPerson();\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n``` **\u603b\u7ed3\uff1a** - \u7c7b\u6a21\u677f\u548c\u51fd\u6570\u6a21\u677f\u8bed\u6cd5\u76f8\u4f3c\uff0c\u5728\u58f0\u660e\u6a21\u677ftemplate\u540e\u9762\u52a0\u7c7b\uff0c\u6b64\u7c7b\u79f0\u4e3a\u7c7b\u6a21\u677f\n\n#### 1.3.2 \u7c7b\u6a21\u677f\u4e0e\u51fd\u6570\u6a21\u677f\u533a\u522b\n\n\u7c7b\u6a21\u677f\u4e0e\u51fd\u6570\u6a21\u677f\u533a\u522b\u4e3b\u8981\u6709\u4e24\u70b9\uff1a\n\n1. **\u7c7b\u6a21\u677f\u6ca1\u6709\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\u7684\u4f7f\u7528\u65b9\u5f0f** 2. \u7c7b\u6a21\u677f\u5728\u6a21\u677f\u53c2\u6570\u5217\u8868\u4e2d **\u53ef\u4ee5\u6709\u9ed8\u8ba4\u53c2\u6570** \n **\u793a\u4f8b\uff1a** ```C++\n#include &lt;string&gt;\n//\u7c7b\u6a21\u677f\ntemplate&lt;class NameType, class AgeType = int&gt; \nclass Person\n{\npublic:\n    Person(NameType name, AgeType age)\n    {\n        this-&gt;mName = name;\n        this-&gt;mAge = age;\n    }\n    void showPerson()\n    {\n        cout &lt;&lt; \"name: \" &lt;&lt; this-&gt;mName &lt;&lt; \" age: \" &lt;&lt; this-&gt;mAge &lt;&lt; endl;\n    }\npublic:\n    NameType mName;\n    AgeType mAge;\n};\n\n//1\u3001\u7c7b\u6a21\u677f\u6ca1\u6709\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\u7684\u4f7f\u7528\u65b9\u5f0f\nvoid test01()\n{\n    // Person p(\"\u5b59\u609f\u7a7a\", 1000); // \u9519\u8bef \u7c7b\u6a21\u677f\u4f7f\u7528\u65f6\u5019\uff0c\u4e0d\u53ef\u4ee5\u7528\u81ea\u52a8\u7c7b\u578b\u63a8\u5bfc\n    Person &lt;string ,int&gt;p(\"\u5b59\u609f\u7a7a\", 1000); //\u5fc5\u987b\u4f7f\u7528\u663e\u793a\u6307\u5b9a\u7c7b\u578b\u7684\u65b9\u5f0f\uff0c\u4f7f\u7528\u7c7b\u6a21\u677f\n    p.showPerson();\n}\n\n//2\u3001\u7c7b\u6a21\u677f\u5728\u6a21\u677f\u53c2\u6570\u5217\u8868\u4e2d\u53ef\u4ee5\u6709\u9ed8\u8ba4\u53c2\u6570\nvoid test02()\n{\n    Person &lt;string&gt; p(\"\u732a\u516b\u6212\", 999); //\u7c7b\u6a21\u677f\u4e2d\u7684\u6a21\u677f\u53c2\u6570\u5217\u8868 \u53ef\u4ee5\u6307\u5b9a\u9ed8\u8ba4\u53c2\u6570\n    p.showPerson();\n}\n\nint main() {\n\n    test01();\n\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n``` **\u603b\u7ed3\uff1a** * \u7c7b\u6a21\u677f\u4f7f\u7528\u53ea\u80fd\u7528\u663e\u793a\u6307\u5b9a\u7c7b\u578b\u65b9\u5f0f\n* \u7c7b\u6a21\u677f\u4e2d\u7684\u6a21\u677f\u53c2\u6570\u5217\u8868\u53ef\u4ee5\u6709\u9ed8\u8ba4\u53c2\u6570\n\n#### 1.3.3 \u7c7b\u6a21\u677f\u4e2d\u6210\u5458\u51fd\u6570\u521b\u5efa\u65f6\u673a\n\n\u7c7b\u6a21\u677f\u4e2d\u6210\u5458\u51fd\u6570\u548c\u666e\u901a\u7c7b\u4e2d\u6210\u5458\u51fd\u6570\u521b\u5efa\u65f6\u673a\u662f\u6709\u533a\u522b\u7684\uff1a\n\n* \u666e\u901a\u7c7b\u4e2d\u7684\u6210\u5458\u51fd\u6570\u4e00\u5f00\u59cb\u5c31\u53ef\u4ee5\u521b\u5efa\n* \u7c7b\u6a21\u677f\u4e2d\u7684\u6210\u5458\u51fd\u6570\u5728\u8c03\u7528\u65f6\u624d\u521b\u5efa **\u793a\u4f8b\uff1a** ```C++\nclass Person1\n{\npublic:\n    void showPerson1()\n    {\n        cout &lt;&lt; \"Person1 show\" &lt;&lt; endl;\n    }\n};\n\nclass Person2\n{\npublic:\n    void showPerson2()\n    {\n        cout &lt;&lt; \"Person2 show\" &lt;&lt; endl;\n    }\n};\n\ntemplate&lt;class T&gt;\nclass MyClass\n{\npublic:\n    T obj;\n\n    //\u7c7b\u6a21\u677f\u4e2d\u7684\u6210\u5458\u51fd\u6570\uff0c\u5e76\u4e0d\u662f\u4e00\u5f00\u59cb\u5c31\u521b\u5efa\u7684\uff0c\u800c\u662f\u5728\u6a21\u677f\u8c03\u7528\u65f6\u518d\u751f\u6210\n\n    void fun1() { obj.showPerson1(); }\n    void fun2() { obj.showPerson2(); }\n\n};\n\nvoid test01()\n{\n    MyClass&lt;Person1&gt; m;\n\n    m.fun1();\n\n    //m.fun2();//\u7f16\u8bd1\u4f1a\u51fa\u9519\uff0c\u8bf4\u660e\u51fd\u6570\u8c03\u7528\u624d\u4f1a\u53bb\u521b\u5efa\u6210\u5458\u51fd\u6570\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n``` **\u603b\u7ed3\uff1a** - \u7c7b\u6a21\u677f\u4e2d\u7684\u6210\u5458\u51fd\u6570\u5e76\u4e0d\u662f\u4e00\u5f00\u59cb\u5c31\u521b\u5efa\u7684\uff0c\u5728\u8c03\u7528\u65f6\u624d\u53bb\u521b\u5efa\u3002\n\n#### 1.3.4 \u7c7b\u6a21\u677f\u5bf9\u8c61\u505a\u51fd\u6570\u53c2\u6570\n\n\u5b66\u4e60\u76ee\u6807\uff1a\n\n* \u7c7b\u6a21\u677f\u5b9e\u4f8b\u5316\u51fa\u7684\u5bf9\u8c61\uff0c\u5411\u51fd\u6570\u4f20\u53c2\u7684\u65b9\u5f0f\n\n\u4e00\u5171\u6709\u4e09\u79cd\u4f20\u5165\u65b9\u5f0f\uff1a\n\n1. \u6307\u5b9a\u4f20\u5165\u7684\u7c7b\u578b   --- \u76f4\u63a5\u663e\u793a\u5bf9\u8c61\u7684\u6570\u636e\u7c7b\u578b\n2. \u53c2\u6570\u6a21\u677f\u5316           --- \u5c06\u5bf9\u8c61\u4e2d\u7684\u53c2\u6570\u53d8\u4e3a\u6a21\u677f\u8fdb\u884c\u4f20\u9012\n3. \u6574\u4e2a\u7c7b\u6a21\u677f\u5316       --- \u5c06\u8fd9\u4e2a\u5bf9\u8c61\u7c7b\u578b \u6a21\u677f\u5316\u8fdb\u884c\u4f20\u9012 **\u793a\u4f8b\uff1a** ```C++\n#include &lt;string&gt;\n//\u7c7b\u6a21\u677f\ntemplate&lt;class NameType, class AgeType = int&gt; \nclass Person\n{\npublic:\n    Person(NameType name, AgeType age)\n    {\n        this-&gt;mName = name;\n        this-&gt;mAge = age;\n    }\n    void showPerson()\n    {\n        cout &lt;&lt; \"name: \" &lt;&lt; this-&gt;mName &lt;&lt; \" age: \" &lt;&lt; this-&gt;mAge &lt;&lt; endl;\n    }\npublic:\n    NameType mName;\n    AgeType mAge;\n};\n\n//1\u3001\u6307\u5b9a\u4f20\u5165\u7684\u7c7b\u578b\nvoid printPerson1(Person&lt;string, int&gt; &amp;p) \n{\n    p.showPerson();\n}\nvoid test01()\n{\n    Person &lt;string, int &gt;p(\"\u5b59\u609f\u7a7a\", 100);\n    printPerson1(p);\n}\n\n//2\u3001\u53c2\u6570\u6a21\u677f\u5316\ntemplate &lt;class T1, class T2&gt;\nvoid printPerson2(Person&lt;T1, T2&gt;&amp;p)\n{\n    p.showPerson();\n    cout &lt;&lt; \"T1\u7684\u7c7b\u578b\u4e3a\uff1a \" &lt;&lt; typeid(T1).name() &lt;&lt; endl;\n    cout &lt;&lt; \"T2\u7684\u7c7b\u578b\u4e3a\uff1a \" &lt;&lt; typeid(T2).name() &lt;&lt; endl;\n}\nvoid test02()\n{\n    Person &lt;string, int &gt;p(\"\u732a\u516b\u6212\", 90);\n    printPerson2(p);\n}\n\n//3\u3001\u6574\u4e2a\u7c7b\u6a21\u677f\u5316\ntemplate&lt;class T&gt;\nvoid printPerson3(T &amp; p)\n{\n    cout &lt;&lt; \"T\u7684\u7c7b\u578b\u4e3a\uff1a \" &lt;&lt; typeid(T).name() &lt;&lt; endl;\n    p.showPerson();\n\n}\nvoid test03()\n{\n    Person &lt;string, int &gt;p(\"\u5510\u50e7\", 30);\n    printPerson3(p);\n}\n\nint main() {\n\n    test01();\n    test02();\n    test03();\n\n    system(\"pause\");\n\n    return 0;\n}\n``` **\u603b\u7ed3\uff1a** * \u901a\u8fc7\u7c7b\u6a21\u677f\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6709\u4e09\u79cd\u65b9\u5f0f\u5411\u51fd\u6570\u4e2d\u8fdb\u884c\u4f20\u53c2\n* \u4f7f\u7528\u6bd4\u8f83\u5e7f\u6cdb\u662f\u7b2c\u4e00\u79cd\uff1a\u6307\u5b9a\u4f20\u5165\u7684\u7c7b\u578b\n\n#### 1.3.5 \u7c7b\u6a21\u677f\u4e0e\u7ee7\u627f\n\n\u5f53\u7c7b\u6a21\u677f\u78b0\u5230\u7ee7\u627f\u65f6\uff0c\u9700\u8981\u6ce8\u610f\u4e00\u4e0b\u51e0\u70b9\uff1a\n\n* \u5f53\u5b50\u7c7b\u7ee7\u627f\u7684\u7236\u7c7b\u662f\u4e00\u4e2a\u7c7b\u6a21\u677f\u65f6\uff0c\u5b50\u7c7b\u5728\u58f0\u660e\u7684\u65f6\u5019\uff0c\u8981\u6307\u5b9a\u51fa\u7236\u7c7b\u4e2dT\u7684\u7c7b\u578b\n* \u5982\u679c\u4e0d\u6307\u5b9a\uff0c\u7f16\u8bd1\u5668\u65e0\u6cd5\u7ed9\u5b50\u7c7b\u5206\u914d\u5185\u5b58\n* \u5982\u679c\u60f3\u7075\u6d3b\u6307\u5b9a\u51fa\u7236\u7c7b\u4e2dT\u7684\u7c7b\u578b\uff0c\u5b50\u7c7b\u4e5f\u9700\u53d8\u4e3a\u7c7b\u6a21\u677f **\u793a\u4f8b\uff1a** ```C++\ntemplate&lt;class T&gt;\nclass Base\n{\n    T m;\n};\n\n//class Son:public Base  //\u9519\u8bef\uff0cc++\u7f16\u8bd1\u9700\u8981\u7ed9\u5b50\u7c7b\u5206\u914d\u5185\u5b58\uff0c\u5fc5\u987b\u77e5\u9053\u7236\u7c7b\u4e2dT\u7684\u7c7b\u578b\u624d\u53ef\u4ee5\u5411\u4e0b\u7ee7\u627f\nclass Son :public Base&lt;int&gt; //\u5fc5\u987b\u6307\u5b9a\u4e00\u4e2a\u7c7b\u578b\n{\n};\nvoid test01()\n{\n    Son c;\n}\n\n//\u7c7b\u6a21\u677f\u7ee7\u627f\u7c7b\u6a21\u677f ,\u53ef\u4ee5\u7528T2\u6307\u5b9a\u7236\u7c7b\u4e2d\u7684T\u7c7b\u578b\ntemplate&lt;class T1, class T2&gt;\nclass Son2 :public Base&lt;T2&gt;\n{\npublic:\n    Son2()\n    {\n        cout &lt;&lt; typeid(T1).name() &lt;&lt; endl;\n        cout &lt;&lt; typeid(T2).name() &lt;&lt; endl;\n    }\n};\n\nvoid test02()\n{\n    Son2&lt;int, char&gt; child1;\n}\n\n\nint main() {\n\n    test01();\n\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a\u5982\u679c\u7236\u7c7b\u662f\u7c7b\u6a21\u677f\uff0c\u5b50\u7c7b\u9700\u8981\u6307\u5b9a\u51fa\u7236\u7c7b\u4e2dT\u7684\u6570\u636e\u7c7b\u578b\u3002</p>"}, {"location": "record/algo/code/cpp/02_advance/#136", "title": "1.3.6 \u7c7b\u6a21\u677f\u6210\u5458\u51fd\u6570\u7c7b\u5916\u5b9e\u73b0", "text": "<p>\u5b66\u4e60\u76ee\u6807\uff1a\u80fd\u591f\u638c\u63e1\u7c7b\u6a21\u677f\u4e2d\u7684\u6210\u5458\u51fd\u6570\u7c7b\u5916\u5b9e\u73b0\u3002 \u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include", "title": "include  <p>//\u7c7b\u6a21\u677f\u4e2d\u6210\u5458\u51fd\u6570\u7c7b\u5916\u5b9e\u73b0 template class Person { public:     //\u6210\u5458\u51fd\u6570\u7c7b\u5185\u58f0\u660e     Person(T1 name, T2 age);     void showPerson(); <p>public:     T1 m_Name;     T2 m_Age; };</p> <p>//\u6784\u9020\u51fd\u6570 \u7c7b\u5916\u5b9e\u73b0 template Person::Person(T1 name, T2 age) {     this-&gt;m_Name = name;     this-&gt;m_Age = age; } <p>//\u6210\u5458\u51fd\u6570 \u7c7b\u5916\u5b9e\u73b0 template void Person::showPerson() {     cout &lt;&lt; \"\u59d3\u540d: \" &lt;&lt; this-&gt;m_Name &lt;&lt; \" \u5e74\u9f84:\" &lt;&lt; this-&gt;m_Age &lt;&lt; endl; } <p>void test01() {     Person p(\"Tom\", 20);     p.showPerson(); } <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1a\u7c7b\u6a21\u677f\u4e2d\u6210\u5458\u51fd\u6570\u7c7b\u5916\u5b9e\u73b0\u65f6\uff0c\u9700\u8981\u52a0\u4e0a\u6a21\u677f\u53c2\u6570\u5217\u8868\u3002 </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#137", "title": "1.3.7 \u7c7b\u6a21\u677f\u5206\u6587\u4ef6\u7f16\u5199", "text": "<p>\u5b66\u4e60\u76ee\u6807\uff1a  * \u638c\u63e1\u7c7b\u6a21\u677f\u6210\u5458\u51fd\u6570\u5206\u6587\u4ef6\u7f16\u5199\u4ea7\u751f\u7684\u95ee\u9898\u4ee5\u53ca\u89e3\u51b3\u65b9\u5f0f  \u95ee\u9898\uff1a  * \u7c7b\u6a21\u677f\u4e2d\u6210\u5458\u51fd\u6570\u521b\u5efa\u65f6\u673a\u662f\u5728\u8c03\u7528\u9636\u6bb5\uff0c\u5bfc\u81f4\u5206\u6587\u4ef6\u7f16\u5199\u65f6\u94fe\u63a5\u4e0d\u5230   \u89e3\u51b3\uff1a  * \u89e3\u51b3\u65b9\u5f0f1\uff1a\u76f4\u63a5\u5305\u542b.cpp\u6e90\u6587\u4ef6 * \u89e3\u51b3\u65b9\u5f0f2\uff1a\u5c06\u58f0\u660e\u548c\u5b9e\u73b0\u5199\u5230\u540c\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u5e76\u66f4\u6539\u540e\u7f00\u540d\u4e3a.hpp\uff0chpp\u662f\u7ea6\u5b9a\u7684\u540d\u79f0\uff0c\u5e76\u4e0d\u662f\u5f3a\u5236  \u793a\u4f8b\uff1a person.hpp\u4e2d\u4ee3\u7801\uff1a  ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#pragma-once", "title": "pragma once", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_1", "title": "include  <p>using namespace std;</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_2", "title": "include  <p>template class Person { public:     Person(T1 name, T2 age);     void showPerson(); public:     T1 m_Name;     T2 m_Age; };  //\u6784\u9020\u51fd\u6570 \u7c7b\u5916\u5b9e\u73b0 template Person::Person(T1 name, T2 age) {     this-&gt;m_Name = name;     this-&gt;m_Age = age; }  //\u6210\u5458\u51fd\u6570 \u7c7b\u5916\u5b9e\u73b0 template void Person::showPerson() {     cout &lt;&lt; \"\u59d3\u540d: \" &lt;&lt; this-&gt;m_Name &lt;&lt; \" \u5e74\u9f84:\" &lt;&lt; this-&gt;m_Age &lt;&lt; endl; } ``` <p>\u7c7b\u6a21\u677f\u5206\u6587\u4ef6\u7f16\u5199.cpp\u4e2d\u4ee3\u7801</p> <pre><code>#include&lt;iostream&gt;\nusing namespace std;\n\n//#include \"person.h\"\n#include \"person.cpp\" //\u89e3\u51b3\u65b9\u5f0f1\uff0c\u5305\u542bcpp\u6e90\u6587\u4ef6\n\n//\u89e3\u51b3\u65b9\u5f0f2\uff0c\u5c06\u58f0\u660e\u548c\u5b9e\u73b0\u5199\u5230\u4e00\u8d77\uff0c\u6587\u4ef6\u540e\u7f00\u540d\u6539\u4e3a.hpp\n#include \"person.hpp\"\nvoid test01()\n{\n    Person&lt;string, int&gt; p(\"Tom\", 10);\n    p.showPerson();\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a\u4e3b\u6d41\u7684\u89e3\u51b3\u65b9\u5f0f\u662f\u7b2c\u4e8c\u79cd\uff0c\u5c06\u7c7b\u6a21\u677f\u6210\u5458\u51fd\u6570\u5199\u5230\u4e00\u8d77\uff0c\u5e76\u5c06\u540e\u7f00\u540d\u6539\u4e3a.hpp \u3002</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#138", "title": "1.3.8 \u7c7b\u6a21\u677f\u4e0e\u53cb\u5143", "text": "<p>\u5b66\u4e60\u76ee\u6807\uff1a</p> <ul> <li>\u638c\u63e1\u7c7b\u6a21\u677f\u914d\u5408\u53cb\u5143\u51fd\u6570\u7684\u7c7b\u5185\u548c\u7c7b\u5916\u5b9e\u73b0</li> </ul> <p>\u5168\u5c40\u51fd\u6570\u7c7b\u5185\u5b9e\u73b0 - \u76f4\u63a5\u5728\u7c7b\u5185\u58f0\u660e\u53cb\u5143\u5373\u53ef</p> <p>\u5168\u5c40\u51fd\u6570\u7c7b\u5916\u5b9e\u73b0 - \u9700\u8981\u63d0\u524d\u8ba9\u7f16\u8bd1\u5668\u77e5\u9053\u5168\u5c40\u51fd\u6570\u7684\u5b58\u5728 \u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_3", "title": "include  <p>//2\u3001\u5168\u5c40\u51fd\u6570\u914d\u5408\u53cb\u5143  \u7c7b\u5916\u5b9e\u73b0 - \u5148\u505a\u51fd\u6570\u6a21\u677f\u58f0\u660e\uff0c\u4e0b\u65b9\u5728\u505a\u51fd\u6570\u6a21\u677f\u5b9a\u4e49\uff0c\u5728\u505a\u53cb\u5143 template class Person; <p>//\u5982\u679c\u58f0\u660e\u4e86\u51fd\u6570\u6a21\u677f\uff0c\u53ef\u4ee5\u5c06\u5b9e\u73b0\u5199\u5230\u540e\u9762\uff0c\u5426\u5219\u9700\u8981\u5c06\u5b9e\u73b0\u4f53\u5199\u5230\u7c7b\u7684\u524d\u9762\u8ba9\u7f16\u8bd1\u5668\u63d0\u524d\u770b\u5230 //template void printPerson2(Person &amp; p);  <p>template void printPerson2(Person &amp; p) {     cout &lt;&lt; \"\u7c7b\u5916\u5b9e\u73b0 ---- \u59d3\u540d\uff1a \" &lt;&lt; p.m_Name &lt;&lt; \" \u5e74\u9f84\uff1a\" &lt;&lt; p.m_Age &lt;&lt; endl; } <p>template class Person {     //1\u3001\u5168\u5c40\u51fd\u6570\u914d\u5408\u53cb\u5143   \u7c7b\u5185\u5b9e\u73b0     friend void printPerson(Person &amp; p)     {         cout &lt;&lt; \"\u59d3\u540d\uff1a \" &lt;&lt; p.m_Name &lt;&lt; \" \u5e74\u9f84\uff1a\" &lt;&lt; p.m_Age &lt;&lt; endl;     } <pre><code>//\u5168\u5c40\u51fd\u6570\u914d\u5408\u53cb\u5143  \u7c7b\u5916\u5b9e\u73b0\nfriend void printPerson2&lt;&gt;(Person&lt;T1, T2&gt; &amp; p);\n</code></pre> <p>public:</p> <pre><code>Person(T1 name, T2 age)\n{\n    this-&gt;m_Name = name;\n    this-&gt;m_Age = age;\n}\n</code></pre> <p>private:     T1 m_Name;     T2 m_Age;</p> <p>};</p> <p>//1\u3001\u5168\u5c40\u51fd\u6570\u5728\u7c7b\u5185\u5b9e\u73b0 void test01() {     Person p(\"Tom\", 20);     printPerson(p); } <p>//2\u3001\u5168\u5c40\u51fd\u6570\u5728\u7c7b\u5916\u5b9e\u73b0 void test02() {     Person p(\"Jerry\", 30);     printPerson2(p); } <p>int main() {</p> <pre><code>//test01();\n\ntest02();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1a\u5efa\u8bae\u5168\u5c40\u51fd\u6570\u505a\u7c7b\u5185\u5b9e\u73b0\uff0c\u7528\u6cd5\u7b80\u5355\uff0c\u800c\u4e14\u7f16\u8bd1\u5668\u53ef\u4ee5\u76f4\u63a5\u8bc6\u522b\u3002 </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#139", "title": "1.3.9 \u7c7b\u6a21\u677f\u6848\u4f8b", "text": "<p>\u6848\u4f8b\u63cf\u8ff0:  \u5b9e\u73b0\u4e00\u4e2a\u901a\u7528\u7684\u6570\u7ec4\u7c7b\uff0c\u8981\u6c42\u5982\u4e0b\uff1a  * \u53ef\u4ee5\u5bf9\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u4ee5\u53ca\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u7684\u6570\u636e\u8fdb\u884c\u5b58\u50a8 * \u5c06\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u5b58\u50a8\u5230\u5806\u533a * \u6784\u9020\u51fd\u6570\u4e2d\u53ef\u4ee5\u4f20\u5165\u6570\u7ec4\u7684\u5bb9\u91cf * \u63d0\u4f9b\u5bf9\u5e94\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4ee5\u53caoperator=\u9632\u6b62\u6d45\u62f7\u8d1d\u95ee\u9898 * \u63d0\u4f9b\u5c3e\u63d2\u6cd5\u548c\u5c3e\u5220\u6cd5\u5bf9\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u589e\u52a0\u548c\u5220\u9664 * \u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u7684\u65b9\u5f0f\u8bbf\u95ee\u6570\u7ec4\u4e2d\u7684\u5143\u7d20 * \u53ef\u4ee5\u83b7\u53d6\u6570\u7ec4\u4e2d\u5f53\u524d\u5143\u7d20\u4e2a\u6570\u548c\u6570\u7ec4\u7684\u5bb9\u91cf \u793a\u4f8b\uff1a myArray.hpp\u4e2d\u4ee3\u7801  ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#pragma-once_1", "title": "pragma once", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_4", "title": "include  <p>using namespace std;  template class MyArray { public:      //\u6784\u9020\u51fd\u6570     MyArray(int capacity)     {         this-&gt;m_Capacity = capacity;         this-&gt;m_Size = 0;         pAddress = new T[this-&gt;m_Capacity];     }      //\u62f7\u8d1d\u6784\u9020     MyArray(const MyArray &amp; arr)     {         this-&gt;m_Capacity = arr.m_Capacity;         this-&gt;m_Size = arr.m_Size;         this-&gt;pAddress = new T[this-&gt;m_Capacity];         for (int i = 0; i &lt; this-&gt;m_Size; i++)         {             //\u5982\u679cT\u4e3a\u5bf9\u8c61\uff0c\u800c\u4e14\u8fd8\u5305\u542b\u6307\u9488\uff0c\u5fc5\u987b\u9700\u8981\u91cd\u8f7d = \u64cd\u4f5c\u7b26\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u7b49\u53f7\u4e0d\u662f \u6784\u9020 \u800c\u662f\u8d4b\u503c\uff0c             // \u666e\u901a\u7c7b\u578b\u53ef\u4ee5\u76f4\u63a5= \u4f46\u662f\u6307\u9488\u7c7b\u578b\u9700\u8981\u6df1\u62f7\u8d1d             this-&gt;pAddress[i] = arr.pAddress[i];         }     }      //\u91cd\u8f7d= \u64cd\u4f5c\u7b26  \u9632\u6b62\u6d45\u62f7\u8d1d\u95ee\u9898     MyArray&amp; operator=(const MyArray&amp; myarray) {          if (this-&gt;pAddress != NULL) {             delete[] this-&gt;pAddress;             this-&gt;m_Capacity = 0;             this-&gt;m_Size = 0;         }          this-&gt;m_Capacity = myarray.m_Capacity;         this-&gt;m_Size = myarray.m_Size;         this-&gt;pAddress = new T[this-&gt;m_Capacity];         for (int i = 0; i &lt; this-&gt;m_Size; i++) {             this-&gt;pAddress[i] = myarray[i];         }         return *this;     }      //\u91cd\u8f7d[] \u64cd\u4f5c\u7b26  arr[0]     T&amp; operator      {         return this-&gt;pAddress[index]; //\u4e0d\u8003\u8651\u8d8a\u754c\uff0c\u7528\u6237\u81ea\u5df1\u53bb\u5904\u7406     }      //\u5c3e\u63d2\u6cd5     void Push_back(const T &amp; val)     {         if (this-&gt;m_Capacity == this-&gt;m_Size)         {             return;         }         this-&gt;pAddress[this-&gt;m_Size] = val;         this-&gt;m_Size++;     }      //\u5c3e\u5220\u6cd5     void Pop_back()     {         if (this-&gt;m_Size == 0)         {             return;         }         this-&gt;m_Size--;     }      //\u83b7\u53d6\u6570\u7ec4\u5bb9\u91cf     int getCapacity()     {         return this-&gt;m_Capacity;     }      //\u83b7\u53d6\u6570\u7ec4\u5927\u5c0f     int getSize()     {         return this-&gt;m_Size;     }       //\u6790\u6784     ~MyArray()     {         if (this-&gt;pAddress != NULL)         {             delete[] this-&gt;pAddress;             this-&gt;pAddress = NULL;             this-&gt;m_Capacity = 0;             this-&gt;m_Size = 0;         }     }  private:     T * pAddress;  //\u6307\u5411\u4e00\u4e2a\u5806\u7a7a\u95f4\uff0c\u8fd9\u4e2a\u7a7a\u95f4\u5b58\u50a8\u771f\u6b63\u7684\u6570\u636e     int m_Capacity; //\u5bb9\u91cf     int m_Size;   // \u5927\u5c0f }; ``` <p>\u7c7b\u6a21\u677f\u6848\u4f8b\u2014\u6570\u7ec4\u7c7b\u5c01\u88c5.cpp\u4e2d</p> <pre><code>#include \"myArray.hpp\"\n#include &lt;string&gt;\n\nvoid printIntArray(MyArray&lt;int&gt;&amp; arr) {\n    for (int i = 0; i &lt; arr.getSize(); i++) {\n        cout &lt;&lt; arr[i] &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\n//\u6d4b\u8bd5\u5185\u7f6e\u6570\u636e\u7c7b\u578b\nvoid test01()\n{\n    MyArray&lt;int&gt; array1(10);\n    for (int i = 0; i &lt; 10; i++)\n    {\n        array1.Push_back(i);\n    }\n    cout &lt;&lt; \"array1\u6253\u5370\u8f93\u51fa\uff1a\" &lt;&lt; endl;\n    printIntArray(array1);\n    cout &lt;&lt; \"array1\u7684\u5927\u5c0f\uff1a\" &lt;&lt; array1.getSize() &lt;&lt; endl;\n    cout &lt;&lt; \"array1\u7684\u5bb9\u91cf\uff1a\" &lt;&lt; array1.getCapacity() &lt;&lt; endl;\n\n    cout &lt;&lt; \"--------------------------\" &lt;&lt; endl;\n\n    MyArray&lt;int&gt; array2(array1);\n    array2.Pop_back();\n    cout &lt;&lt; \"array2\u6253\u5370\u8f93\u51fa\uff1a\" &lt;&lt; endl;\n    printIntArray(array2);\n    cout &lt;&lt; \"array2\u7684\u5927\u5c0f\uff1a\" &lt;&lt; array2.getSize() &lt;&lt; endl;\n    cout &lt;&lt; \"array2\u7684\u5bb9\u91cf\uff1a\" &lt;&lt; array2.getCapacity() &lt;&lt; endl;\n}\n\n//\u6d4b\u8bd5\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\nclass Person {\npublic:\n    Person() {} \n        Person(string name, int age) {\n        this-&gt;m_Name = name;\n        this-&gt;m_Age = age;\n    }\npublic:\n    string m_Name;\n    int m_Age;\n};\n\nvoid printPersonArray(MyArray&lt;Person&gt;&amp; personArr)\n{\n    for (int i = 0; i &lt; personArr.getSize(); i++) {\n        cout &lt;&lt; \"\u59d3\u540d\uff1a\" &lt;&lt; personArr[i].m_Name &lt;&lt; \" \u5e74\u9f84\uff1a \" &lt;&lt; personArr[i].m_Age &lt;&lt; endl;\n    }\n\n}\n\nvoid test02()\n{\n    //\u521b\u5efa\u6570\u7ec4\n    MyArray&lt;Person&gt; pArray(10);\n    Person p1(\"\u5b59\u609f\u7a7a\", 30);\n    Person p2(\"\u97e9\u4fe1\", 20);\n    Person p3(\"\u59b2\u5df1\", 18);\n    Person p4(\"\u738b\u662d\u541b\", 15);\n    Person p5(\"\u8d75\u4e91\", 24);\n\n    //\u63d2\u5165\u6570\u636e\n    pArray.Push_back(p1);\n    pArray.Push_back(p2);\n    pArray.Push_back(p3);\n    pArray.Push_back(p4);\n    pArray.Push_back(p5);\n\n    printPersonArray(pArray);\n\n    cout &lt;&lt; \"pArray\u7684\u5927\u5c0f\uff1a\" &lt;&lt; pArray.getSize() &lt;&lt; endl;\n    cout &lt;&lt; \"pArray\u7684\u5bb9\u91cf\uff1a\" &lt;&lt; pArray.getCapacity() &lt;&lt; endl;\n\n}\n\nint main() {\n\n    //test01();\n\n    test02();\n\n    system(\"pause\");\n\n    return 0;\n}\n``` **\u603b\u7ed3\uff1a** - \u80fd\u591f\u5229\u7528\u6240\u5b66\u77e5\u8bc6\u70b9\u5b9e\u73b0\u901a\u7528\u7684\u6570\u7ec4\u3002\n\n---\n\n\n\n## 2 STL\u521d\u8bc6\n\n### 2.1 STL\u7684\u8bde\u751f\n\n* \u957f\u4e45\u4ee5\u6765\uff0c\u8f6f\u4ef6\u754c\u4e00\u76f4\u5e0c\u671b\u5efa\u7acb\u4e00\u79cd\u53ef\u91cd\u590d\u5229\u7528\u7684\u4e1c\u897f\n* C++\u7684 **\u9762\u5411\u5bf9\u8c61** \u548c **\u6cdb\u578b\u7f16\u7a0b** \u601d\u60f3\uff0c\u76ee\u7684\u5c31\u662f **\u590d\u7528\u6027\u7684\u63d0\u5347** - \u9762\u5411\u5bf9\u8c61 - \u5c01\u88c5\uff1a\u628a\u4e00\u4e9b\u5c5e\u6027\u6216\u884c\u4e3a\u6bd4\u8f83\u76f8\u4f3c\u7684\u4e8b\u7269\u62bd\u8c61\u51fa\u6765\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u5c01\u88c5\u6210\u7c7b\u3002\n  - \u9762\u5411\u5bf9\u8c61 - \u7ee7\u627f\uff1a\u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u7684\u5c5e\u6027\u548c\u884c\u4e3a\u3002\n  - \u9762\u5411\u5bf9\u8c61 - \u591a\u6001\uff1a\u4e00\u4e2a\u51fd\u6570\u540d\u79f0\u6709\u591a\u4e2a\u63a5\u53e3\uff08\u6839\u636e\u4f20\u53c2\uff09\u3002\n  - \u6cdb\u578b\u7f16\u7a0b\uff1a\u4f7f\u7528\u6a21\u677f\uff0c\u53ef\u4ee5\u5bf9\u5e94\u591a\u79cd\u6570\u636e\u7c7b\u578b\u4f20\u53c2\u3002\n* \u5927\u591a\u60c5\u51b5\u4e0b\uff0c\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u90fd\u672a\u80fd\u6709\u4e00\u5957\u6807\u51c6,\u5bfc\u81f4\u88ab\u8feb\u4ece\u4e8b\u5927\u91cf\u91cd\u590d\u5de5\u4f5c\n* \u4e3a\u4e86\u5efa\u7acb\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u7684\u4e00\u5957\u6807\u51c6,\u8bde\u751f\u4e86 **STL** ### 2.2 STL\u57fa\u672c\u6982\u5ff5\n\n* STL(Standard Template Library, **\u6807\u51c6\u6a21\u677f\u5e93** )\n* STL \u4ece\u5e7f\u4e49\u4e0a\u5206\u4e3a: **\u5bb9\u5668(container)\uff1b \u7b97\u6cd5(algorithm)\uff1b \u8fed\u4ee3\u5668(iterator)** * **\u5bb9\u5668** \u548c **\u7b97\u6cd5** \u4e4b\u95f4\u901a\u8fc7 **\u8fed\u4ee3\u5668** \u8fdb\u884c\u65e0\u7f1d\u8fde\u63a5\u3002\n* STL \u51e0\u4e4e\u6240\u6709\u7684\u4ee3\u7801\u90fd\u91c7\u7528\u4e86\u6a21\u677f\u7c7b\u6216\u8005\u6a21\u677f\u51fd\u6570\n\n### 2.3 STL\u516d\u5927\u7ec4\u4ef6\n\nSTL\u5927\u4f53\u5206\u4e3a\u516d\u5927\u7ec4\u4ef6\uff0c\u5206\u522b\u662f: **\u5bb9\u5668\u3001\u7b97\u6cd5\u3001\u8fed\u4ee3\u5668\u3001\u4eff\u51fd\u6570\u3001\u9002\u914d\u5668\uff08\u914d\u63a5\u5668\uff09\u3001\u7a7a\u95f4\u914d\u7f6e\u5668** 1. \u5bb9\u5668\uff1a\u5404\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5982vector\u3001list\u3001deque\u3001set\u3001map\u7b49,\u7528\u6765\u5b58\u653e\u6570\u636e\u3002\n2. \u7b97\u6cd5\uff1a\u5404\u79cd\u5e38\u7528\u7684\u7b97\u6cd5\uff0c\u5982sort\u3001find\u3001copy\u3001for_each\u7b49\n3. \u8fed\u4ee3\u5668\uff1a\u626e\u6f14\u4e86\u5bb9\u5668\u4e0e\u7b97\u6cd5\u4e4b\u95f4\u7684\u80f6\u5408\u5242\u3002\n4. \u4eff\u51fd\u6570\uff1a\u884c\u4e3a\u7c7b\u4f3c\u51fd\u6570\uff0c\u53ef\u4f5c\u4e3a\u7b97\u6cd5\u7684\u67d0\u79cd\u7b56\u7565\u3002\n5. \u9002\u914d\u5668\uff1a\u4e00\u79cd\u7528\u6765\u4fee\u9970\u5bb9\u5668\u6216\u8005\u4eff\u51fd\u6570\u6216\u8fed\u4ee3\u5668\u63a5\u53e3\u7684\u4e1c\u897f\u3002\n6. \u7a7a\u95f4\u914d\u7f6e\u5668\uff1a\u8d1f\u8d23\u7a7a\u95f4\u7684\u914d\u7f6e\u4e0e\u7ba1\u7406\u3002\n\n### 2.4  STL\u4e2d\u5bb9\u5668\u3001\u7b97\u6cd5\u3001\u8fed\u4ee3\u5668 **\u5bb9\u5668\uff1a** \u7f6e\u7269\u4e4b\u6240\u4e5f\n\n- STL **\u5bb9\u5668** \u5c31\u662f\u5c06\u8fd0\u7528 **\u6700\u5e7f\u6cdb\u7684\u4e00\u4e9b\u6570\u636e\u7ed3\u6784** \u5b9e\u73b0\u51fa\u6765\n\n- \u5e38\u7528\u7684\u6570\u636e\u7ed3\u6784\uff1a\u6570\u7ec4, \u94fe\u8868,\u6811, \u6808, \u961f\u5217, \u96c6\u5408, \u6620\u5c04\u8868 \u7b49\n\n\u8fd9\u4e9b\u5bb9\u5668\u5206\u4e3a **\u5e8f\u5217\u5f0f\u5bb9\u5668** \u548c **\u5173\u8054\u5f0f\u5bb9\u5668** \u4e24\u79cd:\n\n- **\u5e8f\u5217\u5f0f\u5bb9\u5668** :\u5f3a\u8c03\u503c\u7684\u6392\u5e8f\uff0c\u5e8f\u5217\u5f0f\u5bb9\u5668\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u5747\u6709\u56fa\u5b9a\u7684\u4f4d\u7f6e\u3002\n- \u200b  **\u5173\u8054\u5f0f\u5bb9\u5668** :\u4e8c\u53c9\u6811\u7ed3\u6784\uff0c\u5404\u5143\u7d20\u4e4b\u95f4\u6ca1\u6709\u4e25\u683c\u7684\u7269\u7406\u4e0a\u7684\u987a\u5e8f\u5173\u7cfb **\u7b97\u6cd5\uff1a** \u95ee\u9898\u4e4b\u89e3\u6cd5\u4e5f\n\n- \u6709\u9650\u7684\u6b65\u9aa4\uff0c\u89e3\u51b3\u903b\u8f91\u6216\u6570\u5b66\u4e0a\u7684\u95ee\u9898\uff0c\u8fd9\u4e00\u95e8\u5b66\u79d1\u6211\u4eec\u53eb\u505a\u7b97\u6cd5(Algorithms)\n\n\u7b97\u6cd5\u5206\u4e3a: **\u8d28\u53d8\u7b97\u6cd5** \u548c **\u975e\u8d28\u53d8\u7b97\u6cd5** \u3002\n\n- \u8d28\u53d8\u7b97\u6cd5\uff1a\u662f\u6307\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\u4f1a\u66f4\u6539\u533a\u95f4\u5185\u7684\u5143\u7d20\u7684\u5185\u5bb9\u3002\u4f8b\u5982\u62f7\u8d1d\uff0c\u66ff\u6362\uff0c\u5220\u9664\u7b49\u7b49\n\n- \u975e\u8d28\u53d8\u7b97\u6cd5\uff1a\u662f\u6307\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u66f4\u6539\u533a\u95f4\u5185\u7684\u5143\u7d20\u5185\u5bb9\uff0c\u4f8b\u5982\u67e5\u627e\u3001\u8ba1\u6570\u3001\u904d\u5386\u3001\u5bfb\u627e\u6781\u503c\u7b49\u7b49 **\u8fed\u4ee3\u5668\uff1a** \u5bb9\u5668\u548c\u7b97\u6cd5\u4e4b\u95f4\u7c98\u5408\u5242\n\n- \u63d0\u4f9b\u4e00\u79cd\u65b9\u6cd5\uff0c\u4f7f\u4e4b\u80fd\u591f\u4f9d\u5e8f\u5bfb\u8bbf\u67d0\u4e2a\u5bb9\u5668\u6240\u542b\u7684\u5404\u4e2a\u5143\u7d20\uff0c\u800c\u53c8\u65e0\u9700\u66b4\u9732\u8be5\u5bb9\u5668\u7684\u5185\u90e8\u8868\u793a\u65b9\u5f0f\u3002\n\n- \u6bcf\u4e2a\u5bb9\u5668\u90fd\u6709\u81ea\u5df1\u4e13\u5c5e\u7684\u8fed\u4ee3\u5668\n\n- \u8fed\u4ee3\u5668\u4f7f\u7528\u975e\u5e38\u7c7b\u4f3c\u4e8e\u6307\u9488\uff0c\u521d\u5b66\u9636\u6bb5\u6211\u4eec\u53ef\u4ee5\u5148\u7406\u89e3\u8fed\u4ee3\u5668\u4e3a\u6307\u9488\n\n\u8fed\u4ee3\u5668\u79cd\u7c7b\uff1a\n\n| \u79cd\u7c7b           | \u529f\u80fd                                                     | \u652f\u6301\u8fd0\u7b97                                |\n| -------------- | -------------------------------------------------------- | --------------------------------------- |\n| \u8f93\u5165\u8fed\u4ee3\u5668     | \u5bf9\u6570\u636e\u7684\u53ea\u8bfb\u8bbf\u95ee                                         | \u53ea\u8bfb\uff0c\u652f\u6301++\u3001==\u3001\uff01=                   |\n| \u8f93\u51fa\u8fed\u4ee3\u5668     | \u5bf9\u6570\u636e\u7684\u53ea\u5199\u8bbf\u95ee                                         | \u53ea\u5199\uff0c\u652f\u6301++                            |\n| \u524d\u5411\u8fed\u4ee3\u5668     | \u8bfb\u5199\u64cd\u4f5c\uff0c\u5e76\u80fd\u5411\u524d\u63a8\u8fdb\u8fed\u4ee3\u5668                             | \u8bfb\u5199\uff0c\u652f\u6301++\u3001==\u3001\uff01=                   |\n| \u53cc\u5411\u8fed\u4ee3\u5668     | \u8bfb\u5199\u64cd\u4f5c\uff0c\u5e76\u80fd\u5411\u524d\u548c\u5411\u540e\u64cd\u4f5c                             | \u8bfb\u5199\uff0c\u652f\u6301++\u3001--\uff0c                      |\n| \u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668 | \u8bfb\u5199\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4ee5\u8df3\u8dc3\u7684\u65b9\u5f0f\u8bbf\u95ee\u4efb\u610f\u6570\u636e\uff0c\u529f\u80fd\u6700\u5f3a\u7684\u8fed\u4ee3\u5668 | \u8bfb\u5199\uff0c\u652f\u6301++\u3001--\u3001[n]\u3001-n\u3001&lt;\u3001&lt;=\u3001&gt;\u3001&gt;= |\n\n\u5e38\u7528\u7684\u5bb9\u5668\u4e2d\u8fed\u4ee3\u5668\u79cd\u7c7b\u4e3a\u53cc\u5411\u8fed\u4ee3\u5668\uff0c\u548c\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\u3002\n\n### 2.5 \u5bb9\u5668\u7b97\u6cd5\u8fed\u4ee3\u5668\u521d\u8bc6\n\n\u4e86\u89e3STL\u4e2d\u5bb9\u5668\u3001\u7b97\u6cd5\u3001\u8fed\u4ee3\u5668\u6982\u5ff5\u4e4b\u540e\uff0c\u6211\u4eec\u5229\u7528\u4ee3\u7801\u611f\u53d7STL\u7684\u9b45\u529b\u3002\n\nSTL\u4e2d\u6700\u5e38\u7528\u7684\u5bb9\u5668\u4e3aVector\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u6570\u7ec4\uff0c\u4e0b\u9762\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u5411\u8fd9\u4e2a\u5bb9\u5668\u4e2d\u63d2\u5165\u6570\u636e\u3001\u5e76\u904d\u5386\u8fd9\u4e2a\u5bb9\u5668\u3002\n\n#### 2.5.1 vector\u5b58\u653e\u5185\u7f6e\u6570\u636e\u7c7b\u578b\n\n\n\n\u5bb9\u5668\uff1a     `vector`\n\n\u7b97\u6cd5\uff1a     `for_each`\n\n\u8fed\u4ee3\u5668\uff1a `vector&lt;int&gt;::iterator`\n\n **\u793a\u4f8b\uff1a** ```C++\n#include &lt;vector&gt;\n#include &lt;algorithm&gt;\n\nvoid MyPrint(int val)\n{\n    cout &lt;&lt; val &lt;&lt; endl;\n}\n\nvoid test01() {\n\n    //\u521b\u5efavector\u5bb9\u5668\u5bf9\u8c61\uff0c\u5e76\u4e14\u901a\u8fc7\u6a21\u677f\u53c2\u6570\u6307\u5b9a\u5bb9\u5668\u4e2d\u5b58\u653e\u7684\u6570\u636e\u7684\u7c7b\u578b\n    vector&lt;int&gt; v;\n    //\u5411\u5bb9\u5668\u4e2d\u653e\u6570\u636e\n    v.push_back(10);\n    v.push_back(20);\n    v.push_back(30);\n    v.push_back(40);\n\n    //\u6bcf\u4e00\u4e2a\u5bb9\u5668\u90fd\u6709\u81ea\u5df1\u7684\u8fed\u4ee3\u5668\uff0c\u8fed\u4ee3\u5668\u662f\u7528\u6765\u904d\u5386\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\n    //v.begin()\u8fd4\u56de\u8fed\u4ee3\u5668\uff0c\u8fd9\u4e2a\u8fed\u4ee3\u5668\u6307\u5411\u5bb9\u5668\u4e2d\u7b2c\u4e00\u4e2a\u6570\u636e\n    //v.end()\u8fd4\u56de\u8fed\u4ee3\u5668\uff0c\u8fd9\u4e2a\u8fed\u4ee3\u5668\u6307\u5411\u5bb9\u5668\u5143\u7d20\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\n    //vector&lt;int&gt;::iterator \u62ff\u5230vector&lt;int&gt;\u8fd9\u79cd\u5bb9\u5668\u7684\u8fed\u4ee3\u5668\u7c7b\u578b\n\n    vector&lt;int&gt;::iterator pBegin = v.begin();\n    vector&lt;int&gt;::iterator pEnd = v.end();\n\n    //\u7b2c\u4e00\u79cd\u904d\u5386\u65b9\u5f0f\uff1a\n    while (pBegin != pEnd) {\n        cout &lt;&lt; *pBegin &lt;&lt; endl;\n        pBegin++;\n    }\n\n\n    //\u7b2c\u4e8c\u79cd\u904d\u5386\u65b9\u5f0f\uff1a\n    for (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; endl;\n    }\n    cout &lt;&lt; endl;\n\n    //\u7b2c\u4e09\u79cd\u904d\u5386\u65b9\u5f0f\uff1a\n    //\u4f7f\u7528STL\u63d0\u4f9b\u6807\u51c6\u904d\u5386\u7b97\u6cd5  \u5934\u6587\u4ef6 algorithm\n    for_each(v.begin(), v.end(), MyPrint);\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#252-vector", "title": "2.5.2 Vector\u5b58\u653e\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b", "text": "<p>\u5b66\u4e60\u76ee\u6807\uff1avector\u4e2d\u5b58\u653e\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\uff0c\u5e76\u6253\u5370\u8f93\u51fa</p> <p>\u793a\u4f8b\uff1a ```c++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_5", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_6", "title": "include  <p>//\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b class Person { public:     Person(string name, int age) {         mName = name;         mAge = age;     } public:     string mName;     int mAge; }; //\u5b58\u653e\u5bf9\u8c61 void test01() {</p> <pre><code>vector&lt;Person&gt; v;\n\n//\u521b\u5efa\u6570\u636e\nPerson p1(\"aaa\", 10);\nPerson p2(\"bbb\", 20);\nPerson p3(\"ccc\", 30);\nPerson p4(\"ddd\", 40);\nPerson p5(\"eee\", 50);\n\nv.push_back(p1);\nv.push_back(p2);\nv.push_back(p3);\nv.push_back(p4);\nv.push_back(p5);\n\nfor (vector&lt;Person&gt;::iterator it = v.begin(); it != v.end(); it++) {\n    cout &lt;&lt; \"Name:\" &lt;&lt; (*it).mName &lt;&lt; \" Age:\" &lt;&lt; (*it).mAge &lt;&lt; endl;\n\n}\n</code></pre> <p>}</p> <p>//\u653e\u5bf9\u8c61\u6307\u9488 void test02() {</p> <pre><code>vector&lt;Person*&gt; v;\n\n//\u521b\u5efa\u6570\u636e\nPerson p1(\"aaa\", 10);\nPerson p2(\"bbb\", 20);\nPerson p3(\"ccc\", 30);\nPerson p4(\"ddd\", 40);\nPerson p5(\"eee\", 50);\n\nv.push_back(&amp;p1);\nv.push_back(&amp;p2);\nv.push_back(&amp;p3);\nv.push_back(&amp;p4);\nv.push_back(&amp;p5);\n\nfor (vector&lt;Person*&gt;::iterator it = v.begin(); it != v.end(); it++) {\n    Person * p = (*it);\n    cout &lt;&lt; \"Name:\" &lt;&lt; p-&gt;mName &lt;&lt; \" Age:\" &lt;&lt; (*it)-&gt;mAge &lt;&lt; endl;\n}\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\ntest02();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```   </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#253-vector", "title": "2.5.3 Vector\u5bb9\u5668\u5d4c\u5957\u5bb9\u5668", "text": "<p>\u5b66\u4e60\u76ee\u6807\uff1a\u5bb9\u5668\u4e2d\u5d4c\u5957\u5bb9\u5668\uff0c\u6211\u4eec\u5c06\u6240\u6709\u6570\u636e\u8fdb\u884c\u904d\u5386\u8f93\u51fa   \u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_7", "title": "include  <p>//\u5bb9\u5668\u5d4c\u5957\u5bb9\u5668 void test01() {      vector&lt; vector &gt;  v;      vector v1;     vector v2;     vector v3;     vector v4;      for (int i = 0; i &lt; 4; i++) {         v1.push_back(i + 1);         v2.push_back(i + 2);         v3.push_back(i + 3);         v4.push_back(i + 4);     }      //\u5c06\u5bb9\u5668\u5143\u7d20\u63d2\u5165\u5230vector v\u4e2d     v.push_back(v1);     v.push_back(v2);     v.push_back(v3);     v.push_back(v4);       for (vector&gt;::iterator it = v.begin(); it != v.end(); it++) {          for (vector::iterator vit = (*it).begin(); vit != (*it).end(); vit++) {             cout &lt;&lt; *vit &lt;&lt; \" \";         }         cout &lt;&lt; endl;     }  }  int main() {      test01();      system(\"pause\");      return 0; } ```", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#3-stl-", "title": "3 STL- \u5e38\u7528\u5bb9\u5668", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#31-string", "title": "3.1 string\u5bb9\u5668", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#311-string-stringcstring", "title": "3.1.1 string\u57fa\u672c\u6982\u5ff5 \u672c\u8d28\uff1a * string\u662fC++\u98ce\u683c\u7684\u5b57\u7b26\u4e32\uff0c\u800cstring\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u7c7b", "text": "<p>string\u548cchar * \u533a\u522b\uff1a</p> <ul> <li>char * \u662f\u4e00\u4e2a\u6307\u9488</li> <li>string\u662f\u4e00\u4e2a\u7c7b\uff0c\u7c7b\u5185\u90e8\u5c01\u88c5\u4e86char*\uff0c\u7ba1\u7406\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u662f\u4e00\u4e2achar*\u578b\u7684\u5bb9\u5668\u3002 \u7279\u70b9\uff1a string \u7c7b\u5185\u90e8\u5c01\u88c5\u4e86\u5f88\u591a\u6210\u5458\u65b9\u6cd5</li> </ul> <p>\u4f8b\u5982\uff1a\u67e5\u627efind\uff0c\u62f7\u8d1dcopy\uff0c\u5220\u9664delete \u66ff\u6362replace\uff0c\u63d2\u5165insert</p> <p>string\u7ba1\u7406char*\u6240\u5206\u914d\u7684\u5185\u5b58\uff0c\u4e0d\u7528\u62c5\u5fc3\u590d\u5236\u8d8a\u754c\u548c\u53d6\u503c\u8d8a\u754c\u7b49\uff0c\u7531\u7c7b\u5185\u90e8\u8fdb\u884c\u8d1f\u8d23</p>"}, {"location": "record/algo/code/cpp/02_advance/#312-string", "title": "3.1.2 string\u6784\u9020\u51fd\u6570", "text": "<p>\u6784\u9020\u51fd\u6570\u539f\u578b\uff1a</p> <ul> <li><code>string();</code>                       //\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u5b57\u7b26\u4e32 \u4f8b\u5982: string str;   <code>string(const char* s);</code>          //\u4f7f\u7528\u5b57\u7b26\u4e32s\u521d\u59cb\u5316</li> <li><code>string(const string&amp; str);</code>    //\u4f7f\u7528\u4e00\u4e2astring\u5bf9\u8c61\u521d\u59cb\u5316\u53e6\u4e00\u4e2astring\u5bf9\u8c61</li> <li><code>string(int n, char c);</code>           //\u4f7f\u7528n\u4e2a\u5b57\u7b26c\u521d\u59cb\u5316 </li> </ul> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_8", "title": "include  <p>//string\u6784\u9020 void test01() {     string s1; //\u521b\u5efa\u7a7a\u5b57\u7b26\u4e32\uff0c\u8c03\u7528\u65e0\u53c2\u6784\u9020\u51fd\u6570     cout &lt;&lt; \"str1 = \" &lt;&lt; s1 &lt;&lt; endl;</p> <pre><code>const char* str = \"hello world\";\nstring s2(str); //\u628ac_string\u8f6c\u6362\u6210\u4e86string\n\ncout &lt;&lt; \"str2 = \" &lt;&lt; s2 &lt;&lt; endl;\n\nstring s3(s2); //\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\ncout &lt;&lt; \"str3 = \" &lt;&lt; s3 &lt;&lt; endl;\n\nstring s4(10, 'a');\ncout &lt;&lt; \"str3 = \" &lt;&lt; s3 &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1astring\u7684\u591a\u79cd\u6784\u9020\u65b9\u5f0f\u6ca1\u6709\u53ef\u6bd4\u6027\uff0c\u7075\u6d3b\u4f7f\u7528\u5373\u53ef         </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#313-string", "title": "3.1.3 string\u8d4b\u503c\u64cd\u4f5c", "text": "<p>\u529f\u80fd\u63cf\u8ff0\uff1a  * \u7ed9string\u5b57\u7b26\u4e32\u8fdb\u884c\u8d4b\u503c    \u8d4b\u503c\u7684\u51fd\u6570\u539f\u578b\uff1a  * <code>string&amp; operator=(const char* s);</code>             //char*\u7c7b\u578b\u5b57\u7b26\u4e32 \u8d4b\u503c\u7ed9\u5f53\u524d\u7684\u5b57\u7b26\u4e32 * <code>string&amp; operator=(const string &amp;s);</code>         //\u628a\u5b57\u7b26\u4e32s\u8d4b\u7ed9\u5f53\u524d\u7684\u5b57\u7b26\u4e32 * <code>string&amp; operator=(char c);</code>                          //\u5b57\u7b26\u8d4b\u503c\u7ed9\u5f53\u524d\u7684\u5b57\u7b26\u4e32 * <code>string&amp; assign(const char *s);</code>                  //\u628a\u5b57\u7b26\u4e32s\u8d4b\u7ed9\u5f53\u524d\u7684\u5b57\u7b26\u4e32 * <code>string&amp; assign(const char *s, int n);</code>     //\u628a\u5b57\u7b26\u4e32s\u7684\u524dn\u4e2a\u5b57\u7b26\u8d4b\u7ed9\u5f53\u524d\u7684\u5b57\u7b26\u4e32 * <code>string&amp; assign(const string &amp;s);</code>              //\u628a\u5b57\u7b26\u4e32s\u8d4b\u7ed9\u5f53\u524d\u5b57\u7b26\u4e32 * <code>string&amp; assign(int n, char c);</code>                  //\u7528n\u4e2a\u5b57\u7b26c\u8d4b\u7ed9\u5f53\u524d\u5b57\u7b26\u4e32    \u793a\u4f8b\uff1a <code>C++ //\u8d4b\u503c void test01() {     string str1;     str1 = \"hello world\";     cout &lt;&lt; \"str1 = \" &lt;&lt; str1 &lt;&lt; endl;      string str2;     str2 = str1;     cout &lt;&lt; \"str2 = \" &lt;&lt; str2 &lt;&lt; endl;      string str3;     str3 = 'a';     cout &lt;&lt; \"str3 = \" &lt;&lt; str3 &lt;&lt; endl;      string str4;     str4.assign(\"hello c++\");     cout &lt;&lt; \"str4 = \" &lt;&lt; str4 &lt;&lt; endl;      string str5;     str5.assign(\"hello c++\",5);     cout &lt;&lt; \"str5 = \" &lt;&lt; str5 &lt;&lt; endl;       string str6;     str6.assign(str5);     cout &lt;&lt; \"str6 = \" &lt;&lt; str6 &lt;&lt; endl;      string str7;     str7.assign(5, 'x');     cout &lt;&lt; \"str7 = \" &lt;&lt; str7 &lt;&lt; endl; }  int main() {      test01();      system(\"pause\");      return 0; }</code></p> <p>\u603b\u7ed3\uff1a</p> <p>\u200b   string\u7684\u8d4b\u503c\u65b9\u5f0f\u5f88\u591a\uff0c<code>operator=</code>  \u8fd9\u79cd\u65b9\u5f0f\u662f\u6bd4\u8f83\u5b9e\u7528\u7684</p>"}, {"location": "record/algo/code/cpp/02_advance/#314-string-string-operatorconst-char-str", "title": "3.1.4 string\u5b57\u7b26\u4e32\u62fc\u63a5 \u529f\u80fd\u63cf\u8ff0\uff1a * \u5b9e\u73b0\u5728\u5b57\u7b26\u4e32\u672b\u5c3e\u62fc\u63a5\u5b57\u7b26\u4e32 \u51fd\u6570\u539f\u578b\uff1a * <code>string&amp; operator+=(const char* str);</code>                   //\u91cd\u8f7d+=\u64cd\u4f5c\u7b26", "text": "<ul> <li><code>string&amp; operator+=(const char c);</code>                         //\u91cd\u8f7d+=\u64cd\u4f5c\u7b26</li> <li><code>string&amp; operator+=(const string&amp; str);</code>                //\u91cd\u8f7d+=\u64cd\u4f5c\u7b26</li> <li><code>string&amp; append(const char *s);</code>                               //\u628a\u5b57\u7b26\u4e32s\u8fde\u63a5\u5230\u5f53\u524d\u5b57\u7b26\u4e32\u7ed3\u5c3e</li> <li><code>string&amp; append(const char *s, int n);</code>                 //\u628a\u5b57\u7b26\u4e32s\u7684\u524dn\u4e2a\u5b57\u7b26\u8fde\u63a5\u5230\u5f53\u524d\u5b57\u7b26\u4e32\u7ed3\u5c3e</li> <li><code>string&amp; append(const string &amp;s);</code>                           //\u540coperator+=(const string&amp; str)</li> <li><code>string&amp; append(const string &amp;s, int pos, int n);</code>//\u5b57\u7b26\u4e32s\u4e2d\u4ecepos\u5f00\u59cb\u7684n\u4e2a\u5b57\u7b26\u8fde\u63a5\u5230\u5b57\u7b26\u4e32\u7ed3\u5c3e</li> </ul> <p>\u793a\u4f8b\uff1a <pre><code>//\u5b57\u7b26\u4e32\u62fc\u63a5\nvoid test01()\n{\n    string str1 = \"\u6211\";\n\n    str1 += \"\u7231\u73a9\u6e38\u620f\";\n\n    cout &lt;&lt; \"str1 = \" &lt;&lt; str1 &lt;&lt; endl;\n\n    str1 += ':';\n\n    cout &lt;&lt; \"str1 = \" &lt;&lt; str1 &lt;&lt; endl;\n\n    string str2 = \"LOL DNF\";\n\n    str1 += str2;\n\n    cout &lt;&lt; \"str1 = \" &lt;&lt; str1 &lt;&lt; endl;\n\n    string str3 = \"I\";\n    str3.append(\" love \");\n    str3.append(\"game abcde\", 4);\n    //str3.append(str2);\n    str3.append(str2, 4, 3); // \u4ece\u4e0b\u68074\u4f4d\u7f6e\u5f00\u59cb \uff0c\u622a\u53d63\u4e2a\u5b57\u7b26\uff0c\u62fc\u63a5\u5230\u5b57\u7b26\u4e32\u672b\u5c3e\n    cout &lt;&lt; \"str3 = \" &lt;&lt; str3 &lt;&lt; endl;\n}\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre></p> <p>\u603b\u7ed3\uff1a\u5b57\u7b26\u4e32\u62fc\u63a5\u7684\u91cd\u8f7d\u7248\u672c\u5f88\u591a\uff0c\u521d\u5b66\u9636\u6bb5\u8bb0\u4f4f\u51e0\u79cd\u5373\u53ef</p>"}, {"location": "record/algo/code/cpp/02_advance/#315-string", "title": "3.1.5 string\u67e5\u627e\u548c\u66ff\u6362 \u529f\u80fd\u63cf\u8ff0\uff1a * \u67e5\u627e\uff1a\u67e5\u627e\u6307\u5b9a\u5b57\u7b26\u4e32\u662f\u5426\u5b58\u5728", "text": "<ul> <li>\u66ff\u6362\uff1a\u5728\u6307\u5b9a\u7684\u4f4d\u7f6e\u66ff\u6362\u5b57\u7b26\u4e32 \u51fd\u6570\u539f\u578b\uff1a * <code>int find(const string&amp; str, int pos = 0) const;</code>              //\u67e5\u627estr\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e,\u4ecepos\u5f00\u59cb\u67e5\u627e</li> <li><code>int find(const char* s, int pos = 0) const;</code>                     //\u67e5\u627es\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e,\u4ecepos\u5f00\u59cb\u67e5\u627e</li> <li><code>int find(const char* s, int pos, int n) const;</code>               //\u4ecepos\u4f4d\u7f6e\u67e5\u627es\u7684\u524dn\u4e2a\u5b57\u7b26\u7b2c\u4e00\u6b21\u4f4d\u7f6e</li> <li><code>int find(const char c, int pos = 0) const;</code>                       //\u67e5\u627e\u5b57\u7b26c\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e</li> <li><code>int rfind(const string&amp; str, int pos = npos) const;</code>      //\u67e5\u627estr\u6700\u540e\u4e00\u6b21\u4f4d\u7f6e,\u4ecepos\u5f00\u59cb\u67e5\u627e</li> <li><code>int rfind(const char* s, int pos = npos) const;</code>              //\u67e5\u627es\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e,\u4ecepos\u5f00\u59cb\u67e5\u627e</li> <li><code>int rfind(const char* s, int pos, int n) const;</code>              //\u4ecepos\u67e5\u627es\u7684\u524dn\u4e2a\u5b57\u7b26\u6700\u540e\u4e00\u6b21\u4f4d\u7f6e</li> <li><code>int rfind(const char c, int pos = 0) const;</code>                      //\u67e5\u627e\u5b57\u7b26c\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e</li> <li><code>string&amp; replace(int pos, int n, const string&amp; str);</code>       //\u66ff\u6362\u4ecepos\u5f00\u59cbn\u4e2a\u5b57\u7b26\u4e3a\u5b57\u7b26\u4e32str</li> <li><code>string&amp; replace(int pos, int n,const char* s);</code>                 //\u66ff\u6362\u4ecepos\u5f00\u59cb\u7684n\u4e2a\u5b57\u7b26\u4e3a\u5b57\u7b26\u4e32s</li> </ul> <p>\u793a\u4f8b\uff1a ```C++ //\u67e5\u627e\u548c\u66ff\u6362 void test01() {     //\u67e5\u627e     string str1 = \"abcdefgde\";</p> <pre><code>int pos = str1.find(\"de\");\n\nif (pos == -1)\n{\n    cout &lt;&lt; \"\u672a\u627e\u5230\" &lt;&lt; endl;\n}\nelse\n{\n    cout &lt;&lt; \"pos = \" &lt;&lt; pos &lt;&lt; endl;\n}\n\n\npos = str1.rfind(\"de\");\n\ncout &lt;&lt; \"pos = \" &lt;&lt; pos &lt;&lt; endl;\n</code></pre> <p>}</p> <p>void test02() {     //\u66ff\u6362     string str1 = \"abcdefgde\";     str1.replace(1, 3, \"1111\");</p> <pre><code>cout &lt;&lt; \"str1 = \" &lt;&lt; str1 &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>//test01();\n//test02();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1a  * find\u67e5\u627e\u662f\u4ece\u5de6\u5f80\u540e\uff0crfind\u4ece\u53f3\u5f80\u5de6 * find\u627e\u5230\u5b57\u7b26\u4e32\u540e\u8fd4\u56de\u67e5\u627e\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4f4d\u7f6e\uff0c\u627e\u4e0d\u5230\u8fd4\u56de-1 * replace\u5728\u66ff\u6362\u65f6\uff0c\u8981\u6307\u5b9a\u4ece\u54ea\u4e2a\u4f4d\u7f6e\u8d77\uff0c\u591a\u5c11\u4e2a\u5b57\u7b26\uff0c\u66ff\u6362\u6210\u4ec0\u4e48\u6837\u7684\u5b57\u7b26\u4e32                </p>"}, {"location": "record/algo/code/cpp/02_advance/#316-string-ascii", "title": "3.1.6 string\u5b57\u7b26\u4e32\u6bd4\u8f83 \u529f\u80fd\u63cf\u8ff0\uff1a * \u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u6bd4\u8f83 \u6bd4\u8f83\u65b9\u5f0f\uff1a * \u5b57\u7b26\u4e32\u6bd4\u8f83\u662f\u6309\u5b57\u7b26\u7684ASCII\u7801\u8fdb\u884c\u5bf9\u6bd4", "text": "<p>= \u8fd4\u56de   0  &gt; \u8fd4\u56de   1   &lt; \u8fd4\u56de  -1 \u51fd\u6570\u539f\u578b\uff1a * <code>int compare(const string &amp;s) const;</code>  //\u4e0e\u5b57\u7b26\u4e32s\u6bd4\u8f83 * <code>int compare(const char *s) const;</code>      //\u4e0e\u5b57\u7b26\u4e32s\u6bd4\u8f83     \u793a\u4f8b\uff1a <code>C++ //\u5b57\u7b26\u4e32\u6bd4\u8f83 void test01() {      string s1 = \"hello\";     string s2 = \"aello\";      int ret = s1.compare(s2);      if (ret == 0) {         cout &lt;&lt; \"s1 \u7b49\u4e8e s2\" &lt;&lt; endl;     }     else if (ret &gt; 0)     {         cout &lt;&lt; \"s1 \u5927\u4e8e s2\" &lt;&lt; endl;     }     else     {         cout &lt;&lt; \"s1 \u5c0f\u4e8e s2\" &lt;&lt; endl;     }  }  int main() {      test01();      system(\"pause\");      return 0; }</code></p> <p>\u603b\u7ed3\uff1a\u5b57\u7b26\u4e32\u5bf9\u6bd4\u4e3b\u8981\u662f\u7528\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u7b49\uff0c\u5224\u65ad\u8c01\u5927\u8c01\u5c0f\u7684\u610f\u4e49\u5e76\u4e0d\u662f\u5f88\u5927</p>"}, {"location": "record/algo/code/cpp/02_advance/#317-string", "title": "3.1.7 string\u5b57\u7b26\u5b58\u53d6", "text": "<p>string\u4e2d\u5355\u4e2a\u5b57\u7b26\u5b58\u53d6\u65b9\u5f0f\u6709\u4e24\u79cd</p> <ul> <li><code>char&amp; operator[](int n);</code>     //\u901a\u8fc7[]\u65b9\u5f0f\u53d6\u5b57\u7b26</li> <li><code>char&amp; at(int n);</code>                    //\u901a\u8fc7at\u65b9\u6cd5\u83b7\u53d6\u5b57\u7b26</li> </ul> <p>\u793a\u4f8b\uff1a ```C++ void test01() {     string str = \"hello world\";</p> <pre><code>for (int i = 0; i &lt; str.size(); i++)\n{\n    cout &lt;&lt; str[i] &lt;&lt; \" \";\n}\ncout &lt;&lt; endl;\n\nfor (int i = 0; i &lt; str.size(); i++)\n{\n    cout &lt;&lt; str.at(i) &lt;&lt; \" \";\n}\ncout &lt;&lt; endl;\n\n\n//\u5b57\u7b26\u4fee\u6539\nstr[0] = 'x';\nstr.at(1) = 'x';\ncout &lt;&lt; str &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1astring\u5b57\u7b26\u4e32\u4e2d\u5355\u4e2a\u5b57\u7b26\u5b58\u53d6\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u5229\u7528 [ ] \u6216 at         </p>"}, {"location": "record/algo/code/cpp/02_advance/#318-string-string-string-insertint-pos-const-char-s", "title": "3.1.8 string\u63d2\u5165\u548c\u5220\u9664 \u529f\u80fd\u63cf\u8ff0\uff1a * \u5bf9string\u5b57\u7b26\u4e32\u8fdb\u884c\u63d2\u5165\u548c\u5220\u9664\u5b57\u7b26\u64cd\u4f5c \u51fd\u6570\u539f\u578b\uff1a * <code>string&amp; insert(int pos, const char* s);</code>                //\u63d2\u5165\u5b57\u7b26\u4e32", "text": "<ul> <li><code>string&amp; insert(int pos, const string&amp; str);</code>        //\u63d2\u5165\u5b57\u7b26\u4e32</li> <li><code>string&amp; insert(int pos, int n, char c);</code>                //\u5728\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165n\u4e2a\u5b57\u7b26c</li> <li><code>string&amp; erase(int pos, int n = npos);</code>                    //\u5220\u9664\u4ecePos\u5f00\u59cb\u7684n\u4e2a\u5b57\u7b26      \u793a\u4f8b\uff1a <code>C++ //\u5b57\u7b26\u4e32\u63d2\u5165\u548c\u5220\u9664 void test01() {     string str = \"hello\";     str.insert(1, \"111\");     cout &lt;&lt; str &lt;&lt; endl;      str.erase(1, 3);  //\u4ece1\u53f7\u4f4d\u7f6e\u5f00\u59cb3\u4e2a\u5b57\u7b26     cout &lt;&lt; str &lt;&lt; endl; }  int main() {      test01();      system(\"pause\");      return 0; }</code> \u603b\u7ed3\uff1a \u63d2\u5165\u548c\u5220\u9664\u7684\u8d77\u59cb\u4e0b\u6807\u90fd\u662f\u4ece0\u5f00\u59cb           </li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#319-string-string-substrint-pos-0-int-n-npos-const-posn", "title": "3.1.9 string\u5b50\u4e32 \u529f\u80fd\u63cf\u8ff0\uff1a * \u4ece\u5b57\u7b26\u4e32\u4e2d\u83b7\u53d6\u60f3\u8981\u7684\u5b50\u4e32 \u51fd\u6570\u539f\u578b\uff1a * <code>string substr(int pos = 0, int n = npos) const;</code>   //\u8fd4\u56de\u7531pos\u5f00\u59cb\u7684n\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u4e32", "text": "<p>\u793a\u4f8b\uff1a <code>C++ //\u5b50\u4e32 void test01() {      string str = \"abcdefg\";     string subStr = str.substr(1, 3);     cout &lt;&lt; \"subStr = \" &lt;&lt; subStr &lt;&lt; endl;      string email = \"hello@sina.com\";     int pos = email.find(\"@\");     string username = email.substr(0, pos);     cout &lt;&lt; \"username: \" &lt;&lt; username &lt;&lt; endl;  }  int main() {      test01();      system(\"pause\");      return 0; }</code> \u603b\u7ed3\uff1a \u7075\u6d3b\u7684\u8fd0\u7528\u6c42\u5b50\u4e32\u529f\u80fd\uff0c\u53ef\u4ee5\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u83b7\u53d6\u6709\u6548\u7684\u4fe1\u606f       </p>"}, {"location": "record/algo/code/cpp/02_advance/#32-vector", "title": "3.2 vector\u5bb9\u5668", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#321-vector-vector-vector-vector", "title": "3.2.1 vector\u57fa\u672c\u6982\u5ff5 \u529f\u80fd\uff1a * vector\u6570\u636e\u7ed3\u6784\u548c \u6570\u7ec4\u975e\u5e38\u76f8\u4f3c \uff0c\u4e5f\u79f0\u4e3a \u5355\u7aef\u6570\u7ec4 vector\u4e0e\u666e\u901a\u6570\u7ec4\u533a\u522b\uff1a * \u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u6570\u7ec4\u662f\u9759\u6001\u7a7a\u95f4\uff0c\u800cvector\u53ef\u4ee5 \u52a8\u6001\u6269\u5c55 \u52a8\u6001\u6269\u5c55\uff1a * \u5e76\u4e0d\u662f\u5728\u539f\u7a7a\u95f4\u4e4b\u540e\u7eed\u63a5\u65b0\u7a7a\u95f4\uff0c\u800c\u662f\u627e\u66f4\u5927\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u7136\u540e\u5c06\u539f\u6570\u636e\u62f7\u8d1d\u65b0\u7a7a\u95f4\uff0c\u91ca\u653e\u539f\u7a7a\u95f4", "text": "<p>    * vector\u5bb9\u5668\u7684\u8fed\u4ee3\u5668\u662f\u652f\u6301\u968f\u673a\u8bbf\u95ee\u7684\u8fed\u4ee3\u5668     </p>"}, {"location": "record/algo/code/cpp/02_advance/#322-vector", "title": "3.2.2 vector\u6784\u9020\u51fd\u6570", "text": "<p>\u529f\u80fd\u63cf\u8ff0\uff1a * \u521b\u5efavector\u5bb9\u5668 \u51fd\u6570\u539f\u578b\uff1a * <code>vector&lt;T&gt; v;</code>                          //\u91c7\u7528\u6a21\u677f\u5b9e\u73b0\u7c7b\u5b9e\u73b0\uff0c\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 * <code>vector(v.begin(), v.end());</code>       //\u5c06v[begin(), end())\u533a\u95f4\u4e2d\u7684\u5143\u7d20\u62f7\u8d1d\u7ed9\u672c\u8eab\u3002 * <code>vector(n, elem);</code>                            //\u6784\u9020\u51fd\u6570\u5c06n\u4e2aelem\u62f7\u8d1d\u7ed9\u672c\u8eab\u3002 * <code>vector(const vector &amp;vec);</code>         //\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002    \u793a\u4f8b\uff1a  ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_9", "title": "include  <p>void printVector(vector&amp; v) {      for (vector::iterator it = v.begin(); it != v.end(); it++) {         cout &lt;&lt; it &lt;&lt; \" \";     }     cout &lt;&lt; endl; }  void test01() {     vector v1; //\u65e0\u53c2\u6784\u9020     for (int i = 0; i &lt; 10; i++)     {         v1.push_back(i);     }     printVector(v1);      vector v2(v1.begin(), v1.end());     printVector(v2);      vector v3(10, 100);     printVector(v3);      vector v4(v3);     printVector(v4); }  int main() {      test01();      system(\"pause\");      return 0; } ``` **\u603b\u7ed3\uff1a* vector\u7684\u591a\u79cd\u6784\u9020\u65b9\u5f0f\u6ca1\u6709\u53ef\u6bd4\u6027\uff0c\u7075\u6d3b\u4f7f\u7528\u5373\u53ef", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#323-vector", "title": "3.2.3 vector\u8d4b\u503c\u64cd\u4f5c", "text": "<p>\u529f\u80fd\u63cf\u8ff0\uff1a * \u7ed9vector\u5bb9\u5668\u8fdb\u884c\u8d4b\u503c \u51fd\u6570\u539f\u578b\uff1a * <code>vector&amp; operator=(const vector &amp;vec);</code>//\u91cd\u8f7d\u7b49\u53f7\u64cd\u4f5c\u7b26   * <code>assign(beg, end);</code>       //\u5c06[beg, end)\u533a\u95f4\u4e2d\u7684\u6570\u636e\u62f7\u8d1d\u8d4b\u503c\u7ed9\u672c\u8eab\u3002 * <code>assign(n, elem);</code>        //\u5c06n\u4e2aelem\u62f7\u8d1d\u8d4b\u503c\u7ed9\u672c\u8eab\u3002     \u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_10", "title": "include  <p>void printVector(vector&amp; v) {      for (vector::iterator it = v.begin(); it != v.end(); it++) {         cout &lt;&lt; *it &lt;&lt; \" \";     }     cout &lt;&lt; endl; }  //\u8d4b\u503c\u64cd\u4f5c void test01() {     vector v1; //\u65e0\u53c2\u6784\u9020     for (int i = 0; i &lt; 10; i++)     {         v1.push_back(i);     }     printVector(v1);      vectorv2;     v2 = v1;     printVector(v2);      vectorv3;     v3.assign(v1.begin(), v1.end());     printVector(v3);      vectorv4;     v4.assign(10, 100);     printVector(v4); }  int main() {      test01();      system(\"pause\");      return 0; }  ``` <p>\u603b\u7ed3\uff1a vector\u8d4b\u503c\u65b9\u5f0f\u6bd4\u8f83\u7b80\u5355\uff0c\u4f7f\u7528operator=\uff0c\u6216\u8005assign\u90fd\u53ef\u4ee5</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#324-vector-vector-empty", "title": "3.2.4  vector\u5bb9\u91cf\u548c\u5927\u5c0f \u529f\u80fd\u63cf\u8ff0\uff1a * \u5bf9vector\u5bb9\u5668\u7684\u5bb9\u91cf\u548c\u5927\u5c0f\u64cd\u4f5c \u51fd\u6570\u539f\u578b\uff1a * <code>empty();</code>                            //\u5224\u65ad\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a", "text": "<ul> <li> <p><code>capacity();</code>                      //\u5bb9\u5668\u7684\u5bb9\u91cf</p> </li> <li> <p><code>size();</code>                              //\u8fd4\u56de\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u4e2a\u6570</p> </li> <li> <p><code>resize(int num);</code>             //\u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum\uff0c\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5\u9ed8\u8ba4\u503c\u586b\u5145\u65b0\u4f4d\u7f6e\u3002</p> </li> </ul> <p>\u200b                       //\u5982\u679c\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664\u3002</p> <ul> <li><code>resize(int num, elem);</code>  //\u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum\uff0c\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5elem\u503c\u586b\u5145\u65b0\u4f4d\u7f6e\u3002</li> </ul> <p>\u200b                           //\u5982\u679c\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664</p> <p>\u793a\u4f8b\uff1a <pre><code>#include &lt;vector&gt;\n\nvoid printVector(vector&lt;int&gt;&amp; v) {\n\n    for (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\nvoid test01()\n{\n    vector&lt;int&gt; v1;\n    for (int i = 0; i &lt; 10; i++)\n    {\n        v1.push_back(i);\n    }\n    printVector(v1);\n    if (v1.empty())\n    {\n        cout &lt;&lt; \"v1\u4e3a\u7a7a\" &lt;&lt; endl;\n    }\n    else\n    {\n        cout &lt;&lt; \"v1\u4e0d\u4e3a\u7a7a\" &lt;&lt; endl;\n        cout &lt;&lt; \"v1\u7684\u5bb9\u91cf = \" &lt;&lt; v1.capacity() &lt;&lt; endl;\n        cout &lt;&lt; \"v1\u7684\u5927\u5c0f = \" &lt;&lt; v1.size() &lt;&lt; endl;\n    }\n\n    //resize \u91cd\u65b0\u6307\u5b9a\u5927\u5c0f \uff0c\u82e5\u6307\u5b9a\u7684\u66f4\u5927\uff0c\u9ed8\u8ba4\u75280\u586b\u5145\u65b0\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u5229\u7528\u91cd\u8f7d\u7248\u672c\u66ff\u6362\u9ed8\u8ba4\u586b\u5145\n    v1.resize(15,10);\n    printVector(v1);\n\n    //resize \u91cd\u65b0\u6307\u5b9a\u5927\u5c0f \uff0c\u82e5\u6307\u5b9a\u7684\u66f4\u5c0f\uff0c\u8d85\u51fa\u90e8\u5206\u5143\u7d20\u88ab\u5220\u9664\n    v1.resize(5);\n    printVector(v1);\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre></p> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u5224\u65ad\u662f\u5426\u4e3a\u7a7a  --- empty</li> <li>\u8fd4\u56de\u5143\u7d20\u4e2a\u6570  --- size</li> <li>\u8fd4\u56de\u5bb9\u5668\u5bb9\u91cf  --- capacity</li> <li>\u91cd\u65b0\u6307\u5b9a\u5927\u5c0f  ---  resize</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#325-vector-vector-push_backele-ele", "title": "3.2.5 vector\u63d2\u5165\u548c\u5220\u9664 \u529f\u80fd\u63cf\u8ff0\uff1a * \u5bf9vector\u5bb9\u5668\u8fdb\u884c\u63d2\u5165\u3001\u5220\u9664\u64cd\u4f5c \u51fd\u6570\u539f\u578b\uff1a * <code>push_back(ele);</code>                                         //\u5c3e\u90e8\u63d2\u5165\u5143\u7d20ele", "text": "<ul> <li><code>pop_back();</code>                                                //\u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20</li> <li><code>insert(const_iterator pos, ele);</code>        //\u8fed\u4ee3\u5668\u6307\u5411\u4f4d\u7f6epos\u63d2\u5165\u5143\u7d20ele</li> <li><code>insert(const_iterator pos, int count,ele);</code>//\u8fed\u4ee3\u5668\u6307\u5411\u4f4d\u7f6epos\u63d2\u5165count\u4e2a\u5143\u7d20ele</li> <li><code>erase(const_iterator pos);</code>                     //\u5220\u9664\u8fed\u4ee3\u5668\u6307\u5411\u7684\u5143\u7d20</li> <li><code>erase(const_iterator start, const_iterator end);</code>//\u5220\u9664\u8fed\u4ee3\u5668\u4ecestart\u5230end\u4e4b\u95f4\u7684\u5143\u7d20</li> <li><code>clear();</code>                                                        //\u5220\u9664\u5bb9\u5668\u4e2d\u6240\u6709\u5143\u7d20</li> </ul> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_11", "title": "include  <p>void printVector(vector&amp; v) { <pre><code>for (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) {\n    cout &lt;&lt; *it &lt;&lt; \" \";\n}\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>//\u63d2\u5165\u548c\u5220\u9664 void test01() {     vector v1;     //\u5c3e\u63d2     v1.push_back(10);     v1.push_back(20);     v1.push_back(30);     v1.push_back(40);     v1.push_back(50);     printVector(v1);     //\u5c3e\u5220     v1.pop_back();     printVector(v1);     //\u63d2\u5165     v1.insert(v1.begin(), 100);     printVector(v1); <pre><code>v1.insert(v1.begin(), 2, 1000);\nprintVector(v1);\n\n//\u5220\u9664\nv1.erase(v1.begin());\nprintVector(v1);\n\n//\u6e05\u7a7a\nv1.erase(v1.begin(), v1.end());\nv1.clear();\nprintVector(v1);\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1a  * \u5c3e\u63d2  --- push_back * \u5c3e\u5220  --- pop_back * \u63d2\u5165  --- insert    (\u4f4d\u7f6e\u8fed\u4ee3\u5668) * \u5220\u9664  --- erase  \uff08\u4f4d\u7f6e\u8fed\u4ee3\u5668\uff09 * \u6e05\u7a7a  ---  clear </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#326-vector", "title": "3.2.6 vector\u6570\u636e\u5b58\u53d6", "text": "<p>\u529f\u80fd\u63cf\u8ff0\uff1a * \u5bf9vector\u4e2d\u7684\u6570\u636e\u7684\u5b58\u53d6\u64cd\u4f5c \u51fd\u6570\u539f\u578b\uff1a * <code>at(int idx);</code>     //\u8fd4\u56de\u7d22\u5f15idx\u6240\u6307\u7684\u6570\u636e * <code>operator[];</code>       //\u8fd4\u56de\u7d22\u5f15idx\u6240\u6307\u7684\u6570\u636e * <code>front();</code>            //\u8fd4\u56de\u5bb9\u5668\u4e2d\u7b2c\u4e00\u4e2a\u6570\u636e\u5143\u7d20 * <code>back();</code>              //\u8fd4\u56de\u5bb9\u5668\u4e2d\u6700\u540e\u4e00\u4e2a\u6570\u636e\u5143\u7d20     \u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_12", "title": "include  <p>void test01() {     vectorv1;     for (int i = 0; i &lt; 10; i++)     {         v1.push_back(i);     }      for (int i = 0; i &lt; v1.size(); i++)     {         cout &lt;&lt; v1[i] &lt;&lt; \" \";     }     cout &lt;&lt; endl;      for (int i = 0; i &lt; v1.size(); i++)     {         cout &lt;&lt; v1.at(i) &lt;&lt; \" \";     }     cout &lt;&lt; endl;      cout &lt;&lt; \"v1\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a\uff1a \" &lt;&lt; v1.front() &lt;&lt; endl;     cout &lt;&lt; \"v1\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e3a\uff1a \" &lt;&lt; v1.back() &lt;&lt; endl; }  int main() {      test01();      system(\"pause\");      return 0; } ``` <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u9664\u4e86\u7528\u8fed\u4ee3\u5668\u83b7\u53d6vector\u5bb9\u5668\u4e2d\u5143\u7d20\uff0c[ ]\u548cat\u4e5f\u53ef\u4ee5</li> <li>front\u8fd4\u56de\u5bb9\u5668\u7b2c\u4e00\u4e2a\u5143\u7d20</li> <li>back\u8fd4\u56de\u5bb9\u5668\u6700\u540e\u4e00\u4e2a\u5143\u7d20</li> </ul>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#327-vector-swapvec-vec", "title": "3.2.7 vector\u4e92\u6362\u5bb9\u5668 \u529f\u80fd\u63cf\u8ff0\uff1a * \u5b9e\u73b0\u4e24\u4e2a\u5bb9\u5668\u5185\u5143\u7d20\u8fdb\u884c\u4e92\u6362 \u51fd\u6570\u539f\u578b\uff1a * <code>swap(vec);</code>  // \u5c06vec\u4e0e\u672c\u8eab\u7684\u5143\u7d20\u4e92\u6362", "text": "<p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_13", "title": "include  <p>void printVector(vector&amp; v) { <pre><code>for (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) {\n    cout &lt;&lt; *it &lt;&lt; \" \";\n}\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>void test01() {     vectorv1;     for (int i = 0; i &lt; 10; i++)     {         v1.push_back(i);     }     printVector(v1); <pre><code>vector&lt;int&gt;v2;\nfor (int i = 10; i &gt; 0; i--)\n{\n    v2.push_back(i);\n}\nprintVector(v2);\n\n//\u4e92\u6362\u5bb9\u5668\ncout &lt;&lt; \"\u4e92\u6362\u540e\" &lt;&lt; endl;\nv1.swap(v2);\nprintVector(v1);\nprintVector(v2);\n</code></pre> <p>}</p> <p>void test02() {     vector v;     for (int i = 0; i &lt; 100000; i++) {         v.push_back(i);     } <pre><code>cout &lt;&lt; \"v\u7684\u5bb9\u91cf\u4e3a\uff1a\" &lt;&lt; v.capacity() &lt;&lt; endl;\ncout &lt;&lt; \"v\u7684\u5927\u5c0f\u4e3a\uff1a\" &lt;&lt; v.size() &lt;&lt; endl;\n\nv.resize(3);\n\ncout &lt;&lt; \"v\u7684\u5bb9\u91cf\u4e3a\uff1a\" &lt;&lt; v.capacity() &lt;&lt; endl;\ncout &lt;&lt; \"v\u7684\u5927\u5c0f\u4e3a\uff1a\" &lt;&lt; v.size() &lt;&lt; endl;\n\n//\u6536\u7f29\u5185\u5b58\nvector&lt;int&gt;(v).swap(v); //\u533f\u540d\u5bf9\u8c61\n\ncout &lt;&lt; \"v\u7684\u5bb9\u91cf\u4e3a\uff1a\" &lt;&lt; v.capacity() &lt;&lt; endl;\ncout &lt;&lt; \"v\u7684\u5927\u5c0f\u4e3a\uff1a\" &lt;&lt; v.size() &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\ntest02();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>}</p> <pre><code>\u603b\u7ed3\uff1aswap\u53ef\u4ee5\u4f7f\u4e24\u4e2a\u5bb9\u5668\u4e92\u6362\uff0c\u53ef\u4ee5\u8fbe\u5230\u5b9e\u7528\u7684\u6536\u7f29\u5185\u5b58\u6548\u679c\n\n\n\n\n\n\n\n\n\n#### 3.2.8 vector\u9884\u7559\u7a7a\u95f4 **\u529f\u80fd\u63cf\u8ff0\uff1a** * \u51cf\u5c11vector\u5728\u52a8\u6001\u6269\u5c55\u5bb9\u91cf\u65f6\u7684\u6269\u5c55\u6b21\u6570 **\u51fd\u6570\u539f\u578b\uff1a** * `reserve(int len);`//\u5bb9\u5668\u9884\u7559len\u4e2a\u5143\u7d20\u957f\u5ea6\uff0c\u9884\u7559\u4f4d\u7f6e\u4e0d\u521d\u59cb\u5316\uff0c\u5143\u7d20\u4e0d\u53ef\u8bbf\u95ee\u3002\n\n **\u793a\u4f8b\uff1a** ```C++\n#include &lt;vector&gt;\n\nvoid test01()\n{\n    vector&lt;int&gt; v;\n\n    //\u9884\u7559\u7a7a\u95f4\n    v.reserve(100000);\n\n    int num = 0;\n    int* p = NULL;\n    for (int i = 0; i &lt; 100000; i++) {\n        v.push_back(i);\n        if (p != &amp;v[0]) {\n            p = &amp;v[0];\n            num++;\n        }\n    }\n\n    cout &lt;&lt; \"num:\" &lt;&lt; num &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a\u5982\u679c\u6570\u636e\u91cf\u8f83\u5927\uff0c\u53ef\u4ee5\u4e00\u5f00\u59cb\u5229\u7528reserve\u9884\u7559\u7a7a\u95f4</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#33-deque", "title": "3.3 deque\u5bb9\u5668", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#331-deque", "title": "3.3.1 deque\u5bb9\u5668\u57fa\u672c\u6982\u5ff5", "text": "<p>\u529f\u80fd\uff1a * \u53cc\u7aef\u6570\u7ec4\uff0c\u53ef\u4ee5\u5bf9\u5934\u7aef\u8fdb\u884c\u63d2\u5165\u5220\u9664\u64cd\u4f5c deque\u4e0evector\u533a\u522b\uff1a * vector\u5bf9\u4e8e\u5934\u90e8\u7684\u63d2\u5165\u5220\u9664\u6548\u7387\u4f4e\uff0c\u6570\u636e\u91cf\u8d8a\u5927\uff0c\u6548\u7387\u8d8a\u4f4e * deque\u76f8\u5bf9\u800c\u8a00\uff0c\u5bf9\u5934\u90e8\u7684\u63d2\u5165\u5220\u9664\u901f\u5ea6\u56de\u6bd4vector\u5feb * vector\u8bbf\u95ee\u5143\u7d20\u65f6\u7684\u901f\u5ea6\u4f1a\u6bd4deque\u5feb,\u8fd9\u548c\u4e24\u8005\u5185\u90e8\u5b9e\u73b0\u6709\u5173</p> <p></p> <p>deque\u5185\u90e8\u5de5\u4f5c\u539f\u7406:</p> <p>deque\u5185\u90e8\u6709\u4e2a \u4e2d\u63a7\u5668 \uff0c\u7ef4\u62a4\u6bcf\u6bb5\u7f13\u51b2\u533a\u4e2d\u7684\u5185\u5bb9\uff0c\u7f13\u51b2\u533a\u4e2d\u5b58\u653e\u771f\u5b9e\u6570\u636e</p> <p>\u4e2d\u63a7\u5668\u7ef4\u62a4\u7684\u662f\u6bcf\u4e2a\u7f13\u51b2\u533a\u7684\u5730\u5740\uff0c\u4f7f\u5f97\u4f7f\u7528deque\u65f6\u50cf\u4e00\u7247\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4</p> <p></p> <ul> <li>deque\u5bb9\u5668\u7684\u8fed\u4ee3\u5668\u4e5f\u662f\u652f\u6301\u968f\u673a\u8bbf\u95ee\u7684</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#332-deque-deque-dequet-deqt", "title": "3.3.2 deque\u6784\u9020\u51fd\u6570 \u529f\u80fd\u63cf\u8ff0\uff1a * deque\u5bb9\u5668\u6784\u9020 \u51fd\u6570\u539f\u578b\uff1a * <code>deque&lt;T&gt;</code> deqT;                      //\u9ed8\u8ba4\u6784\u9020\u5f62\u5f0f", "text": "<ul> <li><code>deque(beg, end);</code>                  //\u6784\u9020\u51fd\u6570\u5c06[beg, end)\u533a\u95f4\u4e2d\u7684\u5143\u7d20\u62f7\u8d1d\u7ed9\u672c\u8eab\u3002</li> <li><code>deque(n, elem);</code>                    //\u6784\u9020\u51fd\u6570\u5c06n\u4e2aelem\u62f7\u8d1d\u7ed9\u672c\u8eab\u3002</li> <li><code>deque(const deque &amp;deq);</code>   //\u62f7\u8d1d\u6784\u9020\u51fd\u6570</li> </ul> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_14", "title": "include  <p>void printDeque(const deque&amp; d)  {     for (deque::const_iterator it = d.begin(); it != d.end(); it++) {         cout &lt;&lt; *it &lt;&lt; \" \"; <pre><code>}\ncout &lt;&lt; endl;\n</code></pre> <p>} //deque\u6784\u9020 void test01() {</p> <pre><code>deque&lt;int&gt; d1; //\u65e0\u53c2\u6784\u9020\u51fd\u6570\nfor (int i = 0; i &lt; 10; i++)\n{\n    d1.push_back(i);\n}\nprintDeque(d1);\ndeque&lt;int&gt; d2(d1.begin(),d1.end());\nprintDeque(d2);\n\ndeque&lt;int&gt;d3(10,100);\nprintDeque(d3);\n\ndeque&lt;int&gt;d4 = d3;\nprintDeque(d4);\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a deque\u5bb9\u5668\u548cvector\u5bb9\u5668\u7684\u6784\u9020\u65b9\u5f0f\u51e0\u4e4e\u4e00\u81f4\uff0c\u7075\u6d3b\u4f7f\u7528\u5373\u53ef</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#333-deque", "title": "3.3.3 deque\u8d4b\u503c\u64cd\u4f5c", "text": "<p>\u529f\u80fd\u63cf\u8ff0\uff1a * \u7ed9deque\u5bb9\u5668\u8fdb\u884c\u8d4b\u503c \u51fd\u6570\u539f\u578b\uff1a * <code>deque&amp; operator=(const deque &amp;deq);</code>         //\u91cd\u8f7d\u7b49\u53f7\u64cd\u4f5c\u7b26</p> <ul> <li><code>assign(beg, end);</code>                                           //\u5c06[beg, end)\u533a\u95f4\u4e2d\u7684\u6570\u636e\u62f7\u8d1d\u8d4b\u503c\u7ed9\u672c\u8eab\u3002</li> <li><code>assign(n, elem);</code>                                             //\u5c06n\u4e2aelem\u62f7\u8d1d\u8d4b\u503c\u7ed9\u672c\u8eab\u3002</li> </ul> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_15", "title": "include  <p>void printDeque(const deque&amp; d)  {     for (deque::const_iterator it = d.begin(); it != d.end(); it++) {         cout &lt;&lt; *it &lt;&lt; \" \"; <pre><code>}\ncout &lt;&lt; endl;\n</code></pre> <p>} //\u8d4b\u503c\u64cd\u4f5c void test01() {     deque d1;     for (int i = 0; i &lt; 10; i++)     {         d1.push_back(i);     }     printDeque(d1); <pre><code>deque&lt;int&gt;d2;\nd2 = d1;\nprintDeque(d2);\n\ndeque&lt;int&gt;d3;\nd3.assign(d1.begin(), d1.end());\nprintDeque(d3);\n\ndeque&lt;int&gt;d4;\nd4.assign(10, 100);\nprintDeque(d4);\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1adeque\u8d4b\u503c\u64cd\u4f5c\u4e5f\u4e0evector\u76f8\u540c\uff0c\u9700\u719f\u7ec3\u638c\u63e1       </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#334-deque-deque-dequeempty", "title": "3.3.4 deque\u5927\u5c0f\u64cd\u4f5c \u529f\u80fd\u63cf\u8ff0\uff1a * \u5bf9deque\u5bb9\u5668\u7684\u5927\u5c0f\u8fdb\u884c\u64cd\u4f5c \u51fd\u6570\u539f\u578b\uff1a * <code>deque.empty();</code>                       //\u5224\u65ad\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a", "text": "<ul> <li><code>deque.size();</code>                         //\u8fd4\u56de\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u4e2a\u6570 </li> <li><code>deque.resize(num);</code>                //\u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum,\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5\u9ed8\u8ba4\u503c\u586b\u5145\u65b0\u4f4d\u7f6e\u3002    \u200b                                      //\u5982\u679c\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664\u3002 </li> <li><code>deque.resize(num, elem);</code>     //\u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum,\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5elem\u503c\u586b\u5145\u65b0\u4f4d\u7f6e\u3002    \u200b                                                     //\u5982\u679c\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664\u3002     \u793a\u4f8b\uff1a ```C++</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#include_16", "title": "include  <p>void printDeque(const deque&amp; d)  {     for (deque::const_iterator it = d.begin(); it != d.end(); it++) {         cout &lt;&lt; *it &lt;&lt; \" \";      }     cout &lt;&lt; endl; }  //\u5927\u5c0f\u64cd\u4f5c void test01() {     deque d1;     for (int i = 0; i &lt; 10; i++)     {         d1.push_back(i);     }     printDeque(d1);      //\u5224\u65ad\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a     if (d1.empty()) {         cout &lt;&lt; \"d1\u4e3a\u7a7a!\" &lt;&lt; endl;     }     else {         cout &lt;&lt; \"d1\u4e0d\u4e3a\u7a7a!\" &lt;&lt; endl;         //\u7edf\u8ba1\u5927\u5c0f         cout &lt;&lt; \"d1\u7684\u5927\u5c0f\u4e3a\uff1a\" &lt;&lt; d1.size() &lt;&lt; endl;     }      //\u91cd\u65b0\u6307\u5b9a\u5927\u5c0f     d1.resize(15, 1);     printDeque(d1);      d1.resize(5);     printDeque(d1); }  int main() {      test01();      system(\"pause\");      return 0; } ``` <p>\u603b\u7ed3\uff1a</p> <ul> <li>deque\u6ca1\u6709\u5bb9\u91cf\u7684\u6982\u5ff5</li> <li>\u5224\u65ad\u662f\u5426\u4e3a\u7a7a   --- empty</li> <li>\u8fd4\u56de\u5143\u7d20\u4e2a\u6570   --- size</li> <li>\u91cd\u65b0\u6307\u5b9a\u4e2a\u6570   --- resize</li> </ul>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#335-deque-deque", "title": "3.3.5 deque \u63d2\u5165\u548c\u5220\u9664 \u529f\u80fd\u63cf\u8ff0\uff1a * \u5411deque\u5bb9\u5668\u4e2d\u63d2\u5165\u548c\u5220\u9664\u6570\u636e \u51fd\u6570\u539f\u578b\uff1a \u4e24\u7aef\u63d2\u5165\u64cd\u4f5c\uff1a", "text": "<ul> <li><code>push_back(elem);</code>          //\u5728\u5bb9\u5668\u5c3e\u90e8\u6dfb\u52a0\u4e00\u4e2a\u6570\u636e</li> <li><code>push_front(elem);</code>        //\u5728\u5bb9\u5668\u5934\u90e8\u63d2\u5165\u4e00\u4e2a\u6570\u636e</li> <li><code>pop_back();</code>                   //\u5220\u9664\u5bb9\u5668\u6700\u540e\u4e00\u4e2a\u6570\u636e</li> <li><code>pop_front();</code>                 //\u5220\u9664\u5bb9\u5668\u7b2c\u4e00\u4e2a\u6570\u636e</li> </ul> <p>\u6307\u5b9a\u4f4d\u7f6e\u64cd\u4f5c\uff1a</p> <ul> <li> <p><code>insert(pos,elem);</code>         //\u5728pos\u4f4d\u7f6e\u63d2\u5165\u4e00\u4e2aelem\u5143\u7d20\u7684\u62f7\u8d1d\uff0c\u8fd4\u56de\u65b0\u6570\u636e\u7684\u4f4d\u7f6e\u3002</p> </li> <li> <p><code>insert(pos,n,elem);</code>     //\u5728pos\u4f4d\u7f6e\u63d2\u5165n\u4e2aelem\u6570\u636e\uff0c\u65e0\u8fd4\u56de\u503c\u3002</p> </li> <li> <p><code>insert(pos,beg,end);</code>    //\u5728pos\u4f4d\u7f6e\u63d2\u5165[beg,end)\u533a\u95f4\u7684\u6570\u636e\uff0c\u65e0\u8fd4\u56de\u503c\u3002</p> </li> <li> <p><code>clear();</code>                           //\u6e05\u7a7a\u5bb9\u5668\u7684\u6240\u6709\u6570\u636e</p> </li> <li> <p><code>erase(beg,end);</code>             //\u5220\u9664[beg,end)\u533a\u95f4\u7684\u6570\u636e\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u636e\u7684\u4f4d\u7f6e\u3002</p> </li> <li> <p><code>erase(pos);</code>                    //\u5220\u9664pos\u4f4d\u7f6e\u7684\u6570\u636e\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u636e\u7684\u4f4d\u7f6e\u3002</p> </li> </ul> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_17", "title": "include  <p>void printDeque(const deque&amp; d)  {     for (deque::const_iterator it = d.begin(); it != d.end(); it++) {         cout &lt;&lt; *it &lt;&lt; \" \"; <pre><code>}\ncout &lt;&lt; endl;\n</code></pre> <p>} //\u4e24\u7aef\u64cd\u4f5c void test01() {     deque d;     //\u5c3e\u63d2     d.push_back(10);     d.push_back(20);     //\u5934\u63d2     d.push_front(100);     d.push_front(200); <pre><code>printDeque(d);\n\n//\u5c3e\u5220\nd.pop_back();\n//\u5934\u5220\nd.pop_front();\nprintDeque(d);\n</code></pre> <p>}</p> <p>//\u63d2\u5165 void test02() {     deque d;     d.push_back(10);     d.push_back(20);     d.push_front(100);     d.push_front(200);     printDeque(d); <pre><code>d.insert(d.begin(), 1000);\nprintDeque(d);\n\nd.insert(d.begin(), 2,10000);\nprintDeque(d);\n\ndeque&lt;int&gt;d2;\nd2.push_back(1);\nd2.push_back(2);\nd2.push_back(3);\n\nd.insert(d.begin(), d2.begin(), d2.end());\nprintDeque(d);\n</code></pre> <p>}</p> <p>//\u5220\u9664 void test03() {     deque d;     d.push_back(10);     d.push_back(20);     d.push_front(100);     d.push_front(200);     printDeque(d); <pre><code>d.erase(d.begin());\nprintDeque(d);\n\nd.erase(d.begin(), d.end());\nd.clear();\nprintDeque(d);\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>//test01();\n\n//test02();\n\ntest03();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>}</p> <pre><code>\u603b\u7ed3\uff1a\n\n* \u63d2\u5165\u548c\u5220\u9664\u63d0\u4f9b\u7684\u4f4d\u7f6e\u662f\u8fed\u4ee3\u5668\uff01\n* \u5c3e\u63d2   ---  push_back\n* \u5c3e\u5220   ---  pop_back\n* \u5934\u63d2   ---  push_front\n* \u5934\u5220   ---  pop_front\n\n\n\n\n\n\n\n\n\n\n\n#### 3.3.6 deque \u6570\u636e\u5b58\u53d6\n\n **\u529f\u80fd\u63cf\u8ff0\uff1a** * \u5bf9deque \u4e2d\u7684\u6570\u636e\u7684\u5b58\u53d6\u64cd\u4f5c **\u51fd\u6570\u539f\u578b\uff1a** - `at(int idx); `     //\u8fd4\u56de\u7d22\u5f15idx\u6240\u6307\u7684\u6570\u636e\n- `operator[]; `      //\u8fd4\u56de\u7d22\u5f15idx\u6240\u6307\u7684\u6570\u636e\n- `front(); `            //\u8fd4\u56de\u5bb9\u5668\u4e2d\u7b2c\u4e00\u4e2a\u6570\u636e\u5143\u7d20\n- `back();`              //\u8fd4\u56de\u5bb9\u5668\u4e2d\u6700\u540e\u4e00\u4e2a\u6570\u636e\u5143\u7d20\n\n **\u793a\u4f8b\uff1a** ```C++\n#include &lt;deque&gt;\n\nvoid printDeque(const deque&lt;int&gt;&amp; d) \n{\n    for (deque&lt;int&gt;::const_iterator it = d.begin(); it != d.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n\n    }\n    cout &lt;&lt; endl;\n}\n\n//\u6570\u636e\u5b58\u53d6\nvoid test01()\n{\n\n    deque&lt;int&gt; d;\n    d.push_back(10);\n    d.push_back(20);\n    d.push_front(100);\n    d.push_front(200);\n\n    for (int i = 0; i &lt; d.size(); i++) {\n        cout &lt;&lt; d[i] &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n\n\n    for (int i = 0; i &lt; d.size(); i++) {\n        cout &lt;&lt; d.at(i) &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n\n    cout &lt;&lt; \"front:\" &lt;&lt; d.front() &lt;&lt; endl;\n\n    cout &lt;&lt; \"back:\" &lt;&lt; d.back() &lt;&lt; endl;\n\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u9664\u4e86\u7528\u8fed\u4ee3\u5668\u83b7\u53d6deque\u5bb9\u5668\u4e2d\u5143\u7d20\uff0c[ ]\u548cat\u4e5f\u53ef\u4ee5</li> <li>front\u8fd4\u56de\u5bb9\u5668\u7b2c\u4e00\u4e2a\u5143\u7d20</li> <li>back\u8fd4\u56de\u5bb9\u5668\u6700\u540e\u4e00\u4e2a\u5143\u7d20</li> </ul>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#337-deque-deque", "title": "3.3.7  deque \u6392\u5e8f \u529f\u80fd\u63cf\u8ff0\uff1a * \u5229\u7528\u7b97\u6cd5\u5b9e\u73b0\u5bf9deque\u5bb9\u5668\u8fdb\u884c\u6392\u5e8f", "text": "<p>\u7b97\u6cd5\uff1a </p> <ul> <li><code>sort(iterator beg, iterator end)</code>  //\u5bf9beg\u548cend\u533a\u95f4\u5185\u5143\u7d20\u8fdb\u884c\u6392\u5e8f</li> </ul> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_18", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_19", "title": "include  <p>void printDeque(const deque&amp; d)  {     for (deque::const_iterator it = d.begin(); it != d.end(); it++) {         cout &lt;&lt; *it &lt;&lt; \" \"; <pre><code>}\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>void test01() {</p> <pre><code>deque&lt;int&gt; d;\nd.push_back(10);\nd.push_back(20);\nd.push_front(100);\nd.push_front(200);\n\nprintDeque(d);\nsort(d.begin(), d.end());\nprintDeque(d);\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1asort\u7b97\u6cd5\u975e\u5e38\u5b9e\u7528\uff0c\u4f7f\u7528\u65f6\u5305\u542b\u5934\u6587\u4ef6 algorithm\u5373\u53ef           </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#34-", "title": "3.4 \u6848\u4f8b-\u8bc4\u59d4\u6253\u5206", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#341", "title": "3.4.1 \u6848\u4f8b\u63cf\u8ff0", "text": "<p>\u67095\u540d\u9009\u624b\uff1a\u9009\u624bABCDE\uff0c10\u4e2a\u8bc4\u59d4\u5206\u522b\u5bf9\u6bcf\u4e00\u540d\u9009\u624b\u6253\u5206\uff0c\u53bb\u9664\u6700\u9ad8\u5206\uff0c\u53bb\u9664\u8bc4\u59d4\u4e2d\u6700\u4f4e\u5206\uff0c\u53d6\u5e73\u5747\u5206\u3002   </p>"}, {"location": "record/algo/code/cpp/02_advance/#342", "title": "3.4.2 \u5b9e\u73b0\u6b65\u9aa4", "text": "<ol> <li>\u521b\u5efa\u4e94\u540d\u9009\u624b\uff0c\u653e\u5230vector\u4e2d</li> <li>\u904d\u5386vector\u5bb9\u5668\uff0c\u53d6\u51fa\u6765\u6bcf\u4e00\u4e2a\u9009\u624b\uff0c\u6267\u884cfor\u5faa\u73af\uff0c\u53ef\u4ee5\u628a10\u4e2a\u8bc4\u5206\u6253\u5206\u5b58\u5230deque\u5bb9\u5668\u4e2d</li> <li>sort\u7b97\u6cd5\u5bf9deque\u5bb9\u5668\u4e2d\u5206\u6570\u6392\u5e8f\uff0c\u53bb\u9664\u6700\u9ad8\u548c\u6700\u4f4e\u5206</li> <li>deque\u5bb9\u5668\u904d\u5386\u4e00\u904d\uff0c\u7d2f\u52a0\u603b\u5206</li> <li>\u83b7\u53d6\u5e73\u5747\u5206 \u793a\u4f8b\u4ee3\u7801\uff1a <code>C++ //\u9009\u624b\u7c7b class Person { public:     Person(string name, int score)     {         this-&gt;m_Name = name;         this-&gt;m_Score = score;     }      string m_Name; //\u59d3\u540d     int m_Score;  //\u5e73\u5747\u5206 };  void createPerson(vector&lt;Person&gt;&amp;v) {     string nameSeed = \"ABCDE\";     for (int i = 0; i &lt; 5; i++)     {         string name = \"\u9009\u624b\";         name += nameSeed[i];          int score = 0;          Person p(name, score);          //\u5c06\u521b\u5efa\u7684person\u5bf9\u8c61 \u653e\u5165\u5230\u5bb9\u5668\u4e2d         v.push_back(p);     } }  //\u6253\u5206 void setScore(vector&lt;Person&gt;&amp;v) {     for (vector&lt;Person&gt;::iterator it = v.begin(); it != v.end(); it++)     {         //\u5c06\u8bc4\u59d4\u7684\u5206\u6570 \u653e\u5165\u5230deque\u5bb9\u5668\u4e2d         deque&lt;int&gt;d;         for (int i = 0; i &lt; 10; i++)         {             int score = rand() % 41 + 60;  // 60 ~ 100             d.push_back(score);         }          //cout &lt;&lt; \"\u9009\u624b\uff1a \" &lt;&lt; it-&gt;m_Name &lt;&lt; \" \u6253\u5206\uff1a \" &lt;&lt; endl;         //for (deque&lt;int&gt;::iterator dit = d.begin(); dit != d.end(); dit++)         //{         //  cout &lt;&lt; *dit &lt;&lt; \" \";         //}         //cout &lt;&lt; endl;          //\u6392\u5e8f         sort(d.begin(), d.end());          //\u53bb\u9664\u6700\u9ad8\u548c\u6700\u4f4e\u5206         d.pop_back();         d.pop_front();          //\u53d6\u5e73\u5747\u5206         int sum = 0;         for (deque&lt;int&gt;::iterator dit = d.begin(); dit != d.end(); dit++)         {             sum += *dit; //\u7d2f\u52a0\u6bcf\u4e2a\u8bc4\u59d4\u7684\u5206\u6570         }          int avg = sum / d.size();          //\u5c06\u5e73\u5747\u5206 \u8d4b\u503c\u7ed9\u9009\u624b\u8eab\u4e0a         it-&gt;m_Score = avg;     }  }  void showScore(vector&lt;Person&gt;&amp;v) {     for (vector&lt;Person&gt;::iterator it = v.begin(); it != v.end(); it++)     {         cout &lt;&lt; \"\u59d3\u540d\uff1a \" &lt;&lt; it-&gt;m_Name &lt;&lt; \" \u5e73\u5747\u5206\uff1a \" &lt;&lt; it-&gt;m_Score &lt;&lt; endl;     } }  int main() {      //\u968f\u673a\u6570\u79cd\u5b50     srand((unsigned int)time(NULL));      //1\u3001\u521b\u5efa5\u540d\u9009\u624b     vector&lt;Person&gt;v;  //\u5b58\u653e\u9009\u624b\u5bb9\u5668     createPerson(v);      //\u6d4b\u8bd5     //for (vector&lt;Person&gt;::iterator it = v.begin(); it != v.end(); it++)     //{     //  cout &lt;&lt; \"\u59d3\u540d\uff1a \" &lt;&lt; (*it).m_Name &lt;&lt; \" \u5206\u6570\uff1a \" &lt;&lt; (*it).m_Score &lt;&lt; endl;     //}      //2\u3001\u7ed95\u540d\u9009\u624b\u6253\u5206     setScore(v);      //3\u3001\u663e\u793a\u6700\u540e\u5f97\u5206     showScore(v);      system(\"pause\");      return 0; }</code> \u603b\u7ed3\uff1a \u9009\u53d6\u4e0d\u540c\u7684\u5bb9\u5668\u64cd\u4f5c\u6570\u636e\uff0c\u53ef\u4ee5\u63d0\u5347\u4ee3\u7801\u7684\u6548\u7387       </li> </ol>"}, {"location": "record/algo/code/cpp/02_advance/#35-stack", "title": "3.5 stack\u5bb9\u5668", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#351-stack-stack-first-in-last-outfilo", "title": "3.5.1 stack \u57fa\u672c\u6982\u5ff5 \u6982\u5ff5\uff1a stack\u662f\u4e00\u79cd \u5148\u8fdb\u540e\u51fa (First In Last Out,FILO)\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u51fa\u53e3", "text": "<p>  \u6808\u4e2d\u53ea\u6709\u9876\u7aef\u7684\u5143\u7d20\u624d\u53ef\u4ee5\u88ab\u5916\u754c\u4f7f\u7528\uff0c\u56e0\u6b64\u6808\u4e0d\u5141\u8bb8\u6709\u904d\u5386\u884c\u4e3a  \u6808\u4e2d\u8fdb\u5165\u6570\u636e\u79f0\u4e3a  --- \u5165\u6808 <code>push</code>  \u6808\u4e2d\u5f39\u51fa\u6570\u636e\u79f0\u4e3a  --- \u51fa\u6808 <code>pop</code>    \u751f\u6d3b\u4e2d\u7684\u6808\uff1a   </p>"}, {"location": "record/algo/code/cpp/02_advance/#352-stack", "title": "3.5.2 stack \u5e38\u7528\u63a5\u53e3", "text": "<p>\u529f\u80fd\u63cf\u8ff0\uff1a\u6808\u5bb9\u5668\u5e38\u7528\u7684\u5bf9\u5916\u63a5\u53e3    \u6784\u9020\u51fd\u6570\uff1a  * <code>stack&lt;T&gt; stk;</code>                                 //stack\u91c7\u7528\u6a21\u677f\u7c7b\u5b9e\u73b0\uff0c stack\u5bf9\u8c61\u7684\u9ed8\u8ba4\u6784\u9020\u5f62\u5f0f * <code>stack(const stack &amp;stk);</code>            //\u62f7\u8d1d\u6784\u9020\u51fd\u6570  \u8d4b\u503c\u64cd\u4f5c\uff1a  * <code>stack&amp; operator=(const stack &amp;stk);</code>           //\u91cd\u8f7d\u7b49\u53f7\u64cd\u4f5c\u7b26  \u6570\u636e\u5b58\u53d6\uff1a  * <code>push(elem);</code>      //\u5411\u6808\u9876\u6dfb\u52a0\u5143\u7d20 * <code>pop();</code>                //\u4ece\u6808\u9876\u79fb\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20 * <code>top();</code>                //\u8fd4\u56de\u6808\u9876\u5143\u7d20  \u5927\u5c0f\u64cd\u4f5c\uff1a  * <code>empty();</code>            //\u5224\u65ad\u5806\u6808\u662f\u5426\u4e3a\u7a7a * <code>size();</code>              //\u8fd4\u56de\u6808\u7684\u5927\u5c0f     \u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_20", "title": "include  <p>//\u6808\u5bb9\u5668\u5e38\u7528\u63a5\u53e3 void test01() {     //\u521b\u5efa\u6808\u5bb9\u5668 \u6808\u5bb9\u5668\u5fc5\u987b\u7b26\u5408\u5148\u8fdb\u540e\u51fa     stack s;      //\u5411\u6808\u4e2d\u6dfb\u52a0\u5143\u7d20\uff0c\u53eb\u505a \u538b\u6808 \u5165\u6808     s.push(10);     s.push(20);     s.push(30);      while (!s.empty()) {         //\u8f93\u51fa\u6808\u9876\u5143\u7d20         cout &lt;&lt; \"\u6808\u9876\u5143\u7d20\u4e3a\uff1a \" &lt;&lt; s.top() &lt;&lt; endl;         //\u5f39\u51fa\u6808\u9876\u5143\u7d20         s.pop();     }     cout &lt;&lt; \"\u6808\u7684\u5927\u5c0f\u4e3a\uff1a\" &lt;&lt; s.size() &lt;&lt; endl;  }  int main() {      test01();      system(\"pause\");      return 0; } ``` <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u5165\u6808   --- push</li> <li>\u51fa\u6808   --- pop</li> <li>\u8fd4\u56de\u6808\u9876   --- top</li> <li>\u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a   --- empty</li> <li>\u8fd4\u56de\u6808\u5927\u5c0f   --- size</li> </ul>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#36-queue", "title": "3.6 queue \u5bb9\u5668", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#361-queue-queue-first-in-first-outfifo", "title": "3.6.1 queue \u57fa\u672c\u6982\u5ff5 \u6982\u5ff5\uff1a Queue\u662f\u4e00\u79cd \u5148\u8fdb\u5148\u51fa (First In First Out,FIFO)\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u6709\u4e24\u4e2a\u51fa\u53e3", "text": "<p>\u961f\u5217\u5bb9\u5668\u5141\u8bb8\u4ece\u4e00\u7aef\u65b0\u589e\u5143\u7d20\uff0c\u4ece\u53e6\u4e00\u7aef\u79fb\u9664\u5143\u7d20</p> <p>\u961f\u5217\u4e2d\u53ea\u6709\u961f\u5934\u548c\u961f\u5c3e\u624d\u53ef\u4ee5\u88ab\u5916\u754c\u4f7f\u7528\uff0c\u56e0\u6b64\u961f\u5217\u4e0d\u5141\u8bb8\u6709\u904d\u5386\u884c\u4e3a</p> <p>\u961f\u5217\u4e2d\u8fdb\u6570\u636e\u79f0\u4e3a --- \u5165\u961f <code>push</code></p> <p>\u961f\u5217\u4e2d\u51fa\u6570\u636e\u79f0\u4e3a --- \u51fa\u961f <code>pop</code></p> <p>\u751f\u6d3b\u4e2d\u7684\u961f\u5217\uff1a</p> <p></p>"}, {"location": "record/algo/code/cpp/02_advance/#362-queue", "title": "3.6.2 queue \u5e38\u7528\u63a5\u53e3", "text": "<p>\u529f\u80fd\u63cf\u8ff0\uff1a\u6808\u5bb9\u5668\u5e38\u7528\u7684\u5bf9\u5916\u63a5\u53e3</p> <p>\u6784\u9020\u51fd\u6570\uff1a</p> <ul> <li><code>queue&lt;T&gt; que;</code>                                 //queue\u91c7\u7528\u6a21\u677f\u7c7b\u5b9e\u73b0\uff0cqueue\u5bf9\u8c61\u7684\u9ed8\u8ba4\u6784\u9020\u5f62\u5f0f</li> <li><code>queue(const queue &amp;que);</code>            //\u62f7\u8d1d\u6784\u9020\u51fd\u6570</li> </ul> <p>\u8d4b\u503c\u64cd\u4f5c\uff1a</p> <ul> <li><code>queue&amp; operator=(const queue &amp;que);</code>           //\u91cd\u8f7d\u7b49\u53f7\u64cd\u4f5c\u7b26</li> </ul> <p>\u6570\u636e\u5b58\u53d6\uff1a</p> <ul> <li><code>push(elem);</code>                             //\u5f80\u961f\u5c3e\u6dfb\u52a0\u5143\u7d20</li> <li><code>pop();</code>                                      //\u4ece\u961f\u5934\u79fb\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20</li> <li><code>back();</code>                                    //\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20</li> <li><code>front();</code>                                  //\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20</li> </ul> <p>\u5927\u5c0f\u64cd\u4f5c\uff1a</p> <ul> <li><code>empty();</code>            //\u5224\u65ad\u5806\u6808\u662f\u5426\u4e3a\u7a7a</li> <li><code>size();</code>              //\u8fd4\u56de\u6808\u7684\u5927\u5c0f</li> </ul> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_21", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_22", "title": "include  <p>class Person { public:     Person(string name, int age)     {         this-&gt;m_Name = name;         this-&gt;m_Age = age;     }</p> <pre><code>string m_Name;\nint m_Age;\n</code></pre> <p>};</p> <p>void test01() {</p> <pre><code>//\u521b\u5efa\u961f\u5217\nqueue&lt;Person&gt; q;\n\n//\u51c6\u5907\u6570\u636e\nPerson p1(\"\u5510\u50e7\", 30);\nPerson p2(\"\u5b59\u609f\u7a7a\", 1000);\nPerson p3(\"\u732a\u516b\u6212\", 900);\nPerson p4(\"\u6c99\u50e7\", 800);\n\n//\u5411\u961f\u5217\u4e2d\u6dfb\u52a0\u5143\u7d20  \u5165\u961f\u64cd\u4f5c\nq.push(p1);\nq.push(p2);\nq.push(p3);\nq.push(p4);\n\n//\u961f\u5217\u4e0d\u63d0\u4f9b\u8fed\u4ee3\u5668\uff0c\u66f4\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee \nwhile (!q.empty()) {\n    //\u8f93\u51fa\u961f\u5934\u5143\u7d20\n    cout &lt;&lt; \"\u961f\u5934\u5143\u7d20-- \u59d3\u540d\uff1a \" &lt;&lt; q.front().m_Name \n          &lt;&lt; \" \u5e74\u9f84\uff1a \"&lt;&lt; q.front().m_Age &lt;&lt; endl;\n\n    cout &lt;&lt; \"\u961f\u5c3e\u5143\u7d20-- \u59d3\u540d\uff1a \" &lt;&lt; q.back().m_Name  \n          &lt;&lt; \" \u5e74\u9f84\uff1a \" &lt;&lt; q.back().m_Age &lt;&lt; endl;\n\n    cout &lt;&lt; endl;\n    //\u5f39\u51fa\u961f\u5934\u5143\u7d20\n    q.pop();\n}\n\ncout &lt;&lt; \"\u961f\u5217\u5927\u5c0f\u4e3a\uff1a\" &lt;&lt; q.size() &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1a  - \u5165\u961f   --- push - \u51fa\u961f   --- pop - \u8fd4\u56de\u961f\u5934\u5143\u7d20   --- front - \u8fd4\u56de\u961f\u5c3e\u5143\u7d20   --- back - \u5224\u65ad\u961f\u662f\u5426\u4e3a\u7a7a   --- empty - \u8fd4\u56de\u961f\u5217\u5927\u5c0f   --- size               </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#37-list", "title": "3.7 list\u5bb9\u5668", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#371-list-list", "title": "3.7.1 list\u57fa\u672c\u6982\u5ff5 \u529f\u80fd\uff1a \u5c06\u6570\u636e\u8fdb\u884c\u94fe\u5f0f\u5b58\u50a8 \u94fe\u8868 \uff08list\uff09\u662f\u4e00\u79cd\u7269\u7406\u5b58\u50a8\u5355\u5143\u4e0a\u975e\u8fde\u7eed\u7684\u5b58\u50a8\u7ed3\u6784\uff0c\u6570\u636e\u5143\u7d20\u7684\u903b\u8f91\u987a\u5e8f\u662f\u901a\u8fc7\u94fe\u8868\u4e2d\u7684\u6307\u9488\u94fe\u63a5\u5b9e\u73b0\u7684", "text": "<p>\u94fe\u8868\u7684\u7ec4\u6210\uff1a\u94fe\u8868\u7531\u4e00\u7cfb\u5217 \u7ed3\u70b9 \u7ec4\u6210    \u7ed3\u70b9\u7684\u7ec4\u6210\uff1a\u4e00\u4e2a\u662f\u5b58\u50a8\u6570\u636e\u5143\u7d20\u7684 \u6570\u636e\u57df \uff0c\u53e6\u4e00\u4e2a\u662f\u5b58\u50a8\u4e0b\u4e00\u4e2a\u7ed3\u70b9\u5730\u5740\u7684 \u6307\u9488\u57df STL\u4e2d\u7684\u94fe\u8868\u662f\u4e00\u4e2a\u53cc\u5411\u5faa\u73af\u94fe\u8868      \u7531\u4e8e\u94fe\u8868\u7684\u5b58\u50a8\u65b9\u5f0f\u5e76\u4e0d\u662f\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u56e0\u6b64\u94fe\u8868list\u4e2d\u7684\u8fed\u4ee3\u5668\u53ea\u652f\u6301\u524d\u79fb\u548c\u540e\u79fb\uff0c\u5c5e\u4e8e \u53cc\u5411\u8fed\u4ee3\u5668 list\u7684\u4f18\u70b9\uff1a  * \u91c7\u7528\u52a8\u6001\u5b58\u50a8\u5206\u914d\uff0c\u4e0d\u4f1a\u9020\u6210\u5185\u5b58\u6d6a\u8d39\u548c\u6ea2\u51fa * \u94fe\u8868\u6267\u884c\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u5341\u5206\u65b9\u4fbf\uff0c\u4fee\u6539\u6307\u9488\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u79fb\u52a8\u5927\u91cf\u5143\u7d20  list\u7684\u7f3a\u70b9\uff1a  * \u94fe\u8868\u7075\u6d3b\uff0c\u4f46\u662f\u7a7a\u95f4(\u6307\u9488\u57df) \u548c \u65f6\u95f4\uff08\u904d\u5386\uff09\u989d\u5916\u8017\u8d39\u8f83\u5927    List\u6709\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u8d28\uff0c\u63d2\u5165\u64cd\u4f5c\u548c\u5220\u9664\u64cd\u4f5c\u90fd\u4e0d\u4f1a\u9020\u6210\u539f\u6709list\u8fed\u4ee3\u5668\u7684\u5931\u6548\uff0c\u8fd9\u5728vector\u662f\u4e0d\u6210\u7acb\u7684\u3002    \u603b\u7ed3\uff1aSTL\u4e2d List\u548cvector\u662f\u4e24\u4e2a\u6700\u5e38\u88ab\u4f7f\u7528\u7684\u5bb9\u5668 \uff0c\u5404\u6709\u4f18\u7f3a\u70b9     </p>"}, {"location": "record/algo/code/cpp/02_advance/#372-list-list-listt-lst-list", "title": "3.7.2  list\u6784\u9020\u51fd\u6570 \u529f\u80fd\u63cf\u8ff0\uff1a * \u521b\u5efalist\u5bb9\u5668 \u51fd\u6570\u539f\u578b\uff1a * <code>list&lt;T&gt; lst;</code>                               //list\u91c7\u7528\u91c7\u7528\u6a21\u677f\u7c7b\u5b9e\u73b0,\u5bf9\u8c61\u7684\u9ed8\u8ba4\u6784\u9020\u5f62\u5f0f\uff1a", "text": "<ul> <li><code>list(beg,end);</code>                           //\u6784\u9020\u51fd\u6570\u5c06[beg, end)\u533a\u95f4\u4e2d\u7684\u5143\u7d20\u62f7\u8d1d\u7ed9\u672c\u8eab\u3002</li> <li><code>list(n,elem);</code>                             //\u6784\u9020\u51fd\u6570\u5c06n\u4e2aelem\u62f7\u8d1d\u7ed9\u672c\u8eab\u3002</li> <li><code>list(const list &amp;lst);</code>            //\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002     \u793a\u4f8b\uff1a ```C++</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#include_23", "title": "include  <p>void printList(const list&amp; L) {      for (list::const_iterator it = L.begin(); it != L.end(); it++) {         cout &lt;&lt; *it &lt;&lt; \" \";     }     cout &lt;&lt; endl; }  void test01() {     listL1;     L1.push_back(10);     L1.push_back(20);     L1.push_back(30);     L1.push_back(40);      printList(L1);      listL2(L1.begin(),L1.end());     printList(L2);      listL3(L2);     printList(L3);      listL4(10, 1000);     printList(L4); }  int main() {      test01();      system(\"pause\");      return 0; } ``` <p>\u603b\u7ed3\uff1alist\u6784\u9020\u65b9\u5f0f\u540c\u5176\u4ed6\u51e0\u4e2aSTL\u5e38\u7528\u5bb9\u5668\uff0c\u719f\u7ec3\u638c\u63e1\u5373\u53ef</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#373-list-listlist-assignbeg-end-beg-end", "title": "3.7.3 list \u8d4b\u503c\u548c\u4ea4\u6362 \u529f\u80fd\u63cf\u8ff0\uff1a * \u7ed9list\u5bb9\u5668\u8fdb\u884c\u8d4b\u503c\uff0c\u4ee5\u53ca\u4ea4\u6362list\u5bb9\u5668 \u51fd\u6570\u539f\u578b\uff1a * <code>assign(beg, end);</code>            //\u5c06[beg, end)\u533a\u95f4\u4e2d\u7684\u6570\u636e\u62f7\u8d1d\u8d4b\u503c\u7ed9\u672c\u8eab\u3002", "text": "<ul> <li><code>assign(n, elem);</code>              //\u5c06n\u4e2aelem\u62f7\u8d1d\u8d4b\u503c\u7ed9\u672c\u8eab\u3002</li> <li><code>list&amp; operator=(const list &amp;lst);</code>         //\u91cd\u8f7d\u7b49\u53f7\u64cd\u4f5c\u7b26</li> <li><code>swap(lst);</code>                         //\u5c06lst\u4e0e\u672c\u8eab\u7684\u5143\u7d20\u4e92\u6362\u3002</li> </ul> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_24", "title": "include  <p>void printList(const list&amp; L) { <pre><code>for (list&lt;int&gt;::const_iterator it = L.begin(); it != L.end(); it++) {\n    cout &lt;&lt; *it &lt;&lt; \" \";\n}\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>//\u8d4b\u503c\u548c\u4ea4\u6362 void test01() {     listL1;     L1.push_back(10);     L1.push_back(20);     L1.push_back(30);     L1.push_back(40);     printList(L1); <pre><code>//\u8d4b\u503c\nlist&lt;int&gt;L2;\nL2 = L1;\nprintList(L2);\n\nlist&lt;int&gt;L3;\nL3.assign(L2.begin(), L2.end());\nprintList(L3);\n\nlist&lt;int&gt;L4;\nL4.assign(10, 100);\nprintList(L4);\n</code></pre> <p>}</p> <p>//\u4ea4\u6362 void test02() {</p> <pre><code>list&lt;int&gt;L1;\nL1.push_back(10);\nL1.push_back(20);\nL1.push_back(30);\nL1.push_back(40);\n\nlist&lt;int&gt;L2;\nL2.assign(10, 100);\n\ncout &lt;&lt; \"\u4ea4\u6362\u524d\uff1a \" &lt;&lt; endl;\nprintList(L1);\nprintList(L2);\n\ncout &lt;&lt; endl;\n\nL1.swap(L2);\n\ncout &lt;&lt; \"\u4ea4\u6362\u540e\uff1a \" &lt;&lt; endl;\nprintList(L1);\nprintList(L2);\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>//test01();\n\ntest02();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1alist\u8d4b\u503c\u548c\u4ea4\u6362\u64cd\u4f5c\u80fd\u591f\u7075\u6d3b\u8fd0\u7528\u5373\u53ef               </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#374-list-list-size", "title": "3.7.4 list \u5927\u5c0f\u64cd\u4f5c \u529f\u80fd\u63cf\u8ff0\uff1a * \u5bf9list\u5bb9\u5668\u7684\u5927\u5c0f\u8fdb\u884c\u64cd\u4f5c \u51fd\u6570\u539f\u578b\uff1a * <code>size();</code>                             //\u8fd4\u56de\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u4e2a\u6570", "text": "<ul> <li><code>empty();</code>                           //\u5224\u65ad\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a </li> <li><code>resize(num);</code>                   //\u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum\uff0c\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5\u9ed8\u8ba4\u503c\u586b\u5145\u65b0\u4f4d\u7f6e\u3002    \u200b                     //\u5982\u679c\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664\u3002 </li> <li><code>resize(num, elem);</code>       //\u91cd\u65b0\u6307\u5b9a\u5bb9\u5668\u7684\u957f\u5ea6\u4e3anum\uff0c\u82e5\u5bb9\u5668\u53d8\u957f\uff0c\u5219\u4ee5elem\u503c\u586b\u5145\u65b0\u4f4d\u7f6e\u3002     //\u5982\u679c\u5bb9\u5668\u53d8\u77ed\uff0c\u5219\u672b\u5c3e\u8d85\u51fa\u5bb9\u5668\u957f\u5ea6\u7684\u5143\u7d20\u88ab\u5220\u9664\u3002   \u793a\u4f8b\uff1a ```C++</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#include_25", "title": "include  <p>void printList(const list&amp; L) {      for (list::const_iterator it = L.begin(); it != L.end(); it++) {         cout &lt;&lt; *it &lt;&lt; \" \";     }     cout &lt;&lt; endl; }  //\u5927\u5c0f\u64cd\u4f5c void test01() {     listL1;     L1.push_back(10);     L1.push_back(20);     L1.push_back(30);     L1.push_back(40);      if (L1.empty())     {         cout &lt;&lt; \"L1\u4e3a\u7a7a\" &lt;&lt; endl;     }     else     {         cout &lt;&lt; \"L1\u4e0d\u4e3a\u7a7a\" &lt;&lt; endl;         cout &lt;&lt; \"L1\u7684\u5927\u5c0f\u4e3a\uff1a \" &lt;&lt; L1.size() &lt;&lt; endl;     }      //\u91cd\u65b0\u6307\u5b9a\u5927\u5c0f     L1.resize(10);     printList(L1);      L1.resize(2);     printList(L1); }  int main() {      test01();      system(\"pause\");      return 0; } ``` <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u5224\u65ad\u662f\u5426\u4e3a\u7a7a   --- empty</li> <li>\u8fd4\u56de\u5143\u7d20\u4e2a\u6570   --- size</li> <li>\u91cd\u65b0\u6307\u5b9a\u4e2a\u6570   --- resize</li> </ul>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#375-list-list-push_backelem", "title": "3.7.5 list \u63d2\u5165\u548c\u5220\u9664 \u529f\u80fd\u63cf\u8ff0\uff1a * \u5bf9list\u5bb9\u5668\u8fdb\u884c\u6570\u636e\u7684\u63d2\u5165\u548c\u5220\u9664 \u51fd\u6570\u539f\u578b\uff1a * push_back(elem);//\u5728\u5bb9\u5668\u5c3e\u90e8\u52a0\u5165\u4e00\u4e2a\u5143\u7d20", "text": "<ul> <li>pop_back();//\u5220\u9664\u5bb9\u5668\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20</li> <li>push_front(elem);//\u5728\u5bb9\u5668\u5f00\u5934\u63d2\u5165\u4e00\u4e2a\u5143\u7d20</li> <li>pop_front();//\u4ece\u5bb9\u5668\u5f00\u5934\u79fb\u9664\u7b2c\u4e00\u4e2a\u5143\u7d20</li> <li>insert(pos,elem);//\u5728pos\u4f4d\u7f6e\u63d2elem\u5143\u7d20\u7684\u62f7\u8d1d\uff0c\u8fd4\u56de\u65b0\u6570\u636e\u7684\u4f4d\u7f6e\u3002</li> <li>insert(pos,n,elem);//\u5728pos\u4f4d\u7f6e\u63d2\u5165n\u4e2aelem\u6570\u636e\uff0c\u65e0\u8fd4\u56de\u503c\u3002</li> <li>insert(pos,beg,end);//\u5728pos\u4f4d\u7f6e\u63d2\u5165[beg,end)\u533a\u95f4\u7684\u6570\u636e\uff0c\u65e0\u8fd4\u56de\u503c\u3002</li> <li>clear();//\u79fb\u9664\u5bb9\u5668\u7684\u6240\u6709\u6570\u636e</li> <li>erase(beg,end);//\u5220\u9664[beg,end)\u533a\u95f4\u7684\u6570\u636e\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u636e\u7684\u4f4d\u7f6e\u3002</li> <li>erase(pos);//\u5220\u9664pos\u4f4d\u7f6e\u7684\u6570\u636e\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u6570\u636e\u7684\u4f4d\u7f6e\u3002</li> <li>remove(elem);//\u5220\u9664\u5bb9\u5668\u4e2d\u6240\u6709\u4e0eelem\u503c\u5339\u914d\u7684\u5143\u7d20\u3002</li> </ul> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_26", "title": "include  <p>void printList(const list&amp; L) { <pre><code>for (list&lt;int&gt;::const_iterator it = L.begin(); it != L.end(); it++) {\n    cout &lt;&lt; *it &lt;&lt; \" \";\n}\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>//\u63d2\u5165\u548c\u5220\u9664 void test01() {     list L;     //\u5c3e\u63d2     L.push_back(10);     L.push_back(20);     L.push_back(30);     //\u5934\u63d2     L.push_front(100);     L.push_front(200);     L.push_front(300); <pre><code>printList(L);\n\n//\u5c3e\u5220\nL.pop_back();\nprintList(L);\n\n//\u5934\u5220\nL.pop_front();\nprintList(L);\n\n//\u63d2\u5165\nlist&lt;int&gt;::iterator it = L.begin();\nL.insert(++it, 1000);\nprintList(L);\n\n//\u5220\u9664\nit = L.begin();\nL.erase(++it);\nprintList(L);\n\n//\u79fb\u9664\nL.push_back(10000);\nL.push_back(10000);\nL.push_back(10000);\nprintList(L);\nL.remove(10000);\nprintList(L);\n\n//\u6e05\u7a7a\nL.clear();\nprintList(L);\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1a  * \u5c3e\u63d2   --- push_back * \u5c3e\u5220   --- pop_back * \u5934\u63d2   --- push_front * \u5934\u5220   --- pop_front * \u63d2\u5165   --- insert * \u5220\u9664   --- erase * \u79fb\u9664   --- remove * \u6e05\u7a7a   --- clear                 </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#376-list-list-front", "title": "3.7.6 list \u6570\u636e\u5b58\u53d6 \u529f\u80fd\u63cf\u8ff0\uff1a * \u5bf9list\u5bb9\u5668\u4e2d\u6570\u636e\u8fdb\u884c\u5b58\u53d6 \u51fd\u6570\u539f\u578b\uff1a * <code>front();</code>        //\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002", "text": "<ul> <li><code>back();</code>         //\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002     \u793a\u4f8b\uff1a ```C++</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#include_27", "title": "include  <p>//\u6570\u636e\u5b58\u53d6 void test01() {     listL1;     L1.push_back(10);     L1.push_back(20);     L1.push_back(30);     L1.push_back(40);       //cout &lt;&lt; L1.at(0) &lt;&lt; endl;//\u9519\u8bef \u4e0d\u652f\u6301at\u8bbf\u95ee\u6570\u636e     //cout &lt;&lt; L1[0] &lt;&lt; endl; //\u9519\u8bef  \u4e0d\u652f\u6301[]\u65b9\u5f0f\u8bbf\u95ee\u6570\u636e     cout &lt;&lt; \"\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a\uff1a \" &lt;&lt; L1.front() &lt;&lt; endl;     cout &lt;&lt; \"\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e3a\uff1a \" &lt;&lt; L1.back() &lt;&lt; endl;      //list\u5bb9\u5668\u7684\u8fed\u4ee3\u5668\u662f\u53cc\u5411\u8fed\u4ee3\u5668\uff0c\u4e0d\u652f\u6301\u968f\u673a\u8bbf\u95ee     list::iterator it = L1.begin();     //it = it + 1;//\u9519\u8bef\uff0c\u4e0d\u53ef\u4ee5\u8df3\u8dc3\u8bbf\u95ee\uff0c\u5373\u4f7f\u662f+1 }  int main() {      test01();      system(\"pause\");      return 0; }  ``` <p>\u603b\u7ed3\uff1a</p> <ul> <li>list\u5bb9\u5668\u4e2d\u4e0d\u53ef\u4ee5\u901a\u8fc7[]\u6216\u8005at\u65b9\u5f0f\u8bbf\u95ee\u6570\u636e</li> <li>\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20   --- front</li> <li>\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20   --- back</li> </ul>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#377-list-reverse", "title": "3.7.7 list \u53cd\u8f6c\u548c\u6392\u5e8f \u529f\u80fd\u63cf\u8ff0\uff1a * \u5c06\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u53cd\u8f6c\uff0c\u4ee5\u53ca\u5c06\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u8fdb\u884c\u6392\u5e8f \u51fd\u6570\u539f\u578b\uff1a * <code>reverse();</code>   //\u53cd\u8f6c\u94fe\u8868", "text": "<ul> <li><code>sort();</code>        //\u94fe\u8868\u6392\u5e8f</li> </ul> <p>\u793a\u4f8b\uff1a ```C++ void printList(const list&amp; L) { <pre><code>for (list&lt;int&gt;::const_iterator it = L.begin(); it != L.end(); it++) {\n    cout &lt;&lt; *it &lt;&lt; \" \";\n}\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>bool myCompare(int val1 , int val2) {     return val1 &gt; val2; }</p> <p>//\u53cd\u8f6c\u548c\u6392\u5e8f void test01() {     list L;     L.push_back(90);     L.push_back(30);     L.push_back(20);     L.push_back(70);     printList(L); <pre><code>//\u53cd\u8f6c\u5bb9\u5668\u7684\u5143\u7d20\nL.reverse();\nprintList(L);\n\n//\u6392\u5e8f\nL.sort(); //\u9ed8\u8ba4\u7684\u6392\u5e8f\u89c4\u5219 \u4ece\u5c0f\u5230\u5927\nprintList(L);\n\nL.sort(myCompare); //\u6307\u5b9a\u89c4\u5219\uff0c\u4ece\u5927\u5230\u5c0f\nprintList(L);\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1a  * \u53cd\u8f6c   --- reverse * \u6392\u5e8f   --- sort \uff08\u6210\u5458\u51fd\u6570\uff09           </p>"}, {"location": "record/algo/code/cpp/02_advance/#378", "title": "3.7.8 \u6392\u5e8f\u6848\u4f8b", "text": "<p>\u6848\u4f8b\u63cf\u8ff0\uff1a\u5c06Person\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u6392\u5e8f\uff0cPerson\u4e2d\u5c5e\u6027\u6709\u59d3\u540d\u3001\u5e74\u9f84\u3001\u8eab\u9ad8  \u6392\u5e8f\u89c4\u5219\uff1a\u6309\u7167\u5e74\u9f84\u8fdb\u884c\u5347\u5e8f\uff0c\u5982\u679c\u5e74\u9f84\u76f8\u540c\u6309\u7167\u8eab\u9ad8\u8fdb\u884c\u964d\u5e8f   \u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_28", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_29", "title": "include  <p>class Person { public:     Person(string name, int age , int height) {         m_Name = name;         m_Age = age;         m_Height = height;     }  public:     string m_Name;  //\u59d3\u540d     int m_Age;      //\u5e74\u9f84     int m_Height;   //\u8eab\u9ad8 };   bool ComparePerson(Person&amp; p1, Person&amp; p2) {      if (p1.m_Age == p2.m_Age) {         return p1.m_Height  &gt; p2.m_Height;     }     else     {         return  p1.m_Age &lt; p2.m_Age;     }  }  void test01() {      list L;      Person p1(\"\u5218\u5907\", 35 , 175);     Person p2(\"\u66f9\u64cd\", 45 , 180);     Person p3(\"\u5b59\u6743\", 40 , 170);     Person p4(\"\u8d75\u4e91\", 25 , 190);     Person p5(\"\u5f20\u98de\", 35 , 160);     Person p6(\"\u5173\u7fbd\", 35 , 200);      L.push_back(p1);     L.push_back(p2);     L.push_back(p3);     L.push_back(p4);     L.push_back(p5);     L.push_back(p6);      for (list::iterator it = L.begin(); it != L.end(); it++) {         cout &lt;&lt; \"\u59d3\u540d\uff1a \" &lt;&lt; it-&gt;m_Name &lt;&lt; \" \u5e74\u9f84\uff1a \" &lt;&lt; it-&gt;m_Age                &lt;&lt; \" \u8eab\u9ad8\uff1a \" &lt;&lt; it-&gt;m_Height &lt;&lt; endl;     }      cout &lt;&lt; \"---------------------------------\" &lt;&lt; endl;     L.sort(ComparePerson); //\u6392\u5e8f      for (list::iterator it = L.begin(); it != L.end(); it++) {         cout &lt;&lt; \"\u59d3\u540d\uff1a \" &lt;&lt; it-&gt;m_Name &lt;&lt; \" \u5e74\u9f84\uff1a \" &lt;&lt; it-&gt;m_Age                &lt;&lt; \" \u8eab\u9ad8\uff1a \" &lt;&lt; it-&gt;m_Height &lt;&lt; endl;     } }  int main() {      test01();      system(\"pause\");      return 0; } ``` <p>\u603b\u7ed3\uff1a</p> <ul> <li> <p>\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\uff0c\u5fc5\u987b\u8981\u6307\u5b9a\u6392\u5e8f\u89c4\u5219\uff0c\u5426\u5219\u7f16\u8bd1\u5668\u4e0d\u77e5\u9053\u5982\u4f55\u8fdb\u884c\u6392\u5e8f</p> </li> <li> <p>\u9ad8\u7ea7\u6392\u5e8f\u53ea\u662f\u5728\u6392\u5e8f\u89c4\u5219\u4e0a\u518d\u8fdb\u884c\u4e00\u6b21\u903b\u8f91\u89c4\u5219\u5236\u5b9a\uff0c\u5e76\u4e0d\u590d\u6742</p> </li> </ul>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#38-set-multiset", "title": "3.8 set/ multiset \u5bb9\u5668", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#381-set", "title": "3.8.1 set\u57fa\u672c\u6982\u5ff5 \u7b80\u4ecb\uff1a * \u6240\u6709\u5143\u7d20\u90fd\u4f1a\u5728\u63d2\u5165\u65f6\u81ea\u52a8\u88ab\u6392\u5e8f", "text": "<p>\u672c\u8d28\uff1a * set/multiset\u5c5e\u4e8e \u5173\u8054\u5f0f\u5bb9\u5668 \uff0c\u5e95\u5c42\u7ed3\u6784\u662f\u7528 \u4e8c\u53c9\u6811 \u5b9e\u73b0\u3002 set\u548cmultiset\u533a\u522b \uff1a</p> <ul> <li>set\u4e0d\u5141\u8bb8\u5bb9\u5668\u4e2d\u6709\u91cd\u590d\u7684\u5143\u7d20</li> <li>multiset\u5141\u8bb8\u5bb9\u5668\u4e2d\u6709\u91cd\u590d\u7684\u5143\u7d20</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#382-set", "title": "3.8.2 set\u6784\u9020\u548c\u8d4b\u503c", "text": "<p>\u529f\u80fd\u63cf\u8ff0\uff1a\u521b\u5efaset\u5bb9\u5668\u4ee5\u53ca\u8d4b\u503c</p> <p>\u6784\u9020\uff1a</p> <ul> <li><code>set&lt;T&gt; st;</code>                        //\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff1a</li> <li><code>set(const set &amp;st);</code>       //\u62f7\u8d1d\u6784\u9020\u51fd\u6570</li> </ul> <p>\u8d4b\u503c\uff1a</p> <ul> <li><code>set&amp; operator=(const set &amp;st);</code>    //\u91cd\u8f7d\u7b49\u53f7\u64cd\u4f5c\u7b26</li> </ul> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_30", "title": "include  <p>void printSet(set &amp; s) {     for (set::iterator it = s.begin(); it != s.end(); it++)     {         cout &lt;&lt; *it &lt;&lt; \" \";     }     cout &lt;&lt; endl; } <p>//\u6784\u9020\u548c\u8d4b\u503c void test01() {     set s1; <pre><code>s1.insert(10);\ns1.insert(30);\ns1.insert(20);\ns1.insert(40);\nprintSet(s1);\n\n//\u62f7\u8d1d\u6784\u9020\nset&lt;int&gt;s2(s1);\nprintSet(s2);\n\n//\u8d4b\u503c\nset&lt;int&gt;s3;\ns3 = s2;\nprintSet(s3);\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1a  * set\u5bb9\u5668\u63d2\u5165\u6570\u636e\u65f6\u7528insert * set\u5bb9\u5668\u63d2\u5165\u6570\u636e\u7684\u6570\u636e\u4f1a\u81ea\u52a8\u6392\u5e8f           </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#383-set-setset-size", "title": "3.8.3 set\u5927\u5c0f\u548c\u4ea4\u6362 \u529f\u80fd\u63cf\u8ff0\uff1a * \u7edf\u8ba1set\u5bb9\u5668\u5927\u5c0f\u4ee5\u53ca\u4ea4\u6362set\u5bb9\u5668 \u51fd\u6570\u539f\u578b\uff1a * <code>size();</code>          //\u8fd4\u56de\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u6570\u76ee", "text": "<ul> <li><code>empty();</code>        //\u5224\u65ad\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a</li> <li><code>swap(st);</code>      //\u4ea4\u6362\u4e24\u4e2a\u96c6\u5408\u5bb9\u5668   \u793a\u4f8b\uff1a ```C++</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#include_31", "title": "include  <p>void printSet(set &amp; s) {     for (set::iterator it = s.begin(); it != s.end(); it++)     {         cout &lt;&lt; *it &lt;&lt; \" \";     }     cout &lt;&lt; endl; }  //\u5927\u5c0f void test01() {      set s1;      s1.insert(10);     s1.insert(30);     s1.insert(20);     s1.insert(40);      if (s1.empty())     {         cout &lt;&lt; \"s1\u4e3a\u7a7a\" &lt;&lt; endl;     }     else     {         cout &lt;&lt; \"s1\u4e0d\u4e3a\u7a7a\" &lt;&lt; endl;         cout &lt;&lt; \"s1\u7684\u5927\u5c0f\u4e3a\uff1a \" &lt;&lt; s1.size() &lt;&lt; endl;     }  }  //\u4ea4\u6362 void test02() {     set s1;      s1.insert(10);     s1.insert(30);     s1.insert(20);     s1.insert(40);      set s2;      s2.insert(100);     s2.insert(300);     s2.insert(200);     s2.insert(400);      cout &lt;&lt; \"\u4ea4\u6362\u524d\" &lt;&lt; endl;     printSet(s1);     printSet(s2);     cout &lt;&lt; endl;      cout &lt;&lt; \"\u4ea4\u6362\u540e\" &lt;&lt; endl;     s1.swap(s2);     printSet(s1);     printSet(s2); }  int main() {      //test01();      test02();      system(\"pause\");      return 0; } ``` <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u7edf\u8ba1\u5927\u5c0f   --- size</li> <li>\u5224\u65ad\u662f\u5426\u4e3a\u7a7a   --- empty</li> <li>\u4ea4\u6362\u5bb9\u5668   --- swap</li> </ul>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#384-set-set", "title": "3.8.4 set\u63d2\u5165\u548c\u5220\u9664 \u529f\u80fd\u63cf\u8ff0\uff1a * set\u5bb9\u5668\u8fdb\u884c\u63d2\u5165\u6570\u636e\u548c\u5220\u9664\u6570\u636e", "text": "<p>\u51fd\u6570\u539f\u578b\uff1a * <code>insert(elem);</code>           //\u5728\u5bb9\u5668\u4e2d\u63d2\u5165\u5143\u7d20\u3002 * <code>clear();</code>                    //\u6e05\u9664\u6240\u6709\u5143\u7d20 * <code>erase(pos);</code>              //\u5220\u9664pos\u8fed\u4ee3\u5668\u6240\u6307\u7684\u5143\u7d20\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u3002 * <code>erase(beg, end);</code>    //\u5220\u9664\u533a\u95f4[beg,end)\u7684\u6240\u6709\u5143\u7d20 \uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u3002 * <code>erase(elem);</code>            //\u5220\u9664\u5bb9\u5668\u4e2d\u503c\u4e3aelem\u7684\u5143\u7d20\u3002</p> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_32", "title": "include  <p>void printSet(set &amp; s) {     for (set::iterator it = s.begin(); it != s.end(); it++)     {         cout &lt;&lt; *it &lt;&lt; \" \";     }     cout &lt;&lt; endl; } <p>//\u63d2\u5165\u548c\u5220\u9664 void test01() {     set s1;     //\u63d2\u5165     s1.insert(10);     s1.insert(30);     s1.insert(20);     s1.insert(40);     printSet(s1); <pre><code>//\u5220\u9664\ns1.erase(s1.begin());\nprintSet(s1);\n\ns1.erase(30);\nprintSet(s1);\n\n//\u6e05\u7a7a\n//s1.erase(s1.begin(), s1.end());\ns1.clear();\nprintSet(s1);\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1a  * \u63d2\u5165   --- insert * \u5220\u9664   --- erase * \u6e05\u7a7a   --- clear           </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#385-set-set-findkey-keysetend", "title": "3.8.5 set\u67e5\u627e\u548c\u7edf\u8ba1 \u529f\u80fd\u63cf\u8ff0\uff1a * \u5bf9set\u5bb9\u5668\u8fdb\u884c\u67e5\u627e\u6570\u636e\u4ee5\u53ca\u7edf\u8ba1\u6570\u636e \u51fd\u6570\u539f\u578b\uff1a * <code>find(key);</code>                  //\u67e5\u627ekey\u662f\u5426\u5b58\u5728,\u82e5\u5b58\u5728\uff0c\u8fd4\u56de\u8be5\u952e\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff1b\u82e5\u4e0d\u5b58\u5728\uff0c\u8fd4\u56deset.end();", "text": "<ul> <li><code>count(key);</code>                //\u7edf\u8ba1key\u7684\u5143\u7d20\u4e2a\u6570     \u793a\u4f8b\uff1a ```C++</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#include_33", "title": "include  <p>//\u67e5\u627e\u548c\u7edf\u8ba1 void test01() {     set s1;     //\u63d2\u5165     s1.insert(10);     s1.insert(30);     s1.insert(20);     s1.insert(40);      //\u67e5\u627e     set::iterator pos = s1.find(30);      if (pos != s1.end())     {         cout &lt;&lt; \"\u627e\u5230\u4e86\u5143\u7d20 \uff1a \" &lt;&lt; *pos &lt;&lt; endl;     }     else     {         cout &lt;&lt; \"\u672a\u627e\u5230\u5143\u7d20\" &lt;&lt; endl;     }      //\u7edf\u8ba1     int num = s1.count(30);     cout &lt;&lt; \"num = \" &lt;&lt; num &lt;&lt; endl; }  int main() {      test01();      system(\"pause\");      return 0; } ``` <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u67e5\u627e   ---  find    \uff08\u8fd4\u56de\u7684\u662f\u8fed\u4ee3\u5668\uff09</li> <li>\u7edf\u8ba1   ---  count  \uff08\u5bf9\u4e8eset\uff0c\u7ed3\u679c\u4e3a0\u6216\u80051\uff09</li> </ul>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#386-setmultiset-setmultiset-setmultiset", "title": "3.8.6 set\u548cmultiset\u533a\u522b \u5b66\u4e60\u76ee\u6807\uff1a * \u638c\u63e1set\u548cmultiset\u7684\u533a\u522b \u533a\u522b\uff1a * set\u4e0d\u53ef\u4ee5\u63d2\u5165\u91cd\u590d\u6570\u636e\uff0c\u800cmultiset\u53ef\u4ee5", "text": "<ul> <li>set\u63d2\u5165\u6570\u636e\u7684\u540c\u65f6\u4f1a\u8fd4\u56de\u63d2\u5165\u7ed3\u679c\uff0c\u8868\u793a\u63d2\u5165\u662f\u5426\u6210\u529f</li> <li>multiset\u4e0d\u4f1a\u68c0\u6d4b\u6570\u636e\uff0c\u56e0\u6b64\u53ef\u4ee5\u63d2\u5165\u91cd\u590d\u6570\u636e</li> </ul> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_34", "title": "include  <p>//set\u548cmultiset\u533a\u522b void test01() {     set s;     pair::iterator, bool&gt;  ret = s.insert(10);     if (ret.second) {         cout &lt;&lt; \"\u7b2c\u4e00\u6b21\u63d2\u5165\u6210\u529f!\" &lt;&lt; endl;     }     else {         cout &lt;&lt; \"\u7b2c\u4e00\u6b21\u63d2\u5165\u5931\u8d25!\" &lt;&lt; endl;     } <pre><code>ret = s.insert(10);\nif (ret.second) {\n    cout &lt;&lt; \"\u7b2c\u4e8c\u6b21\u63d2\u5165\u6210\u529f!\" &lt;&lt; endl;\n}\nelse {\n    cout &lt;&lt; \"\u7b2c\u4e8c\u6b21\u63d2\u5165\u5931\u8d25!\" &lt;&lt; endl;\n}\n\n//multiset\nmultiset&lt;int&gt; ms;\nms.insert(10);\nms.insert(10);\n\nfor (multiset&lt;int&gt;::iterator it = ms.begin(); it != ms.end(); it++) {\n    cout &lt;&lt; *it &lt;&lt; \" \";\n}\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1a  * \u5982\u679c\u4e0d\u5141\u8bb8\u63d2\u5165\u91cd\u590d\u6570\u636e\u53ef\u4ee5\u5229\u7528set * \u5982\u679c\u9700\u8981\u63d2\u5165\u91cd\u590d\u6570\u636e\u5229\u7528multiset           </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#387-pair-pairtype-type-p-value1-value2", "title": "3.8.7 pair\u5bf9\u7ec4\u521b\u5efa \u529f\u80fd\u63cf\u8ff0\uff1a * \u6210\u5bf9\u51fa\u73b0\u7684\u6570\u636e\uff0c\u5229\u7528\u5bf9\u7ec4\u53ef\u4ee5\u8fd4\u56de\u4e24\u4e2a\u6570\u636e \u4e24\u79cd\u521b\u5efa\u65b9\u5f0f\uff1a * <code>pair&lt;type, type&gt; p ( value1, value2 );</code>", "text": "<ul> <li><code>pair&lt;type, type&gt; p = make_pair( value1, value2 );</code> \u793a\u4f8b\uff1a ```C++</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#include_35", "title": "include  <p>//\u5bf9\u7ec4\u521b\u5efa void test01() {     pair p(string(\"Tom\"), 20);     cout &lt;&lt; \"\u59d3\u540d\uff1a \" &lt;&lt;  p.first &lt;&lt; \" \u5e74\u9f84\uff1a \" &lt;&lt; p.second &lt;&lt; endl;      pair p2 = make_pair(\"Jerry\", 10);     cout &lt;&lt; \"\u59d3\u540d\uff1a \" &lt;&lt; p2.first &lt;&lt; \" \u5e74\u9f84\uff1a \" &lt;&lt; p2.second &lt;&lt; endl; }  int main() {      test01();      system(\"pause\");      return 0; } ``` <p>\u603b\u7ed3\uff1a</p> <p>\u4e24\u79cd\u65b9\u5f0f\u90fd\u53ef\u4ee5\u521b\u5efa\u5bf9\u7ec4\uff0c\u8bb0\u4f4f\u4e00\u79cd\u5373\u53ef</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#388-set", "title": "3.8.8 set\u5bb9\u5668\u6392\u5e8f", "text": "<p>\u5b66\u4e60\u76ee\u6807\uff1a</p> <ul> <li>set\u5bb9\u5668\u9ed8\u8ba4\u6392\u5e8f\u89c4\u5219\u4e3a\u4ece\u5c0f\u5230\u5927\uff0c\u638c\u63e1\u5982\u4f55\u6539\u53d8\u6392\u5e8f\u89c4\u5219</li> </ul> <p>\u4e3b\u8981\u6280\u672f\u70b9\uff1a</p> <ul> <li>\u5229\u7528\u4eff\u51fd\u6570\uff0c\u53ef\u4ee5\u6539\u53d8\u6392\u5e8f\u89c4\u5219 \u793a\u4f8b\u4e00 set\u5b58\u653e\u5185\u7f6e\u6570\u636e\u7c7b\u578b</li> </ul> <pre><code>#include &lt;set&gt;\n\nclass MyCompare \n{\npublic:\n    bool operator()(int v1, int v2) {\n        return v1 &gt; v2;\n    }\n};\nvoid test01() \n{    \n    set&lt;int&gt; s1;\n    s1.insert(10);\n    s1.insert(40);\n    s1.insert(20);\n    s1.insert(30);\n    s1.insert(50);\n\n    //\u9ed8\u8ba4\u4ece\u5c0f\u5230\u5927\n    for (set&lt;int&gt;::iterator it = s1.begin(); it != s1.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n\n    //\u6307\u5b9a\u6392\u5e8f\u89c4\u5219\n    set&lt;int,MyCompare&gt; s2;\n    s2.insert(10);\n    s2.insert(40);\n    s2.insert(20);\n    s2.insert(30);\n    s2.insert(50);\n\n    for (set&lt;int, MyCompare&gt;::iterator it = s2.begin(); it != s2.end(); it++) {\n        cout &lt;&lt; *it &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a\u5229\u7528\u4eff\u51fd\u6570\u53ef\u4ee5\u6307\u5b9aset\u5bb9\u5668\u7684\u6392\u5e8f\u89c4\u5219 \u793a\u4f8b\u4e8c set\u5b58\u653e\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b</p> <pre><code>#include &lt;set&gt;\n#include &lt;string&gt;\n\nclass Person\n{\npublic:\n    Person(string name, int age)\n    {\n        this-&gt;m_Name = name;\n        this-&gt;m_Age = age;\n    }\n\n    string m_Name;\n    int m_Age;\n\n};\nclass comparePerson\n{\npublic:\n    bool operator()(const Person&amp; p1, const Person &amp;p2)\n    {\n        //\u6309\u7167\u5e74\u9f84\u8fdb\u884c\u6392\u5e8f  \u964d\u5e8f\n        return p1.m_Age &gt; p2.m_Age;\n    }\n};\n\nvoid test01()\n{\n    set&lt;Person, comparePerson&gt; s;\n\n    Person p1(\"\u5218\u5907\", 23);\n    Person p2(\"\u5173\u7fbd\", 27);\n    Person p3(\"\u5f20\u98de\", 25);\n    Person p4(\"\u8d75\u4e91\", 21);\n\n    s.insert(p1);\n    s.insert(p2);\n    s.insert(p3);\n    s.insert(p4);\n\n    for (set&lt;Person, comparePerson&gt;::iterator it = s.begin(); it != s.end(); it++)\n    {\n        cout &lt;&lt; \"\u59d3\u540d\uff1a \" &lt;&lt; it-&gt;m_Name &lt;&lt; \" \u5e74\u9f84\uff1a \" &lt;&lt; it-&gt;m_Age &lt;&lt; endl;\n    }\n}\nint main() {\n\n    test01();\n\n    system(\"pause\");\n\n    return 0;\n}\n</code></pre> <p>\u603b\u7ed3\uff1a</p> <p>\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\uff0cset\u5fc5\u987b\u6307\u5b9a\u6392\u5e8f\u89c4\u5219\u624d\u53ef\u4ee5\u63d2\u5165\u6570\u636e</p>"}, {"location": "record/algo/code/cpp/02_advance/#39-map-multimap", "title": "3.9 map/ multimap\u5bb9\u5668", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#391-map-mappair", "title": "3.9.1 map\u57fa\u672c\u6982\u5ff5 \u7b80\u4ecb\uff1a * map\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u662fpair", "text": "<ul> <li>pair\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3akey\uff08\u952e\u503c\uff09\uff0c\u8d77\u5230\u7d22\u5f15\u4f5c\u7528\uff0c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u4e3avalue\uff08\u5b9e\u503c\uff09</li> <li>\u6240\u6709\u5143\u7d20\u90fd\u4f1a\u6839\u636e\u5143\u7d20\u7684\u952e\u503c\u81ea\u52a8\u6392\u5e8f</li> </ul> <p>\u672c\u8d28\uff1a * map/multimap\u5c5e\u4e8e \u5173\u8054\u5f0f\u5bb9\u5668 \uff0c\u5e95\u5c42\u7ed3\u6784\u662f\u7528\u4e8c\u53c9\u6811\u5b9e\u73b0\u3002 \u4f18\u70b9\uff1a * \u53ef\u4ee5\u6839\u636ekey\u503c\u5feb\u901f\u627e\u5230value\u503c</p> <p>map\u548cmultimap \u533a\u522b \uff1a</p> <ul> <li>map\u4e0d\u5141\u8bb8\u5bb9\u5668\u4e2d\u6709\u91cd\u590dkey\u503c\u5143\u7d20</li> <li>multimap\u5141\u8bb8\u5bb9\u5668\u4e2d\u6709\u91cd\u590dkey\u503c\u5143\u7d20</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#392-map-map-mapt1-t2-mp-map", "title": "3.9.2  map\u6784\u9020\u548c\u8d4b\u503c \u529f\u80fd\u63cf\u8ff0\uff1a * \u5bf9map\u5bb9\u5668\u8fdb\u884c\u6784\u9020\u548c\u8d4b\u503c\u64cd\u4f5c \u51fd\u6570\u539f\u578b\uff1a \u6784\u9020\uff1a * <code>map&lt;T1, T2&gt; mp;</code>                     //map\u9ed8\u8ba4\u6784\u9020\u51fd\u6570:", "text": "<ul> <li><code>map(const map &amp;mp);</code>             //\u62f7\u8d1d\u6784\u9020\u51fd\u6570 \u8d4b\u503c\uff1a * <code>map&amp; operator=(const map &amp;mp);</code>    //\u91cd\u8f7d\u7b49\u53f7\u64cd\u4f5c\u7b26</li> </ul> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_36", "title": "include  <p>void printMap(map&amp;m) {     for (map::iterator it = m.begin(); it != m.end(); it++)     {         cout &lt;&lt; \"key = \" &lt;&lt; it-&gt;first &lt;&lt; \" value = \" &lt;&lt; it-&gt;second &lt;&lt; endl;     }     cout &lt;&lt; endl; } <p>void test01() {     mapm; //\u9ed8\u8ba4\u6784\u9020     m.insert(pair(1, 10));     m.insert(pair(2, 20));     m.insert(pair(3, 30));     printMap(m); <pre><code>map&lt;int, int&gt;m2(m); //\u62f7\u8d1d\u6784\u9020\nprintMap(m2);\n\nmap&lt;int, int&gt;m3;\nm3 = m2; //\u8d4b\u503c\nprintMap(m3);\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1amap\u4e2d\u6240\u6709\u5143\u7d20\u90fd\u662f\u6210\u5bf9\u51fa\u73b0\uff0c\u63d2\u5165\u6570\u636e\u65f6\u5019\u8981\u4f7f\u7528\u5bf9\u7ec4           </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#393-map-mapmap", "title": "3.9.3 map\u5927\u5c0f\u548c\u4ea4\u6362 \u529f\u80fd\u63cf\u8ff0\uff1a * \u7edf\u8ba1map\u5bb9\u5668\u5927\u5c0f\u4ee5\u53ca\u4ea4\u6362map\u5bb9\u5668", "text": "<p>\u51fd\u6570\u539f\u578b\uff1a  - <code>size();</code>          //\u8fd4\u56de\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u6570\u76ee - <code>empty();</code>        //\u5224\u65ad\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a - <code>swap(st);</code>      //\u4ea4\u6362\u4e24\u4e2a\u96c6\u5408\u5bb9\u5668     \u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_37", "title": "include  <p>void printMap(map&amp;m) {     for (map::iterator it = m.begin(); it != m.end(); it++)     {         cout &lt;&lt; \"key = \" &lt;&lt; it-&gt;first &lt;&lt; \" value = \" &lt;&lt; it-&gt;second &lt;&lt; endl;     }     cout &lt;&lt; endl; }  void test01() {     mapm;     m.insert(pair(1, 10));     m.insert(pair(2, 20));     m.insert(pair(3, 30));      if (m.empty())     {         cout &lt;&lt; \"m\u4e3a\u7a7a\" &lt;&lt; endl;     }     else     {         cout &lt;&lt; \"m\u4e0d\u4e3a\u7a7a\" &lt;&lt; endl;         cout &lt;&lt; \"m\u7684\u5927\u5c0f\u4e3a\uff1a \" &lt;&lt; m.size() &lt;&lt; endl;     } }   //\u4ea4\u6362 void test02() {     mapm;     m.insert(pair(1, 10));     m.insert(pair(2, 20));     m.insert(pair(3, 30));      mapm2;     m2.insert(pair(4, 100));     m2.insert(pair(5, 200));     m2.insert(pair(6, 300));      cout &lt;&lt; \"\u4ea4\u6362\u524d\" &lt;&lt; endl;     printMap(m);     printMap(m2);      cout &lt;&lt; \"\u4ea4\u6362\u540e\" &lt;&lt; endl;     m.swap(m2);     printMap(m);     printMap(m2); }  int main() {      test01();      test02();      system(\"pause\");      return 0; } ``` <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u7edf\u8ba1\u5927\u5c0f   --- size</li> <li>\u5224\u65ad\u662f\u5426\u4e3a\u7a7a   --- empty</li> <li>\u4ea4\u6362\u5bb9\u5668   --- swap</li> </ul>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#394-map-map", "title": "3.9.4 map\u63d2\u5165\u548c\u5220\u9664 \u529f\u80fd\u63cf\u8ff0\uff1a - map\u5bb9\u5668\u8fdb\u884c\u63d2\u5165\u6570\u636e\u548c\u5220\u9664\u6570\u636e", "text": "<p>\u51fd\u6570\u539f\u578b\uff1a - <code>insert(elem);</code>           //\u5728\u5bb9\u5668\u4e2d\u63d2\u5165\u5143\u7d20\u3002 - <code>clear();</code>                    //\u6e05\u9664\u6240\u6709\u5143\u7d20 - <code>erase(pos);</code>              //\u5220\u9664pos\u8fed\u4ee3\u5668\u6240\u6307\u7684\u5143\u7d20\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u3002 - <code>erase(beg, end);</code>    //\u5220\u9664\u533a\u95f4[beg,end)\u7684\u6240\u6709\u5143\u7d20 \uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u3002 - <code>erase(key);</code>            //\u5220\u9664\u5bb9\u5668\u4e2d\u503c\u4e3akey\u7684\u5143\u7d20\u3002</p> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_38", "title": "include  <p>void printMap(map&amp;m) {     for (map::iterator it = m.begin(); it != m.end(); it++)     {         cout &lt;&lt; \"key = \" &lt;&lt; it-&gt;first &lt;&lt; \" value = \" &lt;&lt; it-&gt;second &lt;&lt; endl;     }     cout &lt;&lt; endl; } <p>void test01() {     //\u63d2\u5165     map m;     //\u7b2c\u4e00\u79cd\u63d2\u5165\u65b9\u5f0f     m.insert(pair(1, 10));     //\u7b2c\u4e8c\u79cd\u63d2\u5165\u65b9\u5f0f     m.insert(make_pair(2, 20));     //\u7b2c\u4e09\u79cd\u63d2\u5165\u65b9\u5f0f     m.insert(map::value_type(3, 30));     //\u7b2c\u56db\u79cd\u63d2\u5165\u65b9\u5f0f     m[4] = 40;      printMap(m); <pre><code>//\u5220\u9664\nm.erase(m.begin());\nprintMap(m);\n\nm.erase(3);\nprintMap(m);\n\n//\u6e05\u7a7a\nm.erase(m.begin(),m.end());\nm.clear();\nprintMap(m);\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1a  * map\u63d2\u5165\u65b9\u5f0f\u5f88\u591a\uff0c\u8bb0\u4f4f\u5176\u4e00\u5373\u53ef  - \u63d2\u5165   --- insert  - \u5220\u9664   --- erase - \u6e05\u7a7a   --- clear             </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#395-map-map-findkey-keysetend", "title": "3.9.5 map\u67e5\u627e\u548c\u7edf\u8ba1 \u529f\u80fd\u63cf\u8ff0\uff1a - \u5bf9map\u5bb9\u5668\u8fdb\u884c\u67e5\u627e\u6570\u636e\u4ee5\u53ca\u7edf\u8ba1\u6570\u636e \u51fd\u6570\u539f\u578b\uff1a - <code>find(key);</code>                  //\u67e5\u627ekey\u662f\u5426\u5b58\u5728,\u82e5\u5b58\u5728\uff0c\u8fd4\u56de\u8be5\u952e\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff1b\u82e5\u4e0d\u5b58\u5728\uff0c\u8fd4\u56deset.end();", "text": "<ul> <li><code>count(key);</code>                //\u7edf\u8ba1key\u7684\u5143\u7d20\u4e2a\u6570   \u793a\u4f8b\uff1a ```C++</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#include_39", "title": "include  <p>//\u67e5\u627e\u548c\u7edf\u8ba1 void test01() {     mapm;      m.insert(pair(1, 10));     m.insert(pair(2, 20));     m.insert(pair(3, 30));      //\u67e5\u627e     map::iterator pos = m.find(3);      if (pos != m.end())     {         cout &lt;&lt; \"\u627e\u5230\u4e86\u5143\u7d20 key = \" &lt;&lt; (*pos).first &lt;&lt; \" value = \" &lt;&lt; (*pos).second &lt;&lt; endl;     }     else     {         cout &lt;&lt; \"\u672a\u627e\u5230\u5143\u7d20\" &lt;&lt; endl;     }      //\u7edf\u8ba1     int num = m.count(3);     cout &lt;&lt; \"num = \" &lt;&lt; num &lt;&lt; endl; }  int main() {      test01();      system(\"pause\");      return 0; } ``` <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u67e5\u627e   ---  find    \uff08\u8fd4\u56de\u7684\u662f\u8fed\u4ee3\u5668\uff09</li> <li>\u7edf\u8ba1   ---  count  \uff08\u5bf9\u4e8emap\uff0c\u7ed3\u679c\u4e3a0\u6216\u80051\uff09</li> </ul>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#396-map-map-key-", "title": "3.9.6 map\u5bb9\u5668\u6392\u5e8f \u5b66\u4e60\u76ee\u6807\uff1a - map\u5bb9\u5668\u9ed8\u8ba4\u6392\u5e8f\u89c4\u5219\u4e3a \u6309\u7167key\u503c\u8fdb\u884c \u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u638c\u63e1\u5982\u4f55\u6539\u53d8\u6392\u5e8f\u89c4\u5219 \u4e3b\u8981\u6280\u672f\u70b9: - \u5229\u7528\u4eff\u51fd\u6570\uff0c\u53ef\u4ee5\u6539\u53d8\u6392\u5e8f\u89c4\u5219", "text": "<p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_40", "title": "include  <p>class MyCompare { public:     bool operator()(int v1, int v2) {         return v1 &gt; v2;     } };</p> <p>void test01()  {     //\u9ed8\u8ba4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f     //\u5229\u7528\u4eff\u51fd\u6570\u5b9e\u73b0\u4ece\u5927\u5230\u5c0f\u6392\u5e8f     map m; <pre><code>m.insert(make_pair(1, 10));\nm.insert(make_pair(2, 20));\nm.insert(make_pair(3, 30));\nm.insert(make_pair(4, 40));\nm.insert(make_pair(5, 50));\n\nfor (map&lt;int, int, MyCompare&gt;::iterator it = m.begin(); it != m.end(); it++) {\n    cout &lt;&lt; \"key:\" &lt;&lt; it-&gt;first &lt;&lt; \" value:\" &lt;&lt; it-&gt;second &lt;&lt; endl;\n}\n</code></pre> <p>} int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1a  * \u5229\u7528\u4eff\u51fd\u6570\u53ef\u4ee5\u6307\u5b9amap\u5bb9\u5668\u7684\u6392\u5e8f\u89c4\u5219 * \u5bf9\u4e8e\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\uff0cmap\u5fc5\u987b\u8981\u6307\u5b9a\u6392\u5e8f\u89c4\u5219,\u540cset\u5bb9\u5668             </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#310-", "title": "3.10 \u6848\u4f8b-\u5458\u5de5\u5206\u7ec4", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#3101", "title": "3.10.1 \u6848\u4f8b\u63cf\u8ff0", "text": "<ul> <li>\u516c\u53f8\u4eca\u5929\u62db\u8058\u4e8610\u4e2a\u5458\u5de5\uff08ABCDEFGHIJ\uff09\uff0c10\u540d\u5458\u5de5\u8fdb\u5165\u516c\u53f8\u4e4b\u540e\uff0c\u9700\u8981\u6307\u6d3e\u5458\u5de5\u5728\u90a3\u4e2a\u90e8\u95e8\u5de5\u4f5c</li> <li>\u5458\u5de5\u4fe1\u606f\u6709: \u59d3\u540d  \u5de5\u8d44\u7ec4\u6210\uff1b\u90e8\u95e8\u5206\u4e3a\uff1a\u7b56\u5212\u3001\u7f8e\u672f\u3001\u7814\u53d1</li> <li>\u968f\u673a\u7ed910\u540d\u5458\u5de5\u5206\u914d\u90e8\u95e8\u548c\u5de5\u8d44</li> <li>\u901a\u8fc7multimap\u8fdb\u884c\u4fe1\u606f\u7684\u63d2\u5165  key(\u90e8\u95e8\u7f16\u53f7) value(\u5458\u5de5)</li> <li>\u5206\u90e8\u95e8\u663e\u793a\u5458\u5de5\u4fe1\u606f     </li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#3102", "title": "3.10.2 \u5b9e\u73b0\u6b65\u9aa4", "text": "<ol> <li>\u521b\u5efa10\u540d\u5458\u5de5\uff0c\u653e\u5230vector\u4e2d</li> <li>\u904d\u5386vector\u5bb9\u5668\uff0c\u53d6\u51fa\u6bcf\u4e2a\u5458\u5de5\uff0c\u8fdb\u884c\u968f\u673a\u5206\u7ec4</li> <li>\u5206\u7ec4\u540e\uff0c\u5c06\u5458\u5de5\u90e8\u95e8\u7f16\u53f7\u4f5c\u4e3akey\uff0c\u5177\u4f53\u5458\u5de5\u4f5c\u4e3avalue\uff0c\u653e\u5165\u5230multimap\u5bb9\u5668\u4e2d</li> <li>\u5206\u90e8\u95e8\u663e\u793a\u5458\u5de5\u4fe1\u606f \u6848\u4f8b\u4ee3\u7801\uff1a ```C++</li> </ol>"}, {"location": "record/algo/code/cpp/02_advance/#include_41", "title": "include <p>using namespace std;</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_42", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_43", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_44", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_45", "title": "include  <p>/* - \u516c\u53f8\u4eca\u5929\u62db\u8058\u4e8610\u4e2a\u5458\u5de5\uff08ABCDEFGHIJ\uff09\uff0c10\u540d\u5458\u5de5\u8fdb\u5165\u516c\u53f8\u4e4b\u540e\uff0c\u9700\u8981\u6307\u6d3e\u5458\u5de5\u5728\u90a3\u4e2a\u90e8\u95e8\u5de5\u4f5c - \u5458\u5de5\u4fe1\u606f\u6709: \u59d3\u540d  \u5de5\u8d44\u7ec4\u6210\uff1b\u90e8\u95e8\u5206\u4e3a\uff1a\u7b56\u5212\u3001\u7f8e\u672f\u3001\u7814\u53d1 - \u968f\u673a\u7ed910\u540d\u5458\u5de5\u5206\u914d\u90e8\u95e8\u548c\u5de5\u8d44 - \u901a\u8fc7multimap\u8fdb\u884c\u4fe1\u606f\u7684\u63d2\u5165  key(\u90e8\u95e8\u7f16\u53f7) value(\u5458\u5de5) - \u5206\u90e8\u95e8\u663e\u793a\u5458\u5de5\u4fe1\u606f */ </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#define-cehua-0", "title": "define CEHUA  0", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#define-meishu-1", "title": "define MEISHU 1", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#define-yanfa-2", "title": "define YANFA  2 <p>class Worker { public:     string m_Name;     int m_Salary; };  void createWorker(vector&amp;v) {     string nameSeed = \"ABCDEFGHIJ\";     for (int i = 0; i &lt; 10; i++)     {         Worker worker;         worker.m_Name = \"\u5458\u5de5\";         worker.m_Name += nameSeed[i];          worker.m_Salary = rand() % 10000 + 10000; // 10000 ~ 19999         //\u5c06\u5458\u5de5\u653e\u5165\u5230\u5bb9\u5668\u4e2d         v.push_back(worker);     } }  //\u5458\u5de5\u5206\u7ec4 void setGroup(vector&amp;v,multimap&amp;m) {     for (vector::iterator it = v.begin(); it != v.end(); it++)     {         //\u4ea7\u751f\u968f\u673a\u90e8\u95e8\u7f16\u53f7         int deptId = rand() % 3; // 0 1 2           //\u5c06\u5458\u5de5\u63d2\u5165\u5230\u5206\u7ec4\u4e2d         //key\u90e8\u95e8\u7f16\u53f7\uff0cvalue\u5177\u4f53\u5458\u5de5         m.insert(make_pair(deptId, *it));     } }  void showWorkerByGourp(multimap&amp;m) {     // 0  A  B  C   1  D  E   2  F G ...     cout &lt;&lt; \"\u7b56\u5212\u90e8\u95e8\uff1a\" &lt;&lt; endl;      multimap::iterator pos = m.find(CEHUA);     int count = m.count(CEHUA); // \u7edf\u8ba1\u5177\u4f53\u4eba\u6570     int index = 0;     for (; pos != m.end() &amp;&amp; index &lt; count; pos++ , index++)     {         cout &lt;&lt; \"\u59d3\u540d\uff1a \" &lt;&lt; pos-&gt;second.m_Name &lt;&lt; \" \u5de5\u8d44\uff1a \" &lt;&lt; pos-&gt;second.m_Salary &lt;&lt; endl;     }      cout &lt;&lt; \"----------------------\" &lt;&lt; endl;     cout &lt;&lt; \"\u7f8e\u672f\u90e8\u95e8\uff1a \" &lt;&lt; endl;     pos = m.find(MEISHU);     count = m.count(MEISHU); // \u7edf\u8ba1\u5177\u4f53\u4eba\u6570     index = 0;     for (; pos != m.end() &amp;&amp; index &lt; count; pos++, index++)     {         cout &lt;&lt; \"\u59d3\u540d\uff1a \" &lt;&lt; pos-&gt;second.m_Name &lt;&lt; \" \u5de5\u8d44\uff1a \" &lt;&lt; pos-&gt;second.m_Salary &lt;&lt; endl;     }      cout &lt;&lt; \"----------------------\" &lt;&lt; endl;     cout &lt;&lt; \"\u7814\u53d1\u90e8\u95e8\uff1a \" &lt;&lt; endl;     pos = m.find(YANFA);     count = m.count(YANFA); // \u7edf\u8ba1\u5177\u4f53\u4eba\u6570     index = 0;     for (; pos != m.end() &amp;&amp; index &lt; count; pos++, index++)     {         cout &lt;&lt; \"\u59d3\u540d\uff1a \" &lt;&lt; pos-&gt;second.m_Name &lt;&lt; \" \u5de5\u8d44\uff1a \" &lt;&lt; pos-&gt;second.m_Salary &lt;&lt; endl;     }  }  int main() {      srand((unsigned int)time(NULL));      //1\u3001\u521b\u5efa\u5458\u5de5     vectorvWorker;     createWorker(vWorker);      //2\u3001\u5458\u5de5\u5206\u7ec4     multimapmWorker;     setGroup(vWorker, mWorker);       //3\u3001\u5206\u7ec4\u663e\u793a\u5458\u5de5     showWorkerByGourp(mWorker);      ////\u6d4b\u8bd5     //for (vector::iterator it = vWorker.begin(); it != vWorker.end(); it++)     //{     //  cout &lt;&lt; \"\u59d3\u540d\uff1a \" &lt;&lt; it-&gt;m_Name &lt;&lt; \" \u5de5\u8d44\uff1a \" &lt;&lt; it-&gt;m_Salary &lt;&lt; endl;     //}      system(\"pause\");      return 0; } ``` <p>\u603b\u7ed3\uff1a</p> <ul> <li>\u5f53\u6570\u636e\u4ee5\u952e\u503c\u5bf9\u5f62\u5f0f\u5b58\u5728\uff0c\u53ef\u4ee5\u8003\u8651\u7528map \u6216 multimap</li> </ul>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#4-stl-", "title": "4 STL- \u51fd\u6570\u5bf9\u8c61", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#41", "title": "4.1 \u51fd\u6570\u5bf9\u8c61", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#411", "title": "4.1.1 \u51fd\u6570\u5bf9\u8c61\u6982\u5ff5 \u6982\u5ff5\uff1a * \u91cd\u8f7d \u51fd\u6570\u8c03\u7528\u64cd\u4f5c\u7b26 \u7684\u7c7b\uff0c\u5176\u5bf9\u8c61\u5e38\u79f0\u4e3a \u51fd\u6570\u5bf9\u8c61 * \u51fd\u6570\u5bf9\u8c61 \u4f7f\u7528\u91cd\u8f7d\u7684()\u65f6\uff0c\u884c\u4e3a\u7c7b\u4f3c\u51fd\u6570\u8c03\u7528\uff0c\u4e5f\u53eb \u4eff\u51fd\u6570", "text": "<p>\u672c\u8d28\uff1a \u51fd\u6570\u5bf9\u8c61(\u4eff\u51fd\u6570)\u662f\u4e00\u4e2a \u7c7b \uff0c\u4e0d\u662f\u4e00\u4e2a\u51fd\u6570</p>"}, {"location": "record/algo/code/cpp/02_advance/#412", "title": "4.1.2  \u51fd\u6570\u5bf9\u8c61\u4f7f\u7528 \u7279\u70b9\uff1a * \u51fd\u6570\u5bf9\u8c61\u5728\u4f7f\u7528\u65f6\uff0c\u53ef\u4ee5\u50cf\u666e\u901a\u51fd\u6570\u90a3\u6837\u8c03\u7528, \u53ef\u4ee5\u6709\u53c2\u6570\uff0c\u53ef\u4ee5\u6709\u8fd4\u56de\u503c", "text": "<ul> <li>\u51fd\u6570\u5bf9\u8c61\u8d85\u51fa\u666e\u901a\u51fd\u6570\u7684\u6982\u5ff5\uff0c\u51fd\u6570\u5bf9\u8c61\u53ef\u4ee5\u6709\u81ea\u5df1\u7684\u72b6\u6001</li> <li>\u51fd\u6570\u5bf9\u8c61\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012 \u793a\u4f8b: ```C++</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#include_46", "title": "include  <p>//1\u3001\u51fd\u6570\u5bf9\u8c61\u5728\u4f7f\u7528\u65f6\uff0c\u53ef\u4ee5\u50cf\u666e\u901a\u51fd\u6570\u90a3\u6837\u8c03\u7528, \u53ef\u4ee5\u6709\u53c2\u6570\uff0c\u53ef\u4ee5\u6709\u8fd4\u56de\u503c class MyAdd { public :     int operator()(int v1,int v2)     {         return v1 + v2;     } };</p> <p>void test01() {     MyAdd myAdd;     cout &lt;&lt; myAdd(10, 10) &lt;&lt; endl; }</p> <p>//2\u3001\u51fd\u6570\u5bf9\u8c61\u53ef\u4ee5\u6709\u81ea\u5df1\u7684\u72b6\u6001 class MyPrint { public:     MyPrint()     {         count = 0;     }     void operator()(string test)     {         cout &lt;&lt; test &lt;&lt; endl;         count++; //\u7edf\u8ba1\u4f7f\u7528\u6b21\u6570     }</p> <pre><code>int count; //\u5185\u90e8\u81ea\u5df1\u7684\u72b6\u6001\n</code></pre> <p>}; void test02() {     MyPrint myPrint;     myPrint(\"hello world\");     myPrint(\"hello world\");     myPrint(\"hello world\");     cout &lt;&lt; \"myPrint\u8c03\u7528\u6b21\u6570\u4e3a\uff1a \" &lt;&lt; myPrint.count &lt;&lt; endl; }</p> <p>//3\u3001\u51fd\u6570\u5bf9\u8c61\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012 void doPrint(MyPrint &amp;mp , string test) {     mp(test); }</p> <p>void test03() {     MyPrint myPrint;     doPrint(myPrint, \"Hello C++\"); }</p> <p>int main() {</p> <pre><code>//test01();\n//test02();\ntest03();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1a  * \u4eff\u51fd\u6570\u5199\u6cd5\u975e\u5e38\u7075\u6d3b\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u8fdb\u884c\u4f20\u9012\u3002 </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#42", "title": "4.2  \u8c13\u8bcd", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#421-bool-operator", "title": "4.2.1 \u8c13\u8bcd\u6982\u5ff5 \u6982\u5ff5\uff1a * \u8fd4\u56debool\u7c7b\u578b\u7684\u4eff\u51fd\u6570\u79f0\u4e3a \u8c13\u8bcd * \u5982\u679coperator()\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570\uff0c\u90a3\u4e48\u53eb\u505a\u4e00\u5143\u8c13\u8bcd", "text": "<ul> <li>\u5982\u679coperator()\u63a5\u53d7\u4e24\u4e2a\u53c2\u6570\uff0c\u90a3\u4e48\u53eb\u505a\u4e8c\u5143\u8c13\u8bcd </li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#422-c", "title": "4.2.2 \u4e00\u5143\u8c13\u8bcd \u793a\u4f8b\uff1a ```C++", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_47", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_48", "title": "include  <p>//1.\u4e00\u5143\u8c13\u8bcd struct GreaterFive{     bool operator()(int val) {         return val &gt; 5;     } };  void test01() {      vector v;     for (int i = 0; i &lt; 10; i++)     {         v.push_back(i);     }      vector::iterator it = find_if(v.begin(), v.end(), GreaterFive());     if (it == v.end()) {         cout &lt;&lt; \"\u6ca1\u627e\u5230!\" &lt;&lt; endl;     }     else {         cout &lt;&lt; \"\u627e\u5230:\" &lt;&lt; *it &lt;&lt; endl;     }  }  int main() {      test01();      system(\"pause\");      return 0; } ``` <p>\u603b\u7ed3\uff1a\u53c2\u6570\u53ea\u6709\u4e00\u4e2a\u7684\u8c13\u8bcd\uff0c\u79f0\u4e3a\u4e00\u5143\u8c13\u8bcd</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#423-c", "title": "4.2.3 \u4e8c\u5143\u8c13\u8bcd \u793a\u4f8b\uff1a ```C++", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_49", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_50", "title": "include  <p>//\u4e8c\u5143\u8c13\u8bcd class MyCompare { public:     bool operator()(int num1, int num2)     {         return num1 &gt; num2;     } };</p> <p>void test01() {     vector v;     v.push_back(10);     v.push_back(40);     v.push_back(20);     v.push_back(30);     v.push_back(50); <pre><code>//\u9ed8\u8ba4\u4ece\u5c0f\u5230\u5927\nsort(v.begin(), v.end());\nfor (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++)\n{\n    cout &lt;&lt; *it &lt;&lt; \" \";\n}\ncout &lt;&lt; endl;\ncout &lt;&lt; \"----------------------------\" &lt;&lt; endl;\n\n//\u4f7f\u7528\u51fd\u6570\u5bf9\u8c61\u6539\u53d8\u7b97\u6cd5\u7b56\u7565\uff0c\u6392\u5e8f\u4ece\u5927\u5230\u5c0f\nsort(v.begin(), v.end(), MyCompare());\nfor (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++)\n{\n    cout &lt;&lt; *it &lt;&lt; \" \";\n}\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1a\u53c2\u6570\u53ea\u6709\u4e24\u4e2a\u7684\u8c13\u8bcd\uff0c\u79f0\u4e3a\u4e8c\u5143\u8c13\u8bcd </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#43", "title": "4.3 \u5185\u5efa\u51fd\u6570\u5bf9\u8c61", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#431-stl", "title": "4.3.1 \u5185\u5efa\u51fd\u6570\u5bf9\u8c61\u610f\u4e49 \u6982\u5ff5\uff1a * STL\u5185\u5efa\u4e86\u4e00\u4e9b\u51fd\u6570\u5bf9\u8c61 \u5206\u7c7b: * \u7b97\u672f\u4eff\u51fd\u6570", "text": "<ul> <li>\u5173\u7cfb\u4eff\u51fd\u6570 </li> <li>\u903b\u8f91\u4eff\u51fd\u6570 \u7528\u6cd5\uff1a * \u8fd9\u4e9b\u4eff\u51fd\u6570\u6240\u4ea7\u751f\u7684\u5bf9\u8c61\uff0c\u7528\u6cd5\u548c\u4e00\u822c\u51fd\u6570\u5b8c\u5168\u76f8\u540c</li> <li>\u4f7f\u7528\u5185\u5efa\u51fd\u6570\u5bf9\u8c61\uff0c\u9700\u8981\u5f15\u5165\u5934\u6587\u4ef6 <code>#include&lt;functional&gt;</code> </li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#432", "title": "4.3.2 \u7b97\u672f\u4eff\u51fd\u6570 \u529f\u80fd\u63cf\u8ff0\uff1a * \u5b9e\u73b0\u56db\u5219\u8fd0\u7b97", "text": "<ul> <li>\u5176\u4e2dnegate\u662f\u4e00\u5143\u8fd0\u7b97\uff0c\u5176\u4ed6\u90fd\u662f\u4e8c\u5143\u8fd0\u7b97 \u4eff\u51fd\u6570\u539f\u578b\uff1a * <code>template&lt;class T&gt; T plus&lt;T&gt;</code>                //\u52a0\u6cd5\u4eff\u51fd\u6570</li> <li><code>template&lt;class T&gt; T minus&lt;T&gt;</code>              //\u51cf\u6cd5\u4eff\u51fd\u6570</li> <li><code>template&lt;class T&gt; T multiplies&lt;T&gt;</code>    //\u4e58\u6cd5\u4eff\u51fd\u6570</li> <li><code>template&lt;class T&gt; T divides&lt;T&gt;</code>         //\u9664\u6cd5\u4eff\u51fd\u6570</li> <li><code>template&lt;class T&gt; T modulus&lt;T&gt;</code>         //\u53d6\u6a21\u4eff\u51fd\u6570</li> <li><code>template&lt;class T&gt; T negate&lt;T&gt;</code>           //\u53d6\u53cd\u4eff\u51fd\u6570 \u793a\u4f8b\uff1a ```C++</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#include_51", "title": "include  <p>//negate void test01() {     negate n;     cout &lt;&lt; n(50) &lt;&lt; endl; }  //plus void test02() {     plus p;     cout &lt;&lt; p(10, 20) &lt;&lt; endl; }  int main() {      test01();     test02();      system(\"pause\");      return 0; } ``` <p>\u603b\u7ed3\uff1a\u4f7f\u7528\u5185\u5efa\u51fd\u6570\u5bf9\u8c61\u65f6\uff0c\u9700\u8981\u5f15\u5165\u5934\u6587\u4ef6 <code>#include &lt;functional&gt;</code>\u3002</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#433-templateclass-t-bool-equal_tot", "title": "4.3.3 \u5173\u7cfb\u4eff\u51fd\u6570 \u529f\u80fd\u63cf\u8ff0\uff1a - \u5b9e\u73b0\u5173\u7cfb\u5bf9\u6bd4 \u4eff\u51fd\u6570\u539f\u578b\uff1a * <code>template&lt;class T&gt; bool equal_to&lt;T&gt;</code>                    //\u7b49\u4e8e", "text": "<ul> <li><code>template&lt;class T&gt; bool not_equal_to&lt;T&gt;</code>            //\u4e0d\u7b49\u4e8e</li> <li><code>template&lt;class T&gt; bool greater&lt;T&gt;</code>                      //\u5927\u4e8e</li> <li><code>template&lt;class T&gt; bool greater_equal&lt;T&gt;</code>          //\u5927\u4e8e\u7b49\u4e8e</li> <li><code>template&lt;class T&gt; bool less&lt;T&gt;</code>                           //\u5c0f\u4e8e</li> <li><code>template&lt;class T&gt; bool less_equal&lt;T&gt;</code>               //\u5c0f\u4e8e\u7b49\u4e8e \u793a\u4f8b\uff1a ```C++</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#include_52", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_53", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_54", "title": "include  <p>class MyCompare { public:     bool operator()(int v1,int v2)     {         return v1 &gt; v2;     } }; void test01() {     vector v; <pre><code>v.push_back(10);\nv.push_back(30);\nv.push_back(50);\nv.push_back(40);\nv.push_back(20);\n\nfor (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) {\n    cout &lt;&lt; *it &lt;&lt; \" \";\n}\ncout &lt;&lt; endl;\n\n//\u81ea\u5df1\u5b9e\u73b0\u4eff\u51fd\u6570\n//sort(v.begin(), v.end(), MyCompare());\n//STL\u5185\u5efa\u4eff\u51fd\u6570  \u5927\u4e8e\u4eff\u51fd\u6570\nsort(v.begin(), v.end(), greater&lt;int&gt;());\n\nfor (vector&lt;int&gt;::iterator it = v.begin(); it != v.end(); it++) {\n    cout &lt;&lt; *it &lt;&lt; \" \";\n}\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ```  \u603b\u7ed3\uff1a\u5173\u7cfb\u4eff\u51fd\u6570\u4e2d\u6700\u5e38\u7528\u7684\u5c31\u662fgreater&lt;&gt;\u5927\u4e8e </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#434-templateclass-t-bool-logical_andt", "title": "4.3.4 \u903b\u8f91\u4eff\u51fd\u6570 \u529f\u80fd\u63cf\u8ff0\uff1a - \u5b9e\u73b0\u903b\u8f91\u8fd0\u7b97 \u51fd\u6570\u539f\u578b\uff1a * <code>template&lt;class T&gt; bool logical_and&lt;T&gt;</code>              //\u903b\u8f91\u4e0e", "text": "<ul> <li><code>template&lt;class T&gt; bool logical_or&lt;T&gt;</code>                //\u903b\u8f91\u6216</li> <li><code>template&lt;class T&gt; bool logical_not&lt;T&gt;</code>              //\u903b\u8f91\u975e \u793a\u4f8b\uff1a ```C++</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#include_55", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_56", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_57", "title": "include  <p>void test01() {     vector v;     v.push_back(true);     v.push_back(false);     v.push_back(true);     v.push_back(false);      for (vector::iterator it = v.begin();it!= v.end();it++)     {         cout &lt;&lt; *it &lt;&lt; \" \";     }     cout &lt;&lt; endl;      //\u903b\u8f91\u975e  \u5c06v\u5bb9\u5668\u642c\u8fd0\u5230v2\u4e2d\uff0c\u5e76\u6267\u884c\u903b\u8f91\u975e\u8fd0\u7b97     vector v2;     v2.resize(v.size());     transform(v.begin(), v.end(),  v2.begin(), logical_not());     for (vector::iterator it = v2.begin(); it != v2.end(); it++)     {         cout &lt;&lt; *it &lt;&lt; \" \";     }     cout &lt;&lt; endl; }  int main() {      test01();      system(\"pause\");      return 0; } ``` <p>\u603b\u7ed3\uff1a\u903b\u8f91\u4eff\u51fd\u6570\u5b9e\u9645\u5e94\u7528\u8f83\u5c11\uff0c\u4e86\u89e3\u5373\u53ef</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#5-stl-", "title": "5 STL- \u5e38\u7528\u7b97\u6cd5 \u6982\u8ff0 :", "text": "<ul> <li> <p>\u7b97\u6cd5\u4e3b\u8981\u662f\u7531\u5934\u6587\u4ef6<code>&lt;algorithm&gt;</code> <code>&lt;functional&gt;</code> <code>&lt;numeric&gt;</code>\u7ec4\u6210\u3002</p> </li> <li> <p><code>&lt;algorithm&gt;</code>\u662f\u6240\u6709STL\u5934\u6587\u4ef6\u4e2d\u6700\u5927\u7684\u4e00\u4e2a\uff0c\u8303\u56f4\u6d89\u53ca\u5230\u6bd4\u8f83\u3001 \u4ea4\u6362\u3001\u67e5\u627e\u3001\u904d\u5386\u64cd\u4f5c\u3001\u590d\u5236\u3001\u4fee\u6539\u7b49\u7b49</p> </li> <li><code>&lt;numeric&gt;</code>\u4f53\u79ef\u5f88\u5c0f\uff0c\u53ea\u5305\u62ec\u51e0\u4e2a\u5728\u5e8f\u5217\u4e0a\u9762\u8fdb\u884c\u7b80\u5355\u6570\u5b66\u8fd0\u7b97\u7684\u6a21\u677f\u51fd\u6570</li> <li><code>&lt;functional&gt;</code>\u5b9a\u4e49\u4e86\u4e00\u4e9b\u6a21\u677f\u7c7b,\u7528\u4ee5\u58f0\u660e\u51fd\u6570\u5bf9\u8c61\u3002</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#51-for_each", "title": "5.1 \u5e38\u7528\u904d\u5386\u7b97\u6cd5 \u5b66\u4e60\u76ee\u6807\uff1a * \u638c\u63e1\u5e38\u7528\u7684\u904d\u5386\u7b97\u6cd5 \u7b97\u6cd5\u7b80\u4ecb\uff1a * <code>for_each</code>     //\u904d\u5386\u5bb9\u5668", "text": "<ul> <li><code>transform</code>   //\u642c\u8fd0\u5bb9\u5668\u5230\u53e6\u4e00\u4e2a\u5bb9\u5668\u4e2d</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#511-for_each-for_eachiterator-beg-iterator-end-_func", "title": "5.1.1 for_each \u529f\u80fd\u63cf\u8ff0\uff1a * \u5b9e\u73b0\u904d\u5386\u5bb9\u5668 \u51fd\u6570\u539f\u578b\uff1a * <code>for_each(iterator beg, iterator end, _func);</code>", "text": "<p>// \u904d\u5386\u7b97\u6cd5 \u904d\u5386\u5bb9\u5668\u5143\u7d20</p> <p>// beg \u5f00\u59cb\u8fed\u4ee3\u5668</p> <p>// end \u7ed3\u675f\u8fed\u4ee3\u5668</p> <p>// _func \u51fd\u6570\u6216\u8005\u51fd\u6570\u5bf9\u8c61 \u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_58", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_59", "title": "include  <p>//\u666e\u901a\u51fd\u6570 void print01(int val)  {     cout &lt;&lt; val &lt;&lt; \" \"; } //\u51fd\u6570\u5bf9\u8c61 class print02  {  public:     void operator()(int val)      {         cout &lt;&lt; val &lt;&lt; \" \";     } };</p> <p>//for_each\u7b97\u6cd5\u57fa\u672c\u7528\u6cd5 void test01() {</p> <pre><code>vector&lt;int&gt; v;\nfor (int i = 0; i &lt; 10; i++) \n{\n    v.push_back(i);\n}\n\n//\u904d\u5386\u7b97\u6cd5\nfor_each(v.begin(), v.end(), print01);\ncout &lt;&lt; endl;\n\nfor_each(v.begin(), v.end(), print02());\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a for_each\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\u662f\u6700\u5e38\u7528\u904d\u5386\u7b97\u6cd5\uff0c\u9700\u8981\u719f\u7ec3\u638c\u63e1\u3002</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#512-transform-transformiterator-beg1-iterator-end1-iterator-beg2-_func", "title": "5.1.2 transform \u529f\u80fd\u63cf\u8ff0\uff1a * \u642c\u8fd0\u5bb9\u5668\u5230\u53e6\u4e00\u4e2a\u5bb9\u5668\u4e2d \u51fd\u6570\u539f\u578b\uff1a * <code>transform(iterator beg1, iterator end1, iterator beg2, _func);</code>", "text": "<ul> <li>beg1 \u6e90\u5bb9\u5668\u5f00\u59cb\u8fed\u4ee3\u5668</li> <li>end1 \u6e90\u5bb9\u5668\u7ed3\u675f\u8fed\u4ee3\u5668</li> <li>beg2 \u76ee\u6807\u5bb9\u5668\u5f00\u59cb\u8fed\u4ee3\u5668</li> <li>_func \u51fd\u6570\u6216\u8005\u51fd\u6570\u5bf9\u8c61 \u793a\u4f8b\uff1a ```C++</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#include_60", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_61", "title": "include <p>//\u5e38\u7528\u904d\u5386\u7b97\u6cd5  \u642c\u8fd0 transform</p> <p>class TransForm { public:     int operator()(int val)     {         return val;     }</p> <p>};</p> <p>class MyPrint { public:     void operator()(int val)     {         cout &lt;&lt; val &lt;&lt; \" \";     } };</p> <p>void test01() {     vectorv;     for (int i = 0; i &lt; 10; i++)     {         v.push_back(i);     } <pre><code>vector&lt;int&gt;vTarget; //\u76ee\u6807\u5bb9\u5668\n\nvTarget.resize(v.size()); // \u76ee\u6807\u5bb9\u5668\u9700\u8981\u63d0\u524d\u5f00\u8f9f\u7a7a\u95f4\n\ntransform(v.begin(), v.end(), vTarget.begin(), TransForm());\n\nfor_each(vTarget.begin(), vTarget.end(), MyPrint());\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a \u642c\u8fd0\u7684\u76ee\u6807\u5bb9\u5668\u5fc5\u987b\u8981\u63d0\u524d\u5f00\u8f9f\u7a7a\u95f4\uff0c\u5426\u5219\u65e0\u6cd5\u6b63\u5e38\u642c\u8fd0\u3002</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#52", "title": "5.2 \u5e38\u7528\u67e5\u627e\u7b97\u6cd5", "text": "<p>\u5b66\u4e60\u76ee\u6807\uff1a</p> <ul> <li>\u638c\u63e1\u5e38\u7528\u7684\u67e5\u627e\u7b97\u6cd5 \u7b97\u6cd5\u7b80\u4ecb\uff1a - <code>find</code>                     //\u67e5\u627e\u5143\u7d20</li> <li><code>find_if</code>               //\u6309\u6761\u4ef6\u67e5\u627e\u5143\u7d20</li> <li><code>adjacent_find</code>    //\u67e5\u627e\u76f8\u90bb\u91cd\u590d\u5143\u7d20</li> <li><code>binary_search</code>    //\u4e8c\u5206\u67e5\u627e\u6cd5</li> <li><code>count</code>                   //\u7edf\u8ba1\u5143\u7d20\u4e2a\u6570</li> <li><code>count_if</code>             //\u6309\u6761\u4ef6\u7edf\u8ba1\u5143\u7d20\u4e2a\u6570</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#521-find-end-finditerator-beg-iterator-end-value", "title": "5.2.1 find \u529f\u80fd\u63cf\u8ff0\uff1a * \u67e5\u627e\u6307\u5b9a\u5143\u7d20\uff0c\u627e\u5230\u8fd4\u56de\u6307\u5b9a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\uff0c\u627e\u4e0d\u5230\u8fd4\u56de\u7ed3\u675f\u8fed\u4ee3\u5668end() \u51fd\u6570\u539f\u578b\uff1a - <code>find(iterator beg, iterator end, value);</code>", "text": "<p>// \u6309\u503c\u67e5\u627e\u5143\u7d20\uff0c\u627e\u5230\u8fd4\u56de\u6307\u5b9a\u4f4d\u7f6e\u8fed\u4ee3\u5668\uff0c\u627e\u4e0d\u5230\u8fd4\u56de\u7ed3\u675f\u8fed\u4ee3\u5668\u4f4d\u7f6e</p> <p>// beg \u5f00\u59cb\u8fed\u4ee3\u5668</p> <p>// end \u7ed3\u675f\u8fed\u4ee3\u5668</p> <p>// value \u67e5\u627e\u7684\u5143\u7d20 \u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_62", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_63", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_64", "title": "include  <p>void test01() {</p> <pre><code>vector&lt;int&gt; v;\nfor (int i = 0; i &lt; 10; i++) {\n    v.push_back(i + 1);\n}\n//\u67e5\u627e\u5bb9\u5668\u4e2d\u662f\u5426\u6709 5 \u8fd9\u4e2a\u5143\u7d20\nvector&lt;int&gt;::iterator it = find(v.begin(), v.end(), 5);\nif (it == v.end()) \n{\n    cout &lt;&lt; \"\u6ca1\u6709\u627e\u5230!\" &lt;&lt; endl;\n}\nelse \n{\n    cout &lt;&lt; \"\u627e\u5230:\" &lt;&lt; *it &lt;&lt; endl;\n}\n</code></pre> <p>}</p> <p>class Person { public:     Person(string name, int age)      {         this-&gt;m_Name = name;         this-&gt;m_Age = age;     }     //\u91cd\u8f7d==     bool operator==(const Person&amp; p)      {         if (this-&gt;m_Name == p.m_Name &amp;&amp; this-&gt;m_Age == p.m_Age)          {             return true;         }         return false;     }</p> <p>public:     string m_Name;     int m_Age; };</p> <p>void test02() {</p> <pre><code>vector&lt;Person&gt; v;\n\n//\u521b\u5efa\u6570\u636e\nPerson p1(\"aaa\", 10);\nPerson p2(\"bbb\", 20);\nPerson p3(\"ccc\", 30);\nPerson p4(\"ddd\", 40);\n\nv.push_back(p1);\nv.push_back(p2);\nv.push_back(p3);\nv.push_back(p4);\n\nvector&lt;Person&gt;::iterator it = find(v.begin(), v.end(), p2);\nif (it == v.end()) \n{\n    cout &lt;&lt; \"\u6ca1\u6709\u627e\u5230!\" &lt;&lt; endl;\n}\nelse \n{\n    cout &lt;&lt; \"\u627e\u5230\u59d3\u540d:\" &lt;&lt; it-&gt;m_Name &lt;&lt; \" \u5e74\u9f84: \" &lt;&lt; it-&gt;m_Age &lt;&lt; endl;\n}\n</code></pre> <p>} ```  \u603b\u7ed3\uff1a \u5229\u7528find\u53ef\u4ee5\u5728\u5bb9\u5668\u4e2d\u627e\u6307\u5b9a\u7684\u5143\u7d20\uff0c\u8fd4\u56de\u503c\u662f \u8fed\u4ee3\u5668 </p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#522-find_if-find_ifiterator-beg-iterator-end-_pred", "title": "5.2.2 find_if \u529f\u80fd\u63cf\u8ff0\uff1a * \u6309\u6761\u4ef6\u67e5\u627e\u5143\u7d20 \u51fd\u6570\u539f\u578b\uff1a - <code>find_if(iterator beg, iterator end, _Pred);</code>", "text": "<p>// \u6309\u503c\u67e5\u627e\u5143\u7d20\uff0c\u627e\u5230\u8fd4\u56de\u6307\u5b9a\u4f4d\u7f6e\u8fed\u4ee3\u5668\uff0c\u627e\u4e0d\u5230\u8fd4\u56de\u7ed3\u675f\u8fed\u4ee3\u5668\u4f4d\u7f6e    // beg \u5f00\u59cb\u8fed\u4ee3\u5668    // end \u7ed3\u675f\u8fed\u4ee3\u5668    // _Pred \u51fd\u6570\u6216\u8005\u8c13\u8bcd\uff08\u8fd4\u56debool\u7c7b\u578b\u7684\u4eff\u51fd\u6570\uff09   \u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_65", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_66", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_67", "title": "include  <p>//\u5185\u7f6e\u6570\u636e\u7c7b\u578b class GreaterFive { public:     bool operator()(int val)     {         return val &gt; 5;     } };  void test01() {      vector v;     for (int i = 0; i &lt; 10; i++) {         v.push_back(i + 1);     }      vector::iterator it = find_if(v.begin(), v.end(), GreaterFive());     if (it == v.end()) {         cout &lt;&lt; \"\u6ca1\u6709\u627e\u5230!\" &lt;&lt; endl;     }     else {         cout &lt;&lt; \"\u627e\u5230\u5927\u4e8e5\u7684\u6570\u5b57:\" &lt;&lt; *it &lt;&lt; endl;     } }  //\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b class Person { public:     Person(string name, int age)     {         this-&gt;m_Name = name;         this-&gt;m_Age = age;     } public:     string m_Name;     int m_Age; };  class Greater20 { public:     bool operator()(Person &amp;p)     {         return p.m_Age &gt; 20;     }  };  void test02() {      vector v;      //\u521b\u5efa\u6570\u636e     Person p1(\"aaa\", 10);     Person p2(\"bbb\", 20);     Person p3(\"ccc\", 30);     Person p4(\"ddd\", 40);      v.push_back(p1);     v.push_back(p2);     v.push_back(p3);     v.push_back(p4);      vector::iterator it = find_if(v.begin(), v.end(), Greater20());     if (it == v.end())     {         cout &lt;&lt; \"\u6ca1\u6709\u627e\u5230!\" &lt;&lt; endl;     }     else     {         cout &lt;&lt; \"\u627e\u5230\u59d3\u540d:\" &lt;&lt; it-&gt;m_Name &lt;&lt; \" \u5e74\u9f84: \" &lt;&lt; it-&gt;m_Age &lt;&lt; endl;     } }  int main() {      //test01();      test02();      system(\"pause\");      return 0; } ``` <p>\u603b\u7ed3\uff1afind_if\u6309\u6761\u4ef6\u67e5\u627e\u4f7f\u67e5\u627e\u66f4\u52a0\u7075\u6d3b\uff0c\u63d0\u4f9b\u7684\u4eff\u51fd\u6570\u53ef\u4ee5\u6539\u53d8\u4e0d\u540c\u7684\u7b56\u7565</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#523-adjacent_find-adjacent_finditerator-beg-iterator-end", "title": "5.2.3 adjacent_find \u529f\u80fd\u63cf\u8ff0\uff1a * \u67e5\u627e\u76f8\u90bb\u91cd\u590d\u5143\u7d20 \u51fd\u6570\u539f\u578b\uff1a - <code>adjacent_find(iterator beg, iterator end);</code>", "text": "<p>// \u67e5\u627e\u76f8\u90bb\u91cd\u590d\u5143\u7d20,\u8fd4\u56de\u76f8\u90bb\u5143\u7d20\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u8fed\u4ee3\u5668</p> <p>// beg \u5f00\u59cb\u8fed\u4ee3\u5668</p> <p>// end \u7ed3\u675f\u8fed\u4ee3\u5668</p> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_68", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_69", "title": "include  <p>void test01() {     vector v;     v.push_back(1);     v.push_back(2);     v.push_back(5);     v.push_back(2);     v.push_back(4);     v.push_back(4);     v.push_back(3); <pre><code>//\u67e5\u627e\u76f8\u90bb\u91cd\u590d\u5143\u7d20\nvector&lt;int&gt;::iterator it = adjacent_find(v.begin(), v.end());\nif (it == v.end()) {\n    cout &lt;&lt; \"\u627e\u4e0d\u5230!\" &lt;&lt; endl;\n}\nelse {\n    cout &lt;&lt; \"\u627e\u5230\u76f8\u90bb\u91cd\u590d\u5143\u7d20\u4e3a:\" &lt;&lt; *it &lt;&lt; endl;\n}\n</code></pre> <p>} ```</p> <p>\u603b\u7ed3\uff1a\u9762\u8bd5\u9898\u4e2d\u5982\u679c\u51fa\u73b0\u67e5\u627e\u76f8\u90bb\u91cd\u590d\u5143\u7d20\uff0c\u8bb0\u5f97\u7528STL\u4e2d\u7684adjacent_find\u7b97\u6cd5</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#524-binary_search-bool-binary_searchiterator-beg-iterator-end-value", "title": "5.2.4 binary_search \u529f\u80fd\u63cf\u8ff0\uff1a * \u67e5\u627e\u6307\u5b9a\u5143\u7d20\u662f\u5426\u5b58\u5728 \u51fd\u6570\u539f\u578b\uff1a - <code>bool binary_search(iterator beg, iterator end, value);</code>", "text": "<p>// \u67e5\u627e\u6307\u5b9a\u7684\u5143\u7d20\uff0c\u67e5\u5230 \u8fd4\u56detrue  \u5426\u5219false</p> <p>// \u6ce8\u610f: \u5728 \u65e0\u5e8f\u5e8f\u5217\u4e2d\u4e0d\u53ef\u7528 // beg \u5f00\u59cb\u8fed\u4ee3\u5668</p> <p>// end \u7ed3\u675f\u8fed\u4ee3\u5668</p> <p>// value \u67e5\u627e\u7684\u5143\u7d20</p> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_70", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_71", "title": "include  <p>void test01() {     vectorv; <pre><code>for (int i = 0; i &lt; 10; i++)\n{\n    v.push_back(i);\n}\n//\u4e8c\u5206\u67e5\u627e\nbool ret = binary_search(v.begin(), v.end(),2);\nif (ret)\n{\n    cout &lt;&lt; \"\u627e\u5230\u4e86\" &lt;&lt; endl;\n}\nelse\n{\n    cout &lt;&lt; \"\u672a\u627e\u5230\" &lt;&lt; endl;\n}\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a \u4e8c\u5206\u67e5\u627e\u6cd5\u67e5\u627e\u6548\u7387\u5f88\u9ad8\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\u67e5\u627e\u7684\u5bb9\u5668\u4e2d\u5143\u7d20\u5fc5\u987b\u7684\u6709\u5e8f\u5e8f\u5217</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#525-count-countiterator-beg-iterator-end-value", "title": "5.2.5 count \u529f\u80fd\u63cf\u8ff0\uff1a * \u7edf\u8ba1\u5143\u7d20\u4e2a\u6570 \u51fd\u6570\u539f\u578b\uff1a - <code>count(iterator beg, iterator end, value);</code>", "text": "<p>// \u7edf\u8ba1\u5143\u7d20\u51fa\u73b0\u6b21\u6570</p> <p>// beg \u5f00\u59cb\u8fed\u4ee3\u5668</p> <p>// end \u7ed3\u675f\u8fed\u4ee3\u5668</p> <p>// value \u7edf\u8ba1\u7684\u5143\u7d20</p> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_72", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_73", "title": "include  <p>//\u5185\u7f6e\u6570\u636e\u7c7b\u578b void test01() {     vector v;     v.push_back(1);     v.push_back(2);     v.push_back(4);     v.push_back(5);     v.push_back(3);     v.push_back(4);     v.push_back(4); <pre><code>int num = count(v.begin(), v.end(), 4);\n\ncout &lt;&lt; \"4\u7684\u4e2a\u6570\u4e3a\uff1a \" &lt;&lt; num &lt;&lt; endl;\n</code></pre> <p>}</p> <p>//\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b class Person { public:     Person(string name, int age)     {         this-&gt;m_Name = name;         this-&gt;m_Age = age;     }     bool operator==(const Person &amp; p)     {         if (this-&gt;m_Age == p.m_Age)         {             return true;         }         else         {             return false;         }     }     string m_Name;     int m_Age; };</p> <p>void test02() {     vector v; <pre><code>Person p1(\"\u5218\u5907\", 35);\nPerson p2(\"\u5173\u7fbd\", 35);\nPerson p3(\"\u5f20\u98de\", 35);\nPerson p4(\"\u8d75\u4e91\", 30);\nPerson p5(\"\u66f9\u64cd\", 25);\n\nv.push_back(p1);\nv.push_back(p2);\nv.push_back(p3);\nv.push_back(p4);\nv.push_back(p5);\n\nPerson p(\"\u8bf8\u845b\u4eae\",35);\n\nint num = count(v.begin(), v.end(), p);\ncout &lt;&lt; \"num = \" &lt;&lt; num &lt;&lt; endl;\n</code></pre> <p>} int main() {</p> <pre><code>//test01();\n\ntest02();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} <code>`` **\u603b\u7ed3\uff1a** \u7edf\u8ba1\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\u65f6\u5019\uff0c\u9700\u8981\u914d\u5408\u91cd\u8f7d</code>operator==`</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#526-count_if-count_ifiterator-beg-iterator-end-_pred", "title": "5.2.6 count_if \u529f\u80fd\u63cf\u8ff0\uff1a * \u6309\u6761\u4ef6\u7edf\u8ba1\u5143\u7d20\u4e2a\u6570 \u51fd\u6570\u539f\u578b\uff1a - <code>count_if(iterator beg, iterator end, _Pred);</code>", "text": "<p>// \u6309\u6761\u4ef6\u7edf\u8ba1\u5143\u7d20\u51fa\u73b0\u6b21\u6570</p> <p>// beg \u5f00\u59cb\u8fed\u4ee3\u5668</p> <p>// end \u7ed3\u675f\u8fed\u4ee3\u5668</p> <p>// _Pred \u8c13\u8bcd</p> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_74", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_75", "title": "include  <p>class Greater4 { public:     bool operator()(int val)     {         return val &gt;= 4;     } };</p> <p>//\u5185\u7f6e\u6570\u636e\u7c7b\u578b void test01() {     vector v;     v.push_back(1);     v.push_back(2);     v.push_back(4);     v.push_back(5);     v.push_back(3);     v.push_back(4);     v.push_back(4); <pre><code>int num = count_if(v.begin(), v.end(), Greater4());\n\ncout &lt;&lt; \"\u5927\u4e8e4\u7684\u4e2a\u6570\u4e3a\uff1a \" &lt;&lt; num &lt;&lt; endl;\n</code></pre> <p>}</p> <p>//\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b class Person { public:     Person(string name, int age)     {         this-&gt;m_Name = name;         this-&gt;m_Age = age;     }</p> <pre><code>string m_Name;\nint m_Age;\n</code></pre> <p>};</p> <p>class AgeLess35 { public:     bool operator()(const Person &amp;p)     {         return p.m_Age &lt; 35;     } }; void test02() {     vector v; <pre><code>Person p1(\"\u5218\u5907\", 35);\nPerson p2(\"\u5173\u7fbd\", 35);\nPerson p3(\"\u5f20\u98de\", 35);\nPerson p4(\"\u8d75\u4e91\", 30);\nPerson p5(\"\u66f9\u64cd\", 25);\n\nv.push_back(p1);\nv.push_back(p2);\nv.push_back(p3);\nv.push_back(p4);\nv.push_back(p5);\n\nint num = count_if(v.begin(), v.end(), AgeLess35());\ncout &lt;&lt; \"\u5c0f\u4e8e35\u5c81\u7684\u4e2a\u6570\uff1a\" &lt;&lt; num &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>//test01();\n\ntest02();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a \u6309\u503c\u7edf\u8ba1\u7528count\uff0c\u6309\u6761\u4ef6\u7edf\u8ba1\u7528count_if</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#53-sort", "title": "5.3 \u5e38\u7528\u6392\u5e8f\u7b97\u6cd5 \u5b66\u4e60\u76ee\u6807\uff1a - \u638c\u63e1\u5e38\u7528\u7684\u6392\u5e8f\u7b97\u6cd5 \u7b97\u6cd5\u7b80\u4ecb\uff1a - <code>sort</code>             //\u5bf9\u5bb9\u5668\u5185\u5143\u7d20\u8fdb\u884c\u6392\u5e8f", "text": "<ul> <li><code>random_shuffle</code>   //\u6d17\u724c   \u6307\u5b9a\u8303\u56f4\u5185\u7684\u5143\u7d20\u968f\u673a\u8c03\u6574\u6b21\u5e8f</li> <li><code>merge</code>           // \u5bb9\u5668\u5143\u7d20\u5408\u5e76\uff0c\u5e76\u5b58\u50a8\u5230\u53e6\u4e00\u5bb9\u5668\u4e2d</li> <li><code>reverse</code>       // \u53cd\u8f6c\u6307\u5b9a\u8303\u56f4\u7684\u5143\u7d20</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#531-sort", "title": "5.3.1 sort \u529f\u80fd\u63cf\u8ff0\uff1a * \u5bf9\u5bb9\u5668\u5185\u5143\u7d20\u8fdb\u884c\u6392\u5e8f", "text": "<p>\u51fd\u6570\u539f\u578b\uff1a - <code>sort(iterator beg, iterator end, _Pred);</code></p> <p>// \u6309\u503c\u67e5\u627e\u5143\u7d20\uff0c\u627e\u5230\u8fd4\u56de\u6307\u5b9a\u4f4d\u7f6e\u8fed\u4ee3\u5668\uff0c\u627e\u4e0d\u5230\u8fd4\u56de\u7ed3\u675f\u8fed\u4ee3\u5668\u4f4d\u7f6e</p> <p>//  beg    \u5f00\u59cb\u8fed\u4ee3\u5668</p> <p>//  end    \u7ed3\u675f\u8fed\u4ee3\u5668</p> <p>// _Pred  \u8c13\u8bcd</p> <p>\u793a\u4f8b\uff1a ```c++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_76", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_77", "title": "include  <p>void myPrint(int val) {     cout &lt;&lt; val &lt;&lt; \" \"; }</p> <p>void test01() {     vector v;     v.push_back(10);     v.push_back(30);     v.push_back(50);     v.push_back(20);     v.push_back(40); <pre><code>//sort\u9ed8\u8ba4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\nsort(v.begin(), v.end());\nfor_each(v.begin(), v.end(), myPrint);\ncout &lt;&lt; endl;\n\n//\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\nsort(v.begin(), v.end(), greater&lt;int&gt;());\nfor_each(v.begin(), v.end(), myPrint);\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a sort\u5c5e\u4e8e\u5f00\u53d1\u4e2d\u6700\u5e38\u7528\u7684\u7b97\u6cd5\u4e4b\u4e00\uff0c\u9700\u719f\u7ec3\u638c\u63e1</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#532-random_shuffle-random_shuffleiterator-beg-iterator-end", "title": "5.3.2 random_shuffle \u529f\u80fd\u63cf\u8ff0\uff1a * \u6d17\u724c   \u6307\u5b9a\u8303\u56f4\u5185\u7684\u5143\u7d20\u968f\u673a\u8c03\u6574\u6b21\u5e8f \u51fd\u6570\u539f\u578b\uff1a - <code>random_shuffle(iterator beg, iterator end);</code>", "text": "<p>// \u6307\u5b9a\u8303\u56f4\u5185\u7684\u5143\u7d20\u968f\u673a\u8c03\u6574\u6b21\u5e8f</p> <p>// beg \u5f00\u59cb\u8fed\u4ee3\u5668</p> <p>// end \u7ed3\u675f\u8fed\u4ee3\u5668</p> <p>\u793a\u4f8b\uff1a ```c++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_78", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_79", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_80", "title": "include  <p>class myPrint { public:     void operator()(int val)     {         cout &lt;&lt; val &lt;&lt; \" \";     } };</p> <p>void test01() {     srand((unsigned int)time(NULL));     vector v;     for(int i = 0 ; i &lt; 10;i++)     {         v.push_back(i);     }     for_each(v.begin(), v.end(), myPrint());     cout &lt;&lt; endl; <pre><code>//\u6253\u4e71\u987a\u5e8f\nrandom_shuffle(v.begin(), v.end());\nfor_each(v.begin(), v.end(), myPrint());\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a random_shuffle\u6d17\u724c\u7b97\u6cd5\u6bd4\u8f83\u5b9e\u7528\uff0c\u4f7f\u7528\u65f6\u8bb0\u5f97\u52a0\u968f\u673a\u6570\u79cd\u5b50</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#533-merge-mergeiterator-beg1-iterator-end1-iterator-beg2-iterator-end2-iterator-dest", "title": "5.3.3 merge \u529f\u80fd\u63cf\u8ff0\uff1a * \u4e24\u4e2a\u5bb9\u5668\u5143\u7d20\u5408\u5e76\uff0c\u5e76\u5b58\u50a8\u5230\u53e6\u4e00\u5bb9\u5668\u4e2d \u51fd\u6570\u539f\u578b\uff1a - <code>merge(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);</code>", "text": "<p>// \u5bb9\u5668\u5143\u7d20\u5408\u5e76\uff0c\u5e76\u5b58\u50a8\u5230\u53e6\u4e00\u5bb9\u5668\u4e2d</p> <p>// \u6ce8\u610f: \u4e24\u4e2a\u5bb9\u5668\u5fc5\u987b\u662f \u6709\u5e8f\u7684 // beg1   \u5bb9\u56681\u5f00\u59cb\u8fed\u4ee3\u5668   // end1   \u5bb9\u56681\u7ed3\u675f\u8fed\u4ee3\u5668   // beg2   \u5bb9\u56682\u5f00\u59cb\u8fed\u4ee3\u5668   // end2   \u5bb9\u56682\u7ed3\u675f\u8fed\u4ee3\u5668   // dest    \u76ee\u6807\u5bb9\u5668\u5f00\u59cb\u8fed\u4ee3\u5668</p> <p>\u793a\u4f8b\uff1a ```c++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_81", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_82", "title": "include  <p>class myPrint { public:     void operator()(int val)     {         cout &lt;&lt; val &lt;&lt; \" \";     } };</p> <p>void test01() {     vector v1;     vector v2;     for (int i = 0; i &lt; 10 ; i++)      {         v1.push_back(i);         v2.push_back(i + 1);     } <pre><code>vector&lt;int&gt; vtarget;\n//\u76ee\u6807\u5bb9\u5668\u9700\u8981\u63d0\u524d\u5f00\u8f9f\u7a7a\u95f4\nvtarget.resize(v1.size() + v2.size());\n//\u5408\u5e76  \u9700\u8981\u4e24\u4e2a\u6709\u5e8f\u5e8f\u5217\nmerge(v1.begin(), v1.end(), v2.begin(), v2.end(), vtarget.begin());\nfor_each(vtarget.begin(), vtarget.end(), myPrint());\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a merge\u5408\u5e76\u7684\u4e24\u4e2a\u5bb9\u5668\u5fc5\u987b\u7684\u6709\u5e8f\u5e8f\u5217</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#534-reverse-reverseiterator-beg-iterator-end", "title": "5.3.4 reverse \u529f\u80fd\u63cf\u8ff0\uff1a * \u5c06\u5bb9\u5668\u5185\u5143\u7d20\u8fdb\u884c\u53cd\u8f6c \u51fd\u6570\u539f\u578b\uff1a - <code>reverse(iterator beg, iterator end);</code>", "text": "<p>// \u53cd\u8f6c\u6307\u5b9a\u8303\u56f4\u7684\u5143\u7d20</p> <p>// beg \u5f00\u59cb\u8fed\u4ee3\u5668</p> <p>// end \u7ed3\u675f\u8fed\u4ee3\u5668</p> <p>\u793a\u4f8b\uff1a ```c++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_83", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_84", "title": "include  <p>class myPrint { public:     void operator()(int val)     {         cout &lt;&lt; val &lt;&lt; \" \";     } };</p> <p>void test01() {     vector v;     v.push_back(10);     v.push_back(30);     v.push_back(50);     v.push_back(20);     v.push_back(40); <pre><code>cout &lt;&lt; \"\u53cd\u8f6c\u524d\uff1a \" &lt;&lt; endl;\nfor_each(v.begin(), v.end(), myPrint());\ncout &lt;&lt; endl;\n\ncout &lt;&lt; \"\u53cd\u8f6c\u540e\uff1a \" &lt;&lt; endl;\n\nreverse(v.begin(), v.end());\nfor_each(v.begin(), v.end(), myPrint());\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a reverse\u53cd\u8f6c\u533a\u95f4\u5185\u5143\u7d20\uff0c\u9762\u8bd5\u9898\u53ef\u80fd\u6d89\u53ca\u5230</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#54-copy", "title": "5.4 \u5e38\u7528\u62f7\u8d1d\u548c\u66ff\u6362\u7b97\u6cd5 \u5b66\u4e60\u76ee\u6807\uff1a - \u638c\u63e1\u5e38\u7528\u7684\u62f7\u8d1d\u548c\u66ff\u6362\u7b97\u6cd5 \u7b97\u6cd5\u7b80\u4ecb\uff1a - <code>copy</code>                      // \u5bb9\u5668\u5185\u6307\u5b9a\u8303\u56f4\u7684\u5143\u7d20\u62f7\u8d1d\u5230\u53e6\u4e00\u5bb9\u5668\u4e2d", "text": "<ul> <li><code>replace</code>                // \u5c06\u5bb9\u5668\u5185\u6307\u5b9a\u8303\u56f4\u7684\u65e7\u5143\u7d20\u4fee\u6539\u4e3a\u65b0\u5143\u7d20</li> <li><code>replace_if</code>          // \u5bb9\u5668\u5185\u6307\u5b9a\u8303\u56f4\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7d20\u66ff\u6362\u4e3a\u65b0\u5143\u7d20</li> <li><code>swap</code>                     // \u4e92\u6362\u4e24\u4e2a\u5bb9\u5668\u7684\u5143\u7d20</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#541-copy-copyiterator-beg-iterator-end-iterator-dest", "title": "5.4.1 copy \u529f\u80fd\u63cf\u8ff0\uff1a * \u5bb9\u5668\u5185\u6307\u5b9a\u8303\u56f4\u7684\u5143\u7d20\u62f7\u8d1d\u5230\u53e6\u4e00\u5bb9\u5668\u4e2d \u51fd\u6570\u539f\u578b\uff1a - <code>copy(iterator beg, iterator end, iterator dest);</code>", "text": "<p>// \u6309\u503c\u67e5\u627e\u5143\u7d20\uff0c\u627e\u5230\u8fd4\u56de\u6307\u5b9a\u4f4d\u7f6e\u8fed\u4ee3\u5668\uff0c\u627e\u4e0d\u5230\u8fd4\u56de\u7ed3\u675f\u8fed\u4ee3\u5668\u4f4d\u7f6e</p> <p>// beg  \u5f00\u59cb\u8fed\u4ee3\u5668</p> <p>// end  \u7ed3\u675f\u8fed\u4ee3\u5668</p> <p>// dest \u76ee\u6807\u8d77\u59cb\u8fed\u4ee3\u5668</p> <p>\u793a\u4f8b\uff1a ```c++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_85", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_86", "title": "include  <p>class myPrint { public:     void operator()(int val)     {         cout &lt;&lt; val &lt;&lt; \" \";     } };</p> <p>void test01() {     vector v1;     for (int i = 0; i &lt; 10; i++) {         v1.push_back(i + 1);     }     vector v2;     v2.resize(v1.size());     copy(v1.begin(), v1.end(), v2.begin()); <pre><code>for_each(v2.begin(), v2.end(), myPrint());\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a \u5229\u7528copy\u7b97\u6cd5\u5728\u62f7\u8d1d\u65f6\uff0c\u76ee\u6807\u5bb9\u5668\u8bb0\u5f97\u63d0\u524d\u5f00\u8f9f\u7a7a\u95f4</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#542-replace-replaceiterator-beg-iterator-end-oldvalue-newvalue", "title": "5.4.2 replace \u529f\u80fd\u63cf\u8ff0\uff1a * \u5c06\u5bb9\u5668\u5185\u6307\u5b9a\u8303\u56f4\u7684\u65e7\u5143\u7d20\u4fee\u6539\u4e3a\u65b0\u5143\u7d20 \u51fd\u6570\u539f\u578b\uff1a - <code>replace(iterator beg, iterator end, oldvalue, newvalue);</code>", "text": "<p>// \u5c06\u533a\u95f4\u5185\u65e7\u5143\u7d20 \u66ff\u6362\u6210 \u65b0\u5143\u7d20</p> <p>// beg \u5f00\u59cb\u8fed\u4ee3\u5668</p> <p>// end \u7ed3\u675f\u8fed\u4ee3\u5668</p> <p>// oldvalue \u65e7\u5143\u7d20</p> <p>// newvalue \u65b0\u5143\u7d20</p> <p>\u793a\u4f8b\uff1a ```c++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_87", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_88", "title": "include  <p>class myPrint { public:     void operator()(int val)     {         cout &lt;&lt; val &lt;&lt; \" \";     } };</p> <p>void test01() {     vector v;     v.push_back(20);     v.push_back(30);     v.push_back(20);     v.push_back(40);     v.push_back(50);     v.push_back(10);     v.push_back(20); <pre><code>cout &lt;&lt; \"\u66ff\u6362\u524d\uff1a\" &lt;&lt; endl;\nfor_each(v.begin(), v.end(), myPrint());\ncout &lt;&lt; endl;\n\n//\u5c06\u5bb9\u5668\u4e2d\u768420 \u66ff\u6362\u6210 2000\ncout &lt;&lt; \"\u66ff\u6362\u540e\uff1a\" &lt;&lt; endl;\nreplace(v.begin(), v.end(), 20,2000);\nfor_each(v.begin(), v.end(), myPrint());\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a replace\u4f1a\u66ff\u6362\u533a\u95f4\u5185\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7d20</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#543-replace_if-replace_ifiterator-beg-iterator-end-_pred-newvalue", "title": "5.4.3 replace_if \u529f\u80fd\u63cf\u8ff0: * \u5c06\u533a\u95f4\u5185\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7d20\uff0c\u66ff\u6362\u6210\u6307\u5b9a\u5143\u7d20 \u51fd\u6570\u539f\u578b\uff1a - <code>replace_if(iterator beg, iterator end, _pred, newvalue);</code>", "text": "<p>// \u6309\u6761\u4ef6\u66ff\u6362\u5143\u7d20\uff0c\u6ee1\u8db3\u6761\u4ef6\u7684\u66ff\u6362\u6210\u6307\u5b9a\u5143\u7d20</p> <p>// beg \u5f00\u59cb\u8fed\u4ee3\u5668</p> <p>// end \u7ed3\u675f\u8fed\u4ee3\u5668</p> <p>// _pred \u8c13\u8bcd</p> <p>// newvalue \u66ff\u6362\u7684\u65b0\u5143\u7d20</p> <p>\u793a\u4f8b\uff1a ```c++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_89", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_90", "title": "include  <p>class myPrint { public:     void operator()(int val)     {         cout &lt;&lt; val &lt;&lt; \" \";     } };</p> <p>class ReplaceGreater30 { public:     bool operator()(int val)     {         return val &gt;= 30;     }</p> <p>};</p> <p>void test01() {     vector v;     v.push_back(20);     v.push_back(30);     v.push_back(20);     v.push_back(40);     v.push_back(50);     v.push_back(10);     v.push_back(20); <pre><code>cout &lt;&lt; \"\u66ff\u6362\u524d\uff1a\" &lt;&lt; endl;\nfor_each(v.begin(), v.end(), myPrint());\ncout &lt;&lt; endl;\n\n//\u5c06\u5bb9\u5668\u4e2d\u5927\u4e8e\u7b49\u4e8e\u768430 \u66ff\u6362\u6210 3000\ncout &lt;&lt; \"\u66ff\u6362\u540e\uff1a\" &lt;&lt; endl;\nreplace_if(v.begin(), v.end(), ReplaceGreater30(), 3000);\nfor_each(v.begin(), v.end(), myPrint());\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a replace_if\u6309\u6761\u4ef6\u67e5\u627e\uff0c\u53ef\u4ee5\u5229\u7528\u4eff\u51fd\u6570\u7075\u6d3b\u7b5b\u9009\u6ee1\u8db3\u7684\u6761\u4ef6</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#544-swap-swapcontainer-c1-container-c2", "title": "5.4.4 swap \u529f\u80fd\u63cf\u8ff0\uff1a * \u4e92\u6362\u4e24\u4e2a\u5bb9\u5668\u7684\u5143\u7d20 \u51fd\u6570\u539f\u578b\uff1a - <code>swap(container c1, container c2);</code>", "text": "<p>// \u4e92\u6362\u4e24\u4e2a\u5bb9\u5668\u7684\u5143\u7d20</p> <p>// c1\u5bb9\u56681</p> <p>// c2\u5bb9\u56682</p> <p>\u793a\u4f8b\uff1a ```c++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_91", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_92", "title": "include  <p>class myPrint { public:     void operator()(int val)     {         cout &lt;&lt; val &lt;&lt; \" \";     } };</p> <p>void test01() {     vector v1;     vector v2;     for (int i = 0; i &lt; 10; i++) {         v1.push_back(i);         v2.push_back(i+100);     } <pre><code>cout &lt;&lt; \"\u4ea4\u6362\u524d\uff1a \" &lt;&lt; endl;\nfor_each(v1.begin(), v1.end(), myPrint());\ncout &lt;&lt; endl;\nfor_each(v2.begin(), v2.end(), myPrint());\ncout &lt;&lt; endl;\n\ncout &lt;&lt; \"\u4ea4\u6362\u540e\uff1a \" &lt;&lt; endl;\nswap(v1, v2);\nfor_each(v1.begin(), v1.end(), myPrint());\ncout &lt;&lt; endl;\nfor_each(v2.begin(), v2.end(), myPrint());\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a swap\u4ea4\u6362\u5bb9\u5668\u65f6\uff0c\u6ce8\u610f\u4ea4\u6362\u7684\u5bb9\u5668\u8981\u540c\u79cd\u7c7b\u578b</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#55-include-numeric", "title": "5.5 \u5e38\u7528\u7b97\u672f\u751f\u6210\u7b97\u6cd5 \u5b66\u4e60\u76ee\u6807\uff1a - \u638c\u63e1\u5e38\u7528\u7684\u7b97\u672f\u751f\u6210\u7b97\u6cd5 \u6ce8\u610f\uff1a * \u7b97\u672f\u751f\u6210\u7b97\u6cd5\u5c5e\u4e8e\u5c0f\u578b\u7b97\u6cd5\uff0c\u4f7f\u7528\u65f6\u5305\u542b\u7684\u5934\u6587\u4ef6\u4e3a <code>#include &lt;numeric&gt;</code>", "text": "<p>\u7b97\u6cd5\u7b80\u4ecb\uff1a - <code>accumulate</code>      // \u8ba1\u7b97\u5bb9\u5668\u5143\u7d20\u7d2f\u8ba1\u603b\u548c</p> <ul> <li><code>fill</code>                 // \u5411\u5bb9\u5668\u4e2d\u6dfb\u52a0\u5143\u7d20</li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#551-accumulate-accumulateiterator-beg-iterator-end-value", "title": "5.5.1 accumulate \u529f\u80fd\u63cf\u8ff0\uff1a *  \u8ba1\u7b97\u533a\u95f4\u5185 \u5bb9\u5668\u5143\u7d20\u7d2f\u8ba1\u603b\u548c \u51fd\u6570\u539f\u578b\uff1a - <code>accumulate(iterator beg, iterator end, value);</code>", "text": "<p>// \u8ba1\u7b97\u5bb9\u5668\u5143\u7d20\u7d2f\u8ba1\u603b\u548c</p> <p>// beg \u5f00\u59cb\u8fed\u4ee3\u5668</p> <p>// end \u7ed3\u675f\u8fed\u4ee3\u5668</p> <p>// value \u8d77\u59cb\u503c</p> <p>\u793a\u4f8b\uff1a ```c++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_93", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_94", "title": "include  <p>void test01() {     vector v;     for (int i = 0; i &lt;= 100; i++) {         v.push_back(i);     } <pre><code>int total = accumulate(v.begin(), v.end(), 0);\n\ncout &lt;&lt; \"total = \" &lt;&lt; total &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a accumulate\u4f7f\u7528\u65f6\u5934\u6587\u4ef6\u6ce8\u610f\u662f numeric\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u5f88\u5b9e\u7528</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#552-fill-filliterator-beg-iterator-end-value", "title": "5.5.2 fill \u529f\u80fd\u63cf\u8ff0\uff1a * \u5411\u5bb9\u5668\u4e2d\u586b\u5145\u6307\u5b9a\u7684\u5143\u7d20 \u51fd\u6570\u539f\u578b\uff1a - <code>fill(iterator beg, iterator end, value);</code>", "text": "<p>// \u5411\u5bb9\u5668\u4e2d\u586b\u5145\u5143\u7d20</p> <p>// beg \u5f00\u59cb\u8fed\u4ee3\u5668</p> <p>// end \u7ed3\u675f\u8fed\u4ee3\u5668</p> <p>// value \u586b\u5145\u7684\u503c</p> <p>\u793a\u4f8b\uff1a ```c++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_95", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_96", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_97", "title": "include  <p>class myPrint { public:     void operator()(int val)     {         cout &lt;&lt; val &lt;&lt; \" \";     } };</p> <p>void test01() {</p> <pre><code>vector&lt;int&gt; v;\nv.resize(10);\n//\u586b\u5145\nfill(v.begin(), v.end(), 100);\n\nfor_each(v.begin(), v.end(), myPrint());\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a \u5229\u7528fill\u53ef\u4ee5\u5c06\u5bb9\u5668\u533a\u95f4\u5185\u5143\u7d20\u586b\u5145\u4e3a \u6307\u5b9a\u7684\u503c</p>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#56-", "title": "5.6 \u5e38\u7528\u96c6\u5408\u7b97\u6cd5 \u5b66\u4e60\u76ee\u6807\uff1a - \u638c\u63e1\u5e38\u7528\u7684\u96c6\u5408\u7b97\u6cd5", "text": "<p>\u7b97\u6cd5\u7b80\u4ecb\uff1a - <code>set_intersection</code>          // \u6c42\u4e24\u4e2a\u5bb9\u5668\u7684\u4ea4\u96c6</p> <ul> <li> <p><code>set_union</code>                       // \u6c42\u4e24\u4e2a\u5bb9\u5668\u7684\u5e76\u96c6</p> </li> <li> <p><code>set_difference</code>              // \u6c42\u4e24\u4e2a\u5bb9\u5668\u7684\u5dee\u96c6</p> </li> </ul>"}, {"location": "record/algo/code/cpp/02_advance/#561-set_intersection-set_intersectioniterator-beg1-iterator-end1-iterator-beg2-iterator-end2-iterator-dest", "title": "5.6.1 set_intersection \u529f\u80fd\u63cf\u8ff0\uff1a * \u6c42\u4e24\u4e2a\u5bb9\u5668\u7684\u4ea4\u96c6 \u51fd\u6570\u539f\u578b\uff1a - <code>set_intersection(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);</code>", "text": "<p>// \u6c42\u4e24\u4e2a\u96c6\u5408\u7684\u4ea4\u96c6</p> <p>// \u6ce8\u610f:\u4e24\u4e2a\u96c6\u5408\u5fc5\u987b\u662f\u6709\u5e8f\u5e8f\u5217 // beg1 \u5bb9\u56681\u5f00\u59cb\u8fed\u4ee3\u5668   // end1 \u5bb9\u56681\u7ed3\u675f\u8fed\u4ee3\u5668   // beg2 \u5bb9\u56682\u5f00\u59cb\u8fed\u4ee3\u5668   // end2 \u5bb9\u56682\u7ed3\u675f\u8fed\u4ee3\u5668   // dest \u76ee\u6807\u5bb9\u5668\u5f00\u59cb\u8fed\u4ee3\u5668</p> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_98", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_99", "title": "include  <p>class myPrint { public:     void operator()(int val)     {         cout &lt;&lt; val &lt;&lt; \" \";     } };</p> <p>void test01() {     vector v1;     vector v2;     for (int i = 0; i &lt; 10; i++)     {         v1.push_back(i);         v2.push_back(i+5);     } <pre><code>vector&lt;int&gt; vTarget;\n//\u53d6\u4e24\u4e2a\u91cc\u9762\u8f83\u5c0f\u7684\u503c\u7ed9\u76ee\u6807\u5bb9\u5668\u5f00\u8f9f\u7a7a\u95f4\nvTarget.resize(min(v1.size(), v2.size()));\n\n//\u8fd4\u56de\u76ee\u6807\u5bb9\u5668\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u5730\u5740\nvector&lt;int&gt;::iterator itEnd = \n    set_intersection(v1.begin(), v1.end(), v2.begin(), v2.end(), vTarget.begin());\n\nfor_each(vTarget.begin(), itEnd, myPrint());\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a </p> <ul> <li>\u6c42\u4ea4\u96c6\u7684\u4e24\u4e2a\u96c6\u5408\u5fc5\u987b\u7684\u6709\u5e8f\u5e8f\u5217</li> <li>\u76ee\u6807\u5bb9\u5668\u5f00\u8f9f\u7a7a\u95f4\u9700\u8981\u4ece \u4e24\u4e2a\u5bb9\u5668\u4e2d\u53d6\u5c0f\u503c * set_intersection\u8fd4\u56de\u503c\u65e2\u662f\u4ea4\u96c6\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e</li> </ul>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#562-set_union-set_unioniterator-beg1-iterator-end1-iterator-beg2-iterator-end2-iterator-dest", "title": "5.6.2 set_union \u529f\u80fd\u63cf\u8ff0\uff1a * \u6c42\u4e24\u4e2a\u96c6\u5408\u7684\u5e76\u96c6 \u51fd\u6570\u539f\u578b\uff1a - <code>set_union(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);</code>", "text": "<p>// \u6c42\u4e24\u4e2a\u96c6\u5408\u7684\u5e76\u96c6</p> <p>// \u6ce8\u610f:\u4e24\u4e2a\u96c6\u5408\u5fc5\u987b\u662f\u6709\u5e8f\u5e8f\u5217 // beg1 \u5bb9\u56681\u5f00\u59cb\u8fed\u4ee3\u5668   // end1 \u5bb9\u56681\u7ed3\u675f\u8fed\u4ee3\u5668   // beg2 \u5bb9\u56682\u5f00\u59cb\u8fed\u4ee3\u5668   // end2 \u5bb9\u56682\u7ed3\u675f\u8fed\u4ee3\u5668   // dest \u76ee\u6807\u5bb9\u5668\u5f00\u59cb\u8fed\u4ee3\u5668</p> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_100", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_101", "title": "include  <p>class myPrint { public:     void operator()(int val)     {         cout &lt;&lt; val &lt;&lt; \" \";     } };</p> <p>void test01() {     vector v1;     vector v2;     for (int i = 0; i &lt; 10; i++) {         v1.push_back(i);         v2.push_back(i+5);     } <pre><code>vector&lt;int&gt; vTarget;\n//\u53d6\u4e24\u4e2a\u5bb9\u5668\u7684\u548c\u7ed9\u76ee\u6807\u5bb9\u5668\u5f00\u8f9f\u7a7a\u95f4\nvTarget.resize(v1.size() + v2.size());\n\n//\u8fd4\u56de\u76ee\u6807\u5bb9\u5668\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u5730\u5740\nvector&lt;int&gt;::iterator itEnd = \n    set_union(v1.begin(), v1.end(), v2.begin(), v2.end(), vTarget.begin());\n\nfor_each(vTarget.begin(), itEnd, myPrint());\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a </p> <ul> <li>\u6c42\u5e76\u96c6\u7684\u4e24\u4e2a\u96c6\u5408\u5fc5\u987b\u7684\u6709\u5e8f\u5e8f\u5217</li> <li>\u76ee\u6807\u5bb9\u5668\u5f00\u8f9f\u7a7a\u95f4\u9700\u8981 \u4e24\u4e2a\u5bb9\u5668\u76f8\u52a0 - set_union\u8fd4\u56de\u503c\u65e2\u662f\u5e76\u96c6\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e</li> </ul>", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#563-set_difference-set_differenceiterator-beg1-iterator-end1-iterator-beg2-iterator-end2-iterator-dest", "title": "5.6.3  set_difference \u529f\u80fd\u63cf\u8ff0\uff1a * \u6c42\u4e24\u4e2a\u96c6\u5408\u7684\u5dee\u96c6 \u51fd\u6570\u539f\u578b\uff1a - <code>set_difference(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);</code>", "text": "<p>// \u6c42\u4e24\u4e2a\u96c6\u5408\u7684\u5dee\u96c6</p> <p>// \u6ce8\u610f:\u4e24\u4e2a\u96c6\u5408\u5fc5\u987b\u662f\u6709\u5e8f\u5e8f\u5217 // beg1 \u5bb9\u56681\u5f00\u59cb\u8fed\u4ee3\u5668   // end1 \u5bb9\u56681\u7ed3\u675f\u8fed\u4ee3\u5668   // beg2 \u5bb9\u56682\u5f00\u59cb\u8fed\u4ee3\u5668   // end2 \u5bb9\u56682\u7ed3\u675f\u8fed\u4ee3\u5668   // dest \u76ee\u6807\u5bb9\u5668\u5f00\u59cb\u8fed\u4ee3\u5668</p> <p>\u793a\u4f8b\uff1a ```C++</p>"}, {"location": "record/algo/code/cpp/02_advance/#include_102", "title": "include", "text": ""}, {"location": "record/algo/code/cpp/02_advance/#include_103", "title": "include  <p>class myPrint { public:     void operator()(int val)     {         cout &lt;&lt; val &lt;&lt; \" \";     } };</p> <p>void test01() {     vector v1;     vector v2;     for (int i = 0; i &lt; 10; i++) {         v1.push_back(i);         v2.push_back(i+5);     } <pre><code>vector&lt;int&gt; vTarget;\n//\u53d6\u4e24\u4e2a\u91cc\u9762\u8f83\u5927\u7684\u503c\u7ed9\u76ee\u6807\u5bb9\u5668\u5f00\u8f9f\u7a7a\u95f4\nvTarget.resize( max(v1.size() , v2.size()));\n\n//\u8fd4\u56de\u76ee\u6807\u5bb9\u5668\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\u5730\u5740\ncout &lt;&lt; \"v1\u4e0ev2\u7684\u5dee\u96c6\u4e3a\uff1a \" &lt;&lt; endl;\nvector&lt;int&gt;::iterator itEnd = \n    set_difference(v1.begin(), v1.end(), v2.begin(), v2.end(), vTarget.begin());\nfor_each(vTarget.begin(), itEnd, myPrint());\ncout &lt;&lt; endl;\n\n\ncout &lt;&lt; \"v2\u4e0ev1\u7684\u5dee\u96c6\u4e3a\uff1a \" &lt;&lt; endl;\nitEnd = set_difference(v2.begin(), v2.end(), v1.begin(), v1.end(), vTarget.begin());\nfor_each(vTarget.begin(), itEnd, myPrint());\ncout &lt;&lt; endl;\n</code></pre> <p>}</p> <p>int main() {</p> <pre><code>test01();\n\nsystem(\"pause\");\n\nreturn 0;\n</code></pre> <p>} ``` \u603b\u7ed3\uff1a </p> <ul> <li>\u6c42\u5dee\u96c6\u7684\u4e24\u4e2a\u96c6\u5408\u5fc5\u987b\u7684\u6709\u5e8f\u5e8f\u5217</li> <li>\u76ee\u6807\u5bb9\u5668\u5f00\u8f9f\u7a7a\u95f4\u9700\u8981\u4ece \u4e24\u4e2a\u5bb9\u5668\u53d6\u8f83\u5927\u503c - set_difference\u8fd4\u56de\u503c\u65e2\u662f\u5dee\u96c6\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e</li> </ul>", "text": ""}, {"location": "record/algo/exam/", "title": "\u673a\u8bd5\u7b14\u8bb0", "text": ""}, {"location": "record/algo/exam/#_2", "title": "\u673a\u8bd5\u771f\u9898", "text": ""}, {"location": "record/algo/exam/#_3", "title": "\u6570\u7ec4\u7ffb\u8f6c", "text": "<ul> <li>\u4ece<code>(0, 0)</code>\u5f00\u59cb\u65cb\u8f6c\uff1a</li> <li>\u987a\u65f6\u9488\u7ffb\u8f6c90\u00b0    \u7b49\u4ef7\u4e8e  <code>[i, j] --&gt; [j, n-1-i]</code></li> <li> <p>\u9006\u65f6\u9488\u7ffb\u8f6c 90\u00b0   \u7b49\u4ef7\u4e8e  <code>[i, j] --&gt; [n-1-j, i]</code></p> </li> <li> <p>\u4ece <code>(x, y)</code> \u5f00\u59cb\u65cb\u8f6c</p> </li> <li>\u987a\u65f6\u9488\u7ffb\u8f6c90\u00b0    \u7b49\u4ef7\u4e8e  <code>[i, j] --&gt; [x-y+j, x+y+n-1-i]</code></li> <li>\u9006\u65f6\u9488\u7ffb\u8f6c 90\u00b0   \u7b49\u4ef7\u4e8e  <code>[i, j] --&gt; [x+y+n-1-j, y-x+i]</code></li> </ul>"}, {"location": "record/algo/exam/#_4", "title": "\u5b57\u7b26\u4e32\u5904\u7406", "text": "<p><code>#include &lt;cctype&gt;</code></p> <p></p>"}, {"location": "record/algo/exam/#_5", "title": "\u57fa\u7840\u77e5\u8bc6", "text": ""}, {"location": "record/algo/exam/#struct", "title": "struct", "text": "<p>\u7ed3\u6784\u4f53 \u3002</p> <pre><code>// \u91cd\u8f7d\nstruct fruit {\n    int price;\n    friend bool operator &lt; (fruit f1, fruit f2) {\n        return f1.price &lt; f2.price;\n    }\n};\n</code></pre>"}, {"location": "record/algo/exam/#_6", "title": "\u968f\u673a\u6570", "text": "<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include &lt;time.h&gt;\n\nint main() {\n    srand((unsigned)time(NULL));\n    rand(); // rand()\u7684\u8303\u56f4\u662f [0, RAND_MAX]\n    rand()%(b-a+1) + a; //\u751f\u6210[a,b]\u5185\u7684\u968f\u673a\u6570\n    1.0*rand()/RAND_MAX; //\u751f\u6210[0,1]\u4e4b\u5185\u7684\u6d6e\u70b9\u6570\n\n}\n</code></pre>"}, {"location": "record/algo/exam/#c", "title": "C++\u6807\u51c6\u6a21\u677f\u5e93", "text": ""}, {"location": "record/algo/exam/#vector", "title": "vector", "text": "<p>\u52a8\u6001\u6570\u7ec4\u3002</p> <pre><code>// \u5934\u6587\u4ef6\n#include &lt;vector&gt;\nusing namespace std;\n\n// \u5b9a\u4e49\nvector&lt;typrname&gt; vi;\nvector&lt;vector&lt;typename&gt; &gt; name; \nvector&lt;typename&gt; Arrayname[size];\n\n// \u8bbf\u95ee\nvi.begin() //\u9996\u5143\u7d20\u5730\u5740 \nvi.end() //\u5c3e\u5143\u7d20\u5730\u5740\u7684\u4e0b\u4e00\u4e2a\u5730\u5740 \nvector&lt;typename&gt;::iterator it; //\u8fed\u4ee3\u5668\nvi[i] \u6216 *(it+i) //\u8bbf\u95ee\u5143\u7d20 \nfor(it=st.begin();it != st.end(); it++) printf(\"% \", *it); //\u904d\u5386\u8bbf\u95ee\nfor(i=0; i &lt; vi.size(); i++) printf(\"% \", *(it+i)); //\u904d\u5386\u8bbf\u95ee\n\n// \u5e38\u7528\u51fd\u6570\nvi.push_back(x) //\u5728vector\u6570\u7ec4\u7684\u672b\u5c3e\u6dfb\u52a0\u5143\u7d20x\nvi.pop_back() //\u5220\u9664vector\u6570\u7ec4\u7684\u672b\u5c3e\u5143\u7d20\nvi.insert(it, x) //\u5728vector\u7684\u8fed\u4ee3\u5668it\u5904\u63d2\u5165\u5143\u7d20x\n\nvi.erase(it) //\u5220\u9664it\u5904\u7684\u5355\u4e2a\u5143\u7d20\nvi.erase(first, last) //\u5220\u9664\u8fed\u4ee3\u5668[first, last)\u5185\u7684\u6240\u6709\u5143\u7d20\nvi.clear() //\u6e05\u7a7avector\u4e2d\u6240\u6709\u5143\u7d20\nvi.size() //\u83b7\u53d6vector\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\n</code></pre>"}, {"location": "record/algo/exam/#set", "title": "set", "text": "<p>\u96c6\u5408 \u3002\u2460 \u5185\u90e8\u81ea\u52a8\u6709\u5e8f\uff08\u9012\u589e\uff09\uff1b\u2461 \u4e0d\u542b\u91cd\u590d\u5143\u7d20\u3002</p> <pre><code>// \u5934\u6587\u4ef6\n#include &lt;set&gt;\nusing namespace std;\n\n// \u5b9a\u4e49\nset&lt;typename&gt; st; //\u4e0evector\u76f8\u540c\n\n// \u8bbf\u95ee\nset&lt;typename&gt;::iterator it; //\u8fed\u4ee3\u5668\nst.begin() //\u9996\u5143\u7d20\u5730\u5740\nst.end() //\u5c3e\u5143\u7d20\u5730\u5740\u7684\u4e0b\u4e00\u4e2a\u5730\u5740 \n// \u4e0d\u652f\u6301 st[i] \u6216 *(it+i) \u8bbf\u95ee\u65b9\u5f0f\nfor(it=st.begin();it != st.end(); it++) printf(\"% \", *it); //\u904d\u5386\u8bbf\u95ee\n\n// \u5e38\u7528\u51fd\u6570\nst.insert(x) //\u5c06x\u63d2\u5165set\u5bb9\u5668\uff0c\u81ea\u52a8\u9012\u589e\u6392\u5e8f\u548c\u53bb\u91cd\nst.find(value) //\u5bfb\u627e\u503cvalue\uff0c\u8fd4\u56de\u5176\u8fed\u4ee3\u5668\nst.erase(value) //\u5220\u9664\u503c\u4e3avalue\u7684\u5143\u7d20\n\nst.erase(it) \nst.erase(first, last) \nst.clear() \nst.size() \n</code></pre>"}, {"location": "record/algo/exam/#string", "title": "string", "text": "<p>\u5b57\u7b26\u4e32 \u3002</p> <pre><code>// \u5934\u6587\u4ef6\n#include &lt;string&gt;\nusing namesapce std;\n\n// \u5b9a\u4e49\nstring str;\nstring str = \"\"; //\u521d\u59cb\u5316\n\n// \u8bfb\u5165\u8bfb\u51fa\n#include &lt;iostream&gt;\ncin &gt;&gt; str;\ncout &lt;&lt; str;\nprintf(\"%s\", str.c_str()); //\u4f7f\u7528printf\n\n// \u8bbf\u95ee\nstring::iterator it;\nstr[i] \u6216 *(it+i) //\u8bbf\u95ee\u5143\u7d20\n\n// \u5e38\u7528\u51fd\u6570\nstr3 = str1 + str2 //\u52a0\u6cd5 - \u5b57\u7b26\u4e32\u62fc\u63a5\n&gt; &gt;= &lt;= &lt; == != //\u6bd4\u8f83 - \u6309\u5b57\u5178\u5e8f\u8fdb\u884c\u6bd4\u8f83\nstr.insert(pos, string) //\u5728pos\u53f7\u4f4d\u7f6e\u63d2\u5165string\nstr.insert(it, it2, it3) //\u5c06\u5b57\u7b26\u4e32[it2, it3)\u63d2\u5165\u5230it\u7684\u4f4d\u7f6e\u4e0a\nstr.substr(pos, length) //\u83b7\u53d6\u4ecepos\u53f7\u4f4d\u5f00\u59cb\u3001\u957f\u5ea6\u4e3alength\u7684\u5b50\u4e32\nstring::npos = -1 = 4294967295 //find\u51fd\u6570\u5931\u8d25\u7684\u8fd4\u56de\u503c\nstr.find(str2) //str2\u662fstr\u7684\u5b50\u4e32\u65f6\uff0c\u8fd4\u56destr2\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u53f7\uff1b\u5426\u5219\u8fd4\u56destring::npos\nstr.find(str2, pos) //\u4ecepos\u53f7\u4f4d\u5f00\u59cb\u67e5\u627e\nstr.replace(pos, length, str2) //\u628astr\u4ecepos\u53f7\u4f4d\u5f00\u59cb\u3001\u957f\u5ea6\u4e3alength\u7684\u5b50\u4e32\u66ff\u6362\u4e3astr2\nstr.replace(it1, it2, str2) //\u628astr\u7684\u8fed\u4ee3\u5668[it1, it2)\u8303\u56f4\u7684\u5b50\u4e32\u66ff\u6362\u4e3astr2\nstr.erase(pos, length) //\u5220\u9664\u4ecepos\u53f7\u4f4d\u3001\u957f\u5ea6\u4e3alength\u7684\u5b50\u4e32\n\nstr.erase(it) \nstr.erase(first, last) \nstr.clear()\nstr.length() \u6216 str.size()\n</code></pre>"}, {"location": "record/algo/exam/#map", "title": "map", "text": "<p>\u6620\u5c04 \u3002\u2460<code>(key, value)</code>\uff1a\u53ef\u4ee5\u5c06\u4efb\u4f55\u57fa\u672c\u7c7b\u578b<code>key</code>\u6620\u5c04\u5230\u4efb\u4f55\u57fa\u672c\u7c7b\u578b<code>value</code>\uff08\u5305\u62ecSTL\u5bb9\u5668\uff09\uff1b\u2461<code>key</code>\u662f\u552f\u4e00\u7684\uff1b\u2462\u5185\u90e8\u81ea\u52a8\u6709\u5e8f\uff08\u952e\u9012\u589e\uff09\u3002\u8be6\u7ec6\u53c2\u8003\u5730\u5740\u3002</p> <pre><code>// \u5934\u6587\u4ef6\n#include &lt;map&gt;\nusing namespace std;\n\n// \u5b9a\u4e49\nmap&lt;typename1, typename2&gt; mp; //typename1\u662f\u952ekey\uff0ctypename2\u662f\u503cvalue\n\n// \u8bbf\u95ee\nmap[key] //\u8bbf\u95ee key\u5bf9\u5e94\u7684value\nmap&lt;typename1, typename2&gt;::iterator it;\nit-&gt;first //\u8bbf\u95ee\u5f53\u524d\u6620\u5c04\u7684\u952e\nit-&gt;second //\u8bbf\u95ee\u5f53\u524d\u6620\u5c04\u7684\u503c\n\n// \u5e38\u7528\u51fd\u6570\nmp.find(key) //\u83b7\u53d6\u952e\u4e3akey\u7684\u6620\u5c04\u7684\u8fed\u4ee3\u5668\uff0c\u5982\u679c\u672a\u627e\u5230\uff0c\u8fd4\u56demap.end()\n\nmp.erase(it) \nmp.erase(first, last) \nmp.clear() \nmp.size() \n</code></pre>"}, {"location": "record/algo/exam/#queue", "title": "queue", "text": "<p>\u961f\u5217 \u3002\u2460\u5148\u8fdb\u5148\u51fa\u3002</p> <pre><code>// \u5934\u6587\u4ef6\n#include &lt;queue&gt;\nusing namespace std; \n\n// \u5b9a\u4e49\nqueue&lt;typename&gt; q;\n\n// \u8bbf\u95ee\nq.front() //\u961f\u9996\u5143\u7d20\nq.back() //\u961f\u5c3e\u5143\u7d20\n\n// \u5e38\u7528\u51fd\u6570\nq.push(x) //\u5c06x\u5165\u961f\nq.pop() //\u4ee4\u961f\u5c3e\u5143\u7d20\u51fa\u961f\nq.empty() //\u68c0\u6d4bqueue\u662f\u5426\u4e3a\u7a7a\uff0c\u8fd4\u56detrue\u4e3a\u7a7a\uff0c\u8fd4\u56defalse\u4e3a\u975e\u7a7a\n\nq.size()\n</code></pre>"}, {"location": "record/algo/exam/#priority_queue", "title": "priority_queue", "text": "<p>\u4f18\u5148\u961f\u5217 \u3002\u2460\u5e95\u5c42\u4f7f\u7528\u201c\u5806\u201d\u5b9e\u73b0\uff0c\u961f\u9996\u4e3a\u961f\u5217\u4e2d\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u90a3\u4e2a\u5143\u7d20\u3002</p> <pre><code>// \u5934\u6587\u4ef6\n#include &lt;queue&gt;\nusing namespace std;\n\n// \u5b9a\u4e49\npriority_queue&lt;typename&gt; q; //typename\u53ef\u4ee5\u662f\u4efb\u610f\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6216\u5bb9\u5668\n\n// \u8bbf\u95ee\nq.top() //\u83b7\u53d6\u961f\u9996\u5143\u7d20\n\n// \u5e38\u7528\u51fd\u6570\nq.push(x) //\u5c06\u5143\u7d20x\u5165\u961f\nq.pop() //\u5c06\u961f\u9996\u5143\u7d20\u51fa\u961f\nq.empty() \nq.size()\n\n// \u4f18\u5148\u7ea7\u8bbe\u7f6e\n// \u57fa\u7840\u6570\u636e\u7c7b\u578b\npriority_queue&lt;int, vector&lt;int&gt;, less&lt;int&gt; &gt; q; //less&lt;int&gt;\u8868\u793a\u6570\u5b57\u8d8a\u5927\u7684\u4f18\u5148\u7ea7\u8d8a\u9ad8\npriority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt; &gt; q; //greater&lt;int&gt;\u8868\u793a\u6570\u5b57\u8d8a\u5c0f\u7684\u4f18\u5148\u7ea7\u8d8a\u9ad8\npriority_queue&lt;double, vector&lt;double&gt;, less&lt;int&gt; &gt; q;\npriority_queue&lt;char, vector&lt;char&gt;, less&lt;int&gt; &gt; q;\n// \u7ed3\u6784\u4f53\nstruct fruit {\n    int price;\n    friend bool operator &lt; (const fruit &amp;f1, const fruit &amp;f2) {\n        return f1.price &lt; f2.price;\n    }\n}; //\u65b9\u6cd5\u4e00\uff1a\u91cd\u8f7d\u5c0f\u4e8e\u53f7\nstruct fruit {\n    int price;\n};\nstruct cmp {\n    bool operator () (const fruit &amp;f1, const fruit &amp;f2) {\n        return f1.price &lt; f2.price;\n    }\n};\npriority_queue&lt;fruit, vector&lt;fruit&gt;, cmp&gt; q; //\u65b9\u6cd5\u4e8c\uff1a\u4f7f\u7528\u7ed3\u6784\u4f53\u5916\u7684\u51fd\u6570\n</code></pre>"}, {"location": "record/algo/exam/#stack", "title": "stack", "text": "<p>\u6808 \u3002\u2460\u5148\u8fdb\u540e\u51fa\u3002</p> <pre><code>// \u5934\u6587\u4ef6\n#include &lt;stack&gt;\nusing namespace std;\n\n// \u5b9a\u4e49\nstack&lt;typename&gt; s;\n\n// \u8bbf\u95ee\ns.top() //\u8bbf\u95ee\u6808\u9876\u5143\u7d20\n\n// \u5e38\u7528\u51fd\u6570\ns.push() //\u5c06x\u5165\u6808\ns.pop() //\u5c06\u6808\u9876\u5143\u7d20\u51fa\u6808\ns.empty()\ns.size()\n</code></pre>"}, {"location": "record/algo/exam/#pair", "title": "pair", "text": "<p>\u5bf9 \u3002</p> <pre><code>// \u5934\u6587\u4ef6\n#include &lt;utility&gt; //\u4f7f\u7528#include&lt;map&gt;\u65f6\u4f1a\u81ea\u52a8\u6dfb\u52a0&lt;utility&gt;\u5934\u6587\u4ef6\nusing namespace std;\n\n// \u5b9a\u4e49\npair&lt;typename1, typename2&gt; p;\n\n// \u521d\u59cb\u5316\npair.first = ; pair.second = ; //\u65b9\u6cd5\u4e00\np = make_pair( , ); //\u65b9\u6cd5\u4e8c\n\n// \u5e38\u7528\u51fd\u6570\n&gt; &gt;= &lt;= &lt; == != //\u6bd4\u8f83 - \u5148\u4ee5first\u5927\u5c0f\u4e3a\u6807\u51c6\uff0c\u5f53first\u76f8\u7b49\u65f6\u624d\u53bb\u5224\u65adsecond\u5927\u5c0f\n</code></pre>"}, {"location": "record/algo/exam/#algorithm", "title": "algorithm", "text": "<p>\u5e38\u89c1\u51fd\u6570\u5de5\u5177 \u3002</p> <pre><code>// \u5934\u6587\u4ef6\n#include &lt;algorithm&gt;\nusing namespace std;\n\n// \u5e38\u7528\u51fd\u6570\nmax(x, y) //\u6700\u5927\u503c\nmin(x, y) //\u6700\u5c0f\u503c\nabs(x) //\u7edd\u5bf9\u503c\uff0cx\u5fc5\u987b\u4e3a\u6574\u6570\u578b\uff08\u6d6e\u70b9\u6570\u4f7f\u7528math.h\u4e0b\u7684fabs(x)\uff09\n\nswap(x, y) //\u4ea4\u6362x\u548cy\u7684\u503c\n\nreverse(it1, it2) //\u5c06\u6570\u7ec4\u6307\u9488\u6216\u5bb9\u5668\u8fed\u4ee3\u5668\u5728[it1, it2)\u8303\u56f4\u5185\u7684\u5143\u7d20\u8fdb\u884c\u53cd\u8f6c\n\nfill(it1, it2, value) //\u628a\u6570\u7ec4\u6216\u5bb9\u5668\u4e2d[it1, it2)\u8303\u56f4\u5185\u7684\u5143\u7d20\u8d4b\u503c\u4e3avalue\n\nsort(\u9996\u5143\u7d20\u5730\u5740, \u5c3e\u5143\u7d20\u5730\u5740\u7684\u4e0b\u4e00\u4e2a\u5730\u5740, \u6bd4\u8f83\u51fd\u6570\uff08\u975e\u5fc5\u586b\uff09) //\u6392\u5e8f\nsort(it1, it2) //\u9ed8\u8ba4\u4e3a\u9012\u589e\u987a\u5e8f\n// \u5982\u679c\u9700\u8981\u5bf9\u5e8f\u5217\u8fdb\u884c\u6392\u5e8f\uff0c\u90a3\u4e48\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u4e00\u5b9a\u8981\u5177\u6709\u53ef\u6bd4\u6027\n// \u57fa\u672c\u6570\u636e\u7c7b\u578b\u6570\u7ec4\u7684\u6392\u5e8f\nint a[] = {3, 1, 2}\nbool cmp(int a, int b) {return a&gt;b;}\nsort(a, a+3, cmp); //\u793a\u4f8b\n// \u7ed3\u6784\u4f53\u6570\u7ec4\u7684\u6392\u5e8f\nstruct node { int x, y; }ssd[10];\nbool cmp(node a, node b) {return a.x &gt; b.x}\nsort(ssd, ssd+10, cmp); //\u793a\u4f8b\n// \u5bb9\u5668\u6570\u7ec4\u7684\u6392\u5e8f\n// STL\u4e2d\uff0c\u53ea\u6709 vector\uff0c string\uff0c deque \u662f\u53ef\u4ee5\u4f7f\u7528 sort \u7684\nstring str[3] = \u201ca, bb, ccc\u201d;\nbool cmp(string str1, string str2) {str1.length() &gt; str2.length()}\nsort(str, str+3, cmp); //\u793a\u4f8b1\nbool cmp(int a, int b) {return a&gt;b;}\nsort(vector.begin(), vector.end(), cmp); //\u793a\u4f8b2\n\nlower_bound(first, last, value) //\u5728[first, last)\u8303\u56f4\u5185\u5bfb\u627e\u7b2c\u4e00\u4e2a\u503c\u5927\u4e8e\u7b49\u4e8evalue\u7684\u5143\u7d20\u7684\u4f4d\u7f6e\uff0c\u8fd4\u56de\u6307\u9488\u6216\u8fed\u4ee3\u5668\nupper_bound(first, last, value) //\u5728[first, last)\u8303\u56f4\u5185\u5bfb\u627e\u7b2c\u4e00\u4e2a\u503c\u5927\u4e8evalue\u7684\u5143\u7d20\u7684\u4f4d\u7f6e\uff0c\u8fd4\u56de\u6307\u9488\u6216\u8fed\u4ee3\u5668\n// \u4e0a\u9762\u4e24\u4e2a\u51fd\u6570\u53ea\u80fd\u7528\u4e8e\u6709\u5e8f\u6570\u7ec4\u6216\u5bb9\u5668\u4e2d\n\nnext_permutation(it1, it2) //\u7ed9\u51fa\u4e00\u4e2a\u5e8f\u5217\u5728\u5168\u6392\u5217\u4e2d\u7684\u4e0b\u4e00\u4e2a\u5e8f\u5217\n</code></pre>"}, {"location": "record/algo/exam/#_7", "title": "\u6570\u5b66\u95ee\u9898", "text": ""}, {"location": "record/algo/exam/#_8", "title": "\u6700\u5927\u516c\u7ea6\u6570", "text": "<pre><code>int gcd(int a, int b) {\n    if (b==0) return a;\n    else return gcd(b, a%b);\n}\n</code></pre>"}, {"location": "record/algo/exam/#_9", "title": "\u6700\u5c0f\u516c\u500d\u6570", "text": "<pre><code>int lcm(int a, int b) {\n    return a / gcd(a,b) * b;\n}\n</code></pre>"}, {"location": "record/algo/exam/#_10", "title": "\u7d20\u6570", "text": "<p>\u7d20\u6570\u7684\u5224\u65ad\uff1a\u5bf9\u4e8e\u6570 <code>n</code>\uff0c\u53ea\u9700\u8981\u5224\u65ad <code>2~sqrt(n)</code>\u662f\u5426\u6574\u9664 <code>n</code> \u5373\u53ef\uff1b</p> <p><code>1~n</code>\u7d20\u6570\u8868\u7684\u6c42\u89e3\uff1a\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\u6240\u6709\u6570\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u7d20\u6570\uff0c\u7b5b\u53bb\u5b83\u7684\u6240\u6709\u500d\u6570\u3002</p> <pre><code>const int MAXN = 10;\nbool isPrime[MAXN];\n\nint main() {\n\n    int n;\n    cin &gt;&gt; n;\n\n    // \u7d20\u6570\u7684\u5224\u65ad\n    int t = (int)sqrt(1.0 * n);\n    bool isP = true;\n    for (int i=2; i&lt;=t; i++) {\n        if (n % i == 0) {\n            isP = false;\n            break;\n        }\n    }\n    cout &lt;&lt; isP &lt;&lt; endl;\n\n    // \u7d20\u6570\u8868\u7684\u6c42\u89e3\n    fill(isPrime, isPrime+n+1, true);\n    vector&lt;int&gt; store;\n    for (int i=2; i&lt;=n; i++) {\n        if (isPrime[i]) {\n            store.push_back(i);\n            for (int j=i+i; j&lt;=n; j+=i) {\n                isPrime[j] = false;\n            }\n        }\n    }\n    for (int i=0; i&lt;store.size(); i++) {\n        cout &lt;&lt; store[i] &lt;&lt; \" \";\n    }\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/exam/#_11", "title": "\u8d28\u56e0\u5b50\u5206\u89e3", "text": "<pre><code>const int MAXN = 0x3ffffff;\n\nint isprime[MAXN];\n\nvoid get_prime(int n, vector&lt;int&gt; &amp;store) {\n\n    fill(isprime, isprime+n+1, true); // \u6613\u9519\u70b9\uff0c\u8bb0\u5f97\u52a01\n\n    for (int i=2; i&lt;=n; i++) {\n        if (isprime[i]) {\n            store.push_back(i);\n            for (int j=i+i; j&lt;=n; j+=i) {\n                isprime[j] = false;\n            }\n        }\n    }\n}\n\nstruct node{\n    int num;\n    int time;\n    node() {}\n    node(int _n, int _t) {\n        num = _n;\n        time = _t;\n    }\n};\n\nint main() {\n    int in;\n    scanf(\"%d\", &amp;in);\n    int re_in = in;\n\n    if (in == 1) {\n        cout &lt;&lt; \"1=1\" &lt;&lt;endl;\n        return 0;\n    }\n\n    int n = (int)sqrt(1.0 * in);\n\n    vector&lt;int&gt; store;\n    get_prime(n, store); // \u8ba1\u7b97\u8d28\u6570\n\n    vector&lt;node&gt; results;\n\n    for (int i=0; i&lt;store.size(); i++) { // \u6c42\u8d28\u56e0\u5b50\n        int gcc = 0;\n        int t = store[i];\n        if (in%t==0) {\n            while (in%t==0) {\n                in = in/t;\n                gcc++;\n            }\n            results.push_back(node(t, gcc));\n        }\n        if (in==1) break;\n    }\n    if (in!=1) {\n        results.push_back(node(in, 1));\n    }\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/exam/#_12", "title": "\u5927\u6574\u6570 \u52a0\u51cf\u4e58\u9664", "text": "<p>\u4e00\u4e2a\u601d\u8def\uff1a\u5148\u5b9e\u73b0\u65e0\u7b26\u53f7\u7684\u8fd0\u7b97\uff0c\u518d\u5b9e\u73b0\u6709\u7b26\u53f7\u7684\u8fd0\u7b97\uff1b</p> <p>\u51e0\u4e2a\u6280\u5de7\uff1a\u4f7f\u7528struct\u5b58\u50a8\uff0c\u6570\u7ec4\u9006\u5e8f\u5b58\u50a8\uff0c\u7b26\u53f7\u5355\u72ec\u5b58\u50a8\uff0c\u8bbe\u7f6elength\u5b57\u6bb5\u3002</p> <pre><code>struct bign {\n    int num[10000]; //\u5b58\u50a8\u6570\u5b57(\u7edd\u5bf9\u503c)\n    bool sign; //true:\u8d1f; false:\u6b63\n    int length; //\u957f\u5ea6\n\n    bign() {\n        memset(num, 0, sizeof(num));\n        sign = false;\n        length = 0;\n    }\n};\n\nvoid delete_zero(bign &amp;a) {\n    int i=a.length-1;\n    for (; i&gt;0 &amp;&amp; a.num[i]==0; i--);\n    a.length = i + 1;\n}\n\nvoid init(bign &amp;a, char input[], int n) {\n\n    if (input[0]=='-'){ a.sign = true; }\n\n    for (int i=a.sign?1:0; i&lt;n; i++) {\n        a.num[n-1-i] = input[i] - '0';\n    }\n\n    a.length = a.sign ? n-1 : n;\n    delete_zero(a);\n}\n\nstring bign2string(bign a) {\n    static char re[10000];\n    int index = 0;\n    if (a.sign) re[index++] = '-';\n    for (int i=a.length-1; i&gt;=0; i--) {\n        re[index++] = '0' + a.num[i];\n    }\n    if (a.length == 1 &amp;&amp; a.num[0]==0) re[index++] = 0;\n    re[index] = '\\0';\n    return re;\n}\n\n// if a&gt;b return 1; else if a&lt;b return -1; else if a==b return 0;\nint compare_unsign(bign a, bign b) {\n    int flag;\n    if (a.length != b.length) {\n        flag = (a.length &gt; b.length) ? 1 : -1;\n    }\n    else {\n        flag = 0;\n        for (int i=a.length-1; i&gt;=0; i--) {\n            if (a.num[i] &lt; b.num[i]) {\n                flag = -1;\n                break;\n            }\n            else if (a.num[i] &gt; b.num[i]) {\n                flag = 1;\n                break;\n            }\n        }\n    }\n    return flag;\n}\n\n\nbign add_unsign(bign a, bign b) {\n    bign c;\n    int loop = max(a.length, b.length);\n    int up = 0; //\u8fdb\u4f4d\n    for (int i=0; i&lt;loop; i++) {\n        int t = a.num[i] + b.num[i] + up;\n        c.num[i] = t % 10;\n        up = t / 10;\n    }\n    if (up) { c.num[loop] = up; c.length = loop + 1;}\n    else { c.length = loop; }\n    return c;\n}\n\nbign sub_unsign(bign a, bign b) {\n    bign c;\n    bign ta = a;\n    bign tb = b;\n    if (compare_unsign(ta, tb)&lt;0) {\n        c.sign = true;\n        swap(ta, tb);\n    }\n    for (int i=0; i&lt;ta.length; i++) {\n        if (ta.num[i] &lt; tb.num[i]) {\n            ta.num[i+1]--;\n            ta.num[i] += 10;\n        }\n        c.num[i] = ta.num[i] - tb.num[i];\n    }\n    c.length = ta.length;\n    delete_zero(c);\n    return c;\n}\n\n\nbign mult_unsign(bign a, int b) {\n    bign c;\n    b = abs(b);\n    int up = 0;\n    int i=0;\n    for (; i&lt;a.length; i++) {\n        int t = a.num[i] * b + up;\n        c.num[i] = t % 10;\n        up = t / 10;\n    }\n    while (up!=0) {\n        c.num[i++] = up % 10;\n        up = up / 10;\n    }\n    c.length = i;\n    return c;\n}\n\nbign div_unsign(bign a, int b, int &amp;r) {\n    bign c;\n    b = abs(b);\n    r = 0;\n    for (int i=a.length-1; i&gt;=0; i--) {\n        r = r*10 + a.num[i];\n        if (r &gt;= b) {\n            c.num[i] = r / b;\n            r = r % b;\n        }\n    }\n    c.length = a.length;\n    delete_zero(c);\n    return c;\n}\n\n\nint compare_sign(bign a, bign b) {\n    if (a.sign ^ b.sign) {\n        return a.sign ? -1 : 1;\n    }\n    else {\n        int flag = compare_unsign(a, b);\n        return a.sign ? (0-flag) : flag;\n    }\n}\n\nbign add_sign(bign a, bign b) {\n    bign c;\n    if (a.sign ^ b.sign) {\n        c = sub_unsign(a, b);\n    }\n    else {\n        c = add_unsign(a, b);\n    }\n    if (a.sign) c.sign = !c.sign;\n\n    cout &lt;&lt; bign2string(a) &lt;&lt; \" + \" &lt;&lt; bign2string(b) &lt;&lt; \" = \" &lt;&lt; bign2string(c) &lt;&lt; endl;\n\n    return c;\n}\n\nbign sub_sign(bign a, bign b) {\n    bign c;\n\n    if (a.sign ^ b.sign) {\n        c = add_unsign(a, b);\n    }\n    else {\n        c = sub_unsign(a, b);\n    }\n    if (a.sign) c.sign = !c.sign;\n\n    cout &lt;&lt; bign2string(a) &lt;&lt; \" - \" &lt;&lt; bign2string(b) &lt;&lt; \" = \" &lt;&lt; bign2string(c) &lt;&lt; endl;\n\n    return c;\n}\n\nbign mult_sign(bign a, int b) {\n    bign c;\n    c = mult_unsign(a, b);\n    if (a.sign ^ (b&lt;0)) {\n        c.sign = true;\n    }\n\n    cout &lt;&lt; bign2string(a) &lt;&lt; \" * \" &lt;&lt; b &lt;&lt; \" = \" &lt;&lt; bign2string(c) &lt;&lt; endl;\n\n    return c;\n}\n\nbign div_sign(bign a, int b, int&amp; r) {\n    bign c;\n\n    c = div_unsign(a, b, r);\n\n    if (a.sign ^ (b&lt;0)) {\n        c.sign = true;\n        r = -r;\n    }\n\n    cout &lt;&lt; bign2string(a) &lt;&lt; \" / \" &lt;&lt; b &lt;&lt; \" = \" &lt;&lt; bign2string(c)  &lt;&lt; \"  r=\" &lt;&lt; r &lt;&lt;endl;\n\n    return c;\n}\n\n\nint main() {\n    char ina[10000], inb[10000];\n    while (scanf(\"%s%s\", ina, inb) != EOF) {\n        bign a, b;\n        init(a, ina, strlen(ina));\n        init(b, inb, strlen(inb));\n//        cout &lt;&lt; compare_sign(a, b) &lt;&lt; endl;\n//        add_sign(a, b);\n//        sub_sign(a, b);\n        int b2; sscanf(inb, \"%d\", &amp;b2);\n//        mult_sign(a, b2);\n        int r;\n        div_sign(a, b2, r);\n\n    }\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/exam/#_13", "title": "\u6570\u636e\u7ed3\u6784", "text": ""}, {"location": "record/algo/exam/#_14", "title": "\u94fe\u8868\uff08\u52a8\u6001\uff09", "text": "<pre><code>#include &lt;cstdio&gt;\n#include &lt;cstdlib&gt;\n#include &lt;iostream&gt;\n#include &lt;string&gt;\n#include &lt;stack&gt;\n#include &lt;vector&gt;\n#include &lt;string.h&gt;\n#include &lt;queue&gt;\n\nusing namespace std;\n\n\nstruct node {\n    // \u6570\u636e\u57df\n    int data;\n    // \u6307\u9488\u57df\n    node* next;\n};\n\nnode* creat_linklist(int data[], int length) {\n    node* head = new node;\n    head-&gt;data = length;\n    head-&gt;next = NULL;\n    node* pre = head;\n    for (int i=0; i&lt;length; i++) {\n        node* p = new node;\n        p-&gt;data = data[i];\n        p-&gt;next = NULL;\n        pre-&gt;next = p;\n        pre = p;\n    }\n    return head;\n}\n\nnode* search_linklist(node* head, int target) {\n    node* p = head;\n    while ((p=p-&gt;next)!=NULL) {\n        if (p-&gt;data == target) {\n            return p;\n        }\n    }\n    return NULL;\n}\n\nvoid insert_linklist(node* head, int pos, int target) {\n    node* p = head;\n    for(int i=0; i&lt;pos-1; p=p-&gt;next, i++);\n    node* t= new node;\n    t-&gt;data = target;\n    t-&gt;next = p-&gt;next;\n    p-&gt;next = t;\n    head-&gt;data = head-&gt;data + 1;\n}\n\nvoid delete_linklist(node* head, int pos) {\n    node* p = head;\n    for(int i=0; i&lt;pos-1; p=p-&gt;next, i++);\n    node* pnext = p-&gt;next;\n    p-&gt;next = p-&gt;next-&gt;next;\n    delete(pnext);\n    head-&gt;data = head-&gt;data - 1;\n}\n\n\nint main() {\n    int a[] = {1, 2, 3, 4, 5, 6};\n\n    node* h = creat_linklist(a, 6);\n    node* s = search_linklist(h, 4);\n    cout &lt;&lt; s-&gt;data &lt;&lt; endl;\n    insert_linklist(h, 3, 0);\n    for (node* p=h-&gt;next; p-&gt;next!=NULL; cout &lt;&lt; p-&gt;data &lt;&lt; \" \", p=p-&gt;next);\n    cout &lt;&lt; endl;\n    delete_linklist(h, 3);\n    for (node* p=h-&gt;next; p-&gt;next!=NULL; cout &lt;&lt; p-&gt;data &lt;&lt; \" \", p=p-&gt;next);\n    cout &lt;&lt; endl;\n}\n</code></pre>"}, {"location": "record/algo/exam/#_15", "title": "\u94fe\u8868\uff08\u9759\u6001\uff09", "text": "<pre><code>struct Node {\n    // \u6570\u636e\u57df\n    typename data;\n    // \u6307\u9488\u57df\n    int next; \n}node[size];\n</code></pre>"}, {"location": "record/algo/exam/#_16", "title": "\u4e8c\u53c9\u6811", "text": "<pre><code>//\u5b58\u50a8\u7ed3\u6784\nstruct node {\n    int data;\n    node* lchild;\n    node* rchild;\n};\n\nint PRE[] = {1, 2, 4, 8, 5, 9, 3, 6, 10, 11, 7, 12};\nint IN[] = {8, 4, 2, 9, 5, 1, 10, 6, 11, 3, 7, 12};\nint POST[] = {8, 4, 9, 5, 2, 10, 11, 6, 12, 7, 3, 1};\nint LAYER[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};\n\n//\u67e5\u8be2\nvoid search_tree(node* root, int target, node* &amp;store) {\n    if (root == NULL) {\n        return;\n    }\n    else if (root-&gt;data == target) {\n        store = root;\n        return;\n    }\n\n    search_tree(root-&gt;lchild, target, store);\n    search_tree(root-&gt;rchild, target, store);\n}\n\n//\u5148\u5e8f\u904d\u5386\nvoid pre_order_traversal(node* root) {\n    if (root == NULL) {\n        return;\n    }\n    printf(\"%3d \", root-&gt;data);\n    pre_order_traversal(root-&gt;lchild);\n    pre_order_traversal(root-&gt;rchild);\n}\n\n//\u4e2d\u5e8f\u904d\u5386\nvoid in_order_traversal(node* root) {\n    if (root == NULL) {\n        return;\n    }\n    in_order_traversal(root-&gt;lchild);\n    printf(\"%3d \", root-&gt;data);\n    in_order_traversal(root-&gt;rchild);\n}\n\n//\u540e\u5e8f\u904d\u5386\nvoid post_order_traversal(node* root) {\n    if (root == NULL) {\n        return;\n    }\n    post_order_traversal(root-&gt;lchild);\n    post_order_traversal(root-&gt;rchild);\n    printf(\"%3d \", root-&gt;data);\n}\n\n//\u5c42\u6b21\u904d\u5386\nvoid layer_order_traversal(node* root) {\n    queue&lt;node*&gt; nodes;\n    nodes.push(root);\n    while(!nodes.empty()) {\n        node* t = nodes.front();\n        nodes.pop();\n        if (t == NULL) {\n            continue;\n        }\n        else {\n            printf(\"%3d \", t-&gt;data);\n            nodes.push(t-&gt;lchild);\n            nodes.push(t-&gt;rchild);\n        }\n    }\n}\n\n//\u6062\u590d\u4e8c\u53c9\u6811\uff1a\u5148\u5e8f\u904d\u5386+\u4e2d\u5e8f\u904d\u5386\nnode* rebuild_pre_in(int Lpre, int Rpre, int Lin, int Rin) {\n    if (Lpre&gt;Rpre || Lin&gt;Rin) {\n        return NULL;\n    }\n    node* root = new node;\n    root-&gt;data = PRE[Lpre];\n    for (int i=Lin; i&lt;=Rin; i++) {\n        if (IN[i] == PRE[Lpre]) {\n            root-&gt;lchild = rebuild_pre_in(Lpre+1, Lpre+i-Lin, Lin, i-1);\n            root-&gt;rchild = rebuild_pre_in(Lpre+1+i-Lin, Rpre, i+1, Rin);\n            break;\n        }\n    }\n    return root;\n}\n\n//\u6062\u590d\u4e8c\u53c9\u6811\uff1a\u540e\u5e8f\u904d\u5386+\u4e2d\u5e8f\u904d\u5386\nnode* rebuild_post_in(int Lpost, int Rpost, int Lin, int Rin) {\n    if (Lpost&gt;Rpost || Lin&gt;Rin) {\n        return NULL;\n    }\n    node* root = new node;\n    root-&gt;data = POST[Rpost];\n    for (int i=Lin; i&lt;=Rin; i++) {\n        if (IN[i]==POST[Rpost]) {\n            root-&gt;lchild = rebuild_post_in(Lpost, Lpost+i-Lin-1, Lin, i-1);\n            root-&gt;rchild = rebuild_post_in(Lpost+i-Lin, Rpost-1, i+1, Rin);\n            break;\n        }\n    }\n    return root;\n}\n\n//\u6062\u590d\u4e8c\u53c9\u6811\uff1a\u5c42\u6b21\u904d\u5386+\u4e2d\u5e8f\u904d\u5386\nnode* rebuild_layer_in(vector&lt;int&gt; SeqLayer, int Lin, int Rin) {\n    if (SeqLayer.empty() || Lin&gt;Rin) {\n        return NULL;\n    }\n    node* root = new node;\n    root-&gt;data = SeqLayer[0];\n    int flag = Lin;\n    for (; flag&lt;=Rin; flag++) {\n        if (IN[flag]==SeqLayer[0]) {\n            break;\n        }\n    }\n    vector&lt;int&gt; LSeqLayer;\n    vector&lt;int&gt; RSeqLayer;\n    for (vector&lt;int&gt;::iterator it=SeqLayer.begin()+1; it!=SeqLayer.end(); it++) {\n        bool isLeft = false;\n        for (int j=Lin; j&lt;flag; j++) {\n            if ((*it)==IN[j]) {\n                LSeqLayer.push_back((*it));\n                isLeft = true;\n                break;\n            }\n        }\n        if (isLeft) {\n            continue;\n        }\n        for (int j=flag+1; j&lt;=Rin; j++) {\n            if ((*it)==IN[j]) {\n                RSeqLayer.push_back((*it));\n                break;\n            }\n        }\n    }\n    root-&gt;lchild = rebuild_layer_in(LSeqLayer, Lin, flag-1);\n    root-&gt;rchild = rebuild_layer_in(RSeqLayer, flag+1, Rin);\n    return root;\n}\n\nint main() {\n//    node* root = rebuild_pre_in(0, 11, 0, 11);\n//    node* root = rebuild_post_in(0, 11, 0, 11);\n    vector&lt;int&gt; seq;\n    for (int i=0; i&lt;12; seq.push_back(LAYER[i]), i++);\n    node* root = rebuild_layer_in(seq, 0, 11);\n\n    pre_order_traversal(root);  printf(\"\\n\");\n    in_order_traversal(root);   printf(\"\\n\");\n    post_order_traversal(root); printf(\"\\n\");\n    layer_order_traversal(root);printf(\"\\n\");\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/exam/#bst", "title": "\u4e8c\u53c9\u67e5\u627e\u6811 BST", "text": "<pre><code>struct node {\n    int data;\n    node* lchild;\n    node* rchild;\n};\n\nvoid insert_BST(node* &amp;root, int data) {\n    if (root == NULL) {\n        root = new node;\n        root-&gt;data = data;\n        root-&gt;lchild = root-&gt;rchild = NULL;\n    }\n    else if (root-&gt;data &gt; data) {\n        insert_BST(root-&gt;lchild, data);\n    }\n    else {\n        insert_BST(root-&gt;rchild, data);\n    }\n}\n\nnode* create_BST(int input[], int n) {\n    node* root = NULL;\n    for (int i=0; i&lt;n; insert_BST(root, input[i]), ++i);\n    return root;\n}\n\nnode* find_max_BST(node* root) {\n    for(; root-&gt;rchild!=NULL; root=root-&gt;rchild);\n    return root;\n}\n\nnode* find_min_BST(node* root) {\n    for(; root-&gt;lchild!=NULL; root=root-&gt;lchild);\n    return root;\n}\n\nvoid delete_BST(node* &amp;root, int target) {\n    if (root == NULL) return;\n\n    if (root-&gt;data &gt; target) {\n        delete_BST(root-&gt;lchild, target);\n    }\n    else if (root-&gt;data &lt; target) {\n        delete_BST(root-&gt;rchild, target);\n    }\n    else {\n        if (root-&gt;lchild==NULL &amp;&amp; root-&gt;rchild==NULL) {\n            root = NULL;\n        }\n        else if (root-&gt;lchild!=NULL) {\n            node* t = find_max_BST(root-&gt;lchild);\n            root-&gt;data = t-&gt;data;\n            delete_BST(root-&gt;lchild, t-&gt;data);\n        }\n        else {\n            node* t = find_min_BST(root-&gt;rchild);\n            root-&gt;data = t-&gt;data;\n            delete_BST(root-&gt;rchild, t-&gt;data);\n        }\n    }\n}\n\nvoid in_order_traversal(node* root) {\n    if (root==NULL) return;\n\n    in_order_traversal(root-&gt;lchild);\n    printf(\"%d \", root-&gt;data);\n    in_order_traversal(root-&gt;rchild);\n}\n\n\nint main() {\n    int seq[] = {2, 1, 4, 3, 7, 6, 5};\n    node* root = create_BST(seq, 7);\n    in_order_traversal(root); printf(\"\\n\");\n    delete_BST(root, 5);\n    in_order_traversal(root); printf(\"\\n\");\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/exam/#avl", "title": "\u5e73\u8861\u4e8c\u53c9\u6811 AVL", "text": ""}, {"location": "record/algo/exam/#_17", "title": "\u5806", "text": ""}, {"location": "record/algo/exam/#-dijkstra", "title": "\u56fe - \u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 - Dijkstra\u7b97\u6cd5", "text": "<p>\u5faa\u73af\u81f3\u591an\u6b21\uff1a\u9009\u62e9\u8ddd\u79bb\u8d77\u59cb\u70b9\u6700\u8fd1\u7684\u3001\u672a\u88ab\u8bbf\u95ee\u7684\u70b9 ----&gt; \u66f4\u65b0\u8be5\u70b9\u6240\u8fde\u63a5\u7684\u70b9\u7684\u6700\u77ed\u8def\u5f84</p> <p>\u8981\u6c42\u9014\u4e2d\u6240\u6709\u8fb9\u7684\u6743\u91cd \u975e\u8d1f ```c++ const int MAXV = 0x1ff; const int INF = 0x3fffffff;</p> <p>// \u90bb\u63a5\u77e9\u9635\u5b9e\u73b0 void dijkstra_M(int start, int n, int Graph[MAXV][MAXV], bool Visited[], int Distance[], int Pre[]) {     // \u521d\u59cb\u5316     fill(Distance, Distance+n, INF);     fill(Visited, Visited+n, false);     for (int i=0; i&lt;n; Pre[i]=i, i++);</p> <pre><code>// \u8bbe\u7f6e\u8d77\u70b9\nDistance[start] = 0;\n\nfor (int i=0; i&lt;n; i++) {\n    // \u672a\u88ab\u8bbf\u95ee &amp;&amp; \u8ddd\u79bb\u8d77\u70b9\u6700\u8fd1 \u7684\u70b9u\n    int u = -1, minD = INF;\n    for (int j=0; j&lt;n; j++) {\n        if (!Visited[j] &amp;&amp; Distance[j]&lt;minD) {\n            u = j;\n            minD = Distance[j];\n        }\n    }\n\n    if (u==-1) break; //\u904d\u5386\u7ed3\u675f\n    else Visited[u] = true;\n\n    // \u672a\u88ab\u8bbf\u95ee &amp;&amp; \u4e0e\u70b9u\u76f8\u8fde &amp;&amp; \u7ecf\u70b9u\u53ef\u4f18\u5316\u8def\u5f84\n    for (int v=0; v&lt;n; v++) {\n        if (!Visited[v] &amp;&amp; Graph[u][v]!=INF &amp;&amp; Graph[u][v]+Distance[u]&lt;Distance[v]) {\n            Distance[v] = Graph[u][v] + Distance[u];\n            Pre[v] = u;\n        }\n    }\n}\n</code></pre> <p>}</p> <p>struct Edge {     int vertex;     int weight;     Edge(){}     Edge(int _v, int _w) { vertex = _v; weight = _w;  } }; // \u90bb\u63a5\u8868\u5b9e\u73b0 void dijkstra_L(int start, int n, vector Graph[], bool Visited[], int Distance[], int Pre[]) { <pre><code>fill(Visited, Visited+n, false);\nfill(Distance, Distance+n, INF);\nfor (int i=0; i&lt;n; Pre[i]=i, i++);\n\nDistance[start] = 0;\n\nfor (int i=0; i&lt;n; i++) {\n\n    int u = -1, minD = INF;\n    for (int j=0; j&lt;n; j++) {\n        if (!Visited[j] &amp;&amp; Distance[j]&lt;minD) {\n            u = j;\n            minD = Distance[j];\n        }\n    }\n\n    if (u==-1) break;\n    else Visited[u] = true;\n\n    for (int j=0; j&lt;Graph[u].size(); j++) {\n        Edge te = Graph[u][j];\n        if (!Visited[te.vertex] &amp;&amp; Distance[u] + te.weight &lt; Distance[te.vertex]) {\n            Distance[te.vertex] = Distance[u] + te.weight;\n            Pre[te.vertex] = u;\n        }\n    }\n}\n</code></pre> <p>}</p> <p>void DFS(int now, int start, int pre[]) {     printf(\"%d \", now);     if (now == start) return;     DFS(pre[now], start, pre); }</p> <p>int main() {     int n;     scanf(\"%d\", &amp;n);</p> <pre><code>int gm[MAXV][MAXV];\nfill(gm[0], gm[0]+MAXV*MAXV, INF);\n\nvector&lt;Edge&gt; gl[MAXV];\n\nint v1, v2, w;\nwhile (scanf(\"%d%d%d\", &amp;v1, &amp;v2, &amp;w) != EOF) {\n    gm[v1][v2] = w;\n    gl[v1].push_back(Edge(v2, w));\n}\n\nint dis[MAXV], pre[MAXV];\nbool vis[MAXV];\nint start = 0, target = 5;\n\ndijkstra_M(start, n, gm, vis, dis, pre);\nDFS(target, start, pre);\n\nprintf(\"\\n\");\n\ndijkstra_L(start, n, gl, vis, dis, pre);\nDFS(target, start, pre);\n\nreturn 0;\n</code></pre> <p>} ``` </p>"}, {"location": "record/algo/exam/#-dijkstradfs", "title": "\u56fe - \u5355\u6e90\u8def\u5f84\u6a21\u677f - Dijkstra+DFS \u2764", "text": "<p>!!! \u9ed8\u5199\u8fc7\u53bb \uff1b\u65e0\u5411\u56fe\u8bb0\u5f97\u8981\u8d4b\u503c\u53cc\u5411\uff0c\u5373v1-&gt;v2, v2-&gt;v1\uff1b</p> <p>```c++ const int MAXN = 0x1ff; const int INF = 0x3fffffff;</p> <p>int Graph[MAXN][MAXN]; int Dis[MAXN]; bool Visit[MAXN]; vector Pre[MAXN]; vector &gt; Routes; <p>void dijkstra(int start, int n) {     //\u521d\u59cb\u5316\u8ddd\u79bb\u6570\u7ec4\u4e0e\u8bbf\u95ee\u6570\u7ec4     fill(Dis, Dis+MAXN, INF);     fill(Visit, Visit+MAXN, false);</p> <pre><code>//\u8bbe\u7f6e\u8d77\u59cb\u70b9\nDis[start] = 0;\n\n//\u81f3\u591a\u5faa\u73afn\u6b21\nint loop_time = n;\nwhile (loop_time--) {\n\n    //\u627e\u5230\u672a\u88ab\u8bbf\u95ee\u8fc7\u7684\u70b9\u4e2d\uff0c\u8ddd\u79bb\u8d77\u70b9\u6700\u8fd1\u7684\u70b9\n    int minV = -1, minW = INF;\n    for (int i=0; i&lt;n; i++) {\n        if (!Visit[i] &amp;&amp; Dis[i]&lt;minW) {\n            minV = i;\n            minW = Dis[i];\n        }\n    }\n    if (minV == -1) break;\n    else Visit[minV] = true;\n\n    //\u66f4\u65b0\u4e0e\u8be5\u70b9\u76f8\u8fde\u7684\u70b9\u5230\u8d77\u70b9\u7684\u6700\u77ed\u8ddd\u79bb\n    for (int i=0; i&lt;n; i++) {\n        if (!Visit[i] &amp;&amp; Graph[minV][i]!=INF) {\n            int td = Dis[minV] + Graph[minV][i];\n            if (td &lt; Dis[i]) {\n                Dis[i] = td;\n                Pre[i].clear();\n                Pre[i].push_back(minV);\n            }\n            else if (td == Dis[i]) {\n                Pre[i].push_back(minV);\n            }\n        }\n    }\n}\n</code></pre> <p>}</p> <p>//\u6734\u7d20\u904d\u5386 void dfs(int v, vector &amp;store) {     store.push_back(v);     if (Pre[v].empty()) {         Routes.push_back(store);         //\u6b64\u5904\u53ef\u4ee5\u5904\u7406\u6dfb\u52a0\u6761\u4ef6     }     else {         for (int i=0; i&lt;Pre[v].size(); i++) {             dfs(Pre[v][i], store);         }     }     store.pop_back(); } <p>int main() {     int N, L;     cin &gt;&gt; N &gt;&gt; L;</p> <pre><code>//\u521d\u8bd5\u5316\u56fe\nfill(Graph[0], Graph[0]+MAXN*MAXN, INF);\nwhile (L--) {\n    int v1, v2, w;\n    cin &gt;&gt; v1 &gt;&gt; v2 &gt;&gt; w;\n    Graph[v1][v2] = w;\n}\n\n//\u6c42\u6700\u77ed\u8def\u5f84\nint S = 0, E = 3;\ndijkstra(S, N);\n\n//\u904d\u5386\nvector&lt;int&gt; store;\ndfs(E, store);\n\n\n//\u8f93\u51fa\ncout &lt;&lt; \"\\nMinimal distance from \\\"\" &lt;&lt; S &lt;&lt; \"\\\" to \\\"\" &lt;&lt; E &lt;&lt; \"\\\" is \" &lt;&lt; Dis[E] &lt;&lt; \".\" &lt;&lt; endl;\ncout &lt;&lt; \"Routes:  \";\nfor (int i=0; i&lt;Routes.size(); i++) {\n    cout &lt;&lt; i &lt;&lt; \": \";\n    for (int j=Routes[i].size()-1; j&gt;0; cout &lt;&lt; Routes[i][j] &lt;&lt; \"-&gt;\", j--);\n    cout &lt;&lt; Routes[i][0] &lt;&lt; \" ;  \";\n}\ncout &lt;&lt;endl;\n\nreturn 0;\n</code></pre> <p>} ```</p>"}, {"location": "record/algo/exam/#-bellman-ford-dfs", "title": "\u56fe - \u5355\u6e90\u8def\u5f84\u6a21\u677f  - Bellman-Ford + DFS", "text": "<pre><code>const int MAXN = 0x3ff;\nconst int INF = 0x3fffffff;\n\nstruct node {\n    int v; //\u7ed3\u70b9\n    int w; //\u8fb9\u6743\n\n    node(){}\n    node(int _v, int _w){\n        v = _v;\n        w = _w;\n    }\n};\n\nvector&lt;node&gt; Edge[MAXN];\nset&lt;int&gt; Pre[MAXN];\nint Dis[MAXN];\nvector&lt;vector&lt;int&gt; &gt; Routes;\n\nbool bellman_ford(int start, int n) {\n    //\u521d\u59cb\u5316\n    fill(Dis, Dis+MAXN, INF);\n\n    //\u8bbe\u7f6e\u8d77\u59cb\u70b9\n    Dis[start] = 0;\n\n    //\u81f3\u591a\u904d\u5386n-1\u6b21\n    int loop_time = n - 1;\n    while (loop_time--) {\n        bool isChanged = false;\n        //\u904d\u5386\u6240\u6709\u8fb9\uff0c\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\n        for (int i=0; i&lt;n; i++) {\n            for (int j=0; j&lt; Edge[i].size(); j++) {\n                node tv = Edge[i][j];\n                if (Dis[i] + tv.w &lt; Dis[tv.v]) {\n                    Dis[tv.v] = Dis[i] + tv.w;\n                    Pre[tv.v].clear();\n                    Pre[tv.v].insert(i);\n                    isChanged = true;\n                }\n                else if (Dis[i] + tv.w == Dis[tv.v]) {\n                    Pre[tv.v].insert(i);\n                }\n            }\n        }\n        if (!isChanged) return true;\n    }\n\n    //\u904d\u5386\u6240\u6709\u8fb9\uff0c\u5224\u65ad\u662f\u5426\u6709\u8d1f\u8fb9\n    for (int i=0; i&lt;n; i++) {\n        for (int j=0; j&lt; Edge[i].size(); j++) {\n            if (Dis[i] + Edge[i][j].w &lt; Dis[j]) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\nvoid dfs(int v, vector&lt;int&gt; &amp;store) {\n    store.push_back(v);\n    if (Pre[v].empty()) {\n        Routes.push_back(store);\n    }\n    else {\n        for (set&lt;int&gt;::iterator it=Pre[v].begin(); it!=Pre[v].end(); ++it) {\n            dfs((*it), store);\n        }\n    }\n    store.pop_back();\n}\n\n\nint main () {\n    int N, M, C1, C2;\n    cin &gt;&gt; N &gt;&gt; M &gt;&gt; C1 &gt;&gt; C2;\n\n    //\u521d\u8bd5\u5316\u56fe\n    while (M--) {\n        int v1, v2, w;\n        cin &gt;&gt; v1 &gt;&gt; v2 &gt;&gt; w;\n        Edge[v1].push_back(node(v2, w));\n        Edge[v2].push_back(node(v1, w));\n    }\n\n\n    bool re = bellman_ford(C1, N);\n\n    if (!re) {\n        cout &lt;&lt; \"There are negative edges.\" &lt;&lt; endl;\n    }\n    else {\n        vector&lt;int&gt; store;\n        dfs(C2, store);\n        //\u8f93\u51fa\n        cout &lt;&lt; \"Routes:  \";\n        for (int i=0; i&lt;Routes.size(); i++) {\n            cout &lt;&lt; i &lt;&lt; \": \";\n            for (int j=Routes[i].size()-1; j&gt;0; cout &lt;&lt; Routes[i][j] &lt;&lt; \"-&gt;\", j--);\n            cout &lt;&lt; Routes[i][0] &lt;&lt; \" ;  \";\n        }\n        cout &lt;&lt;endl;\n    }\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/exam/#-spfa-dfs", "title": "\u56fe - \u5355\u6e90\u8def\u5f84\u6a21\u677f  - SPFA + DFS \u2764", "text": "<p>SPFA\u4e0eBellman-Ford\u90fd\u53ef\u4ee5\u7528\u6765\u5224\u65ad\u662f\u5426\u5b58\u5728\u6e90\u70b9\u53ef\u8fbe\u7684\u8d1f\u73af\u3002</p> <pre><code>const int MAXN = 0x3ff;\nconst int INF = 0x3fffffff;\n\nstruct node {\n    int v; //\u7ed3\u70b9\n    int w; //\u8fb9\u6743\n\n    node(){}\n    node(int _v, int _w){\n        v = _v;\n        w = _w;\n    }\n};\n\nvector&lt;vector&lt;int&gt; &gt; Routes;\nvector&lt;node&gt; Edge[MAXN];\nset&lt;int&gt; Pre[MAXN];\nint Dis[MAXN];\nbool InQnow[MAXN];\nint JoinQtime[MAXN];\n\nbool SPFA(int start, int n) {\n    fill(Dis, Dis+n, INF);\n    fill(InQnow, InQnow+n, false);\n    fill(JoinQtime, JoinQtime+n, 0);\n\n    Dis[start] = 0;\n\n    queue&lt;int&gt; vqueue;\n    vqueue.push(start);\n    InQnow[start] = true;\n\n    while(!vqueue.empty()) {\n        int u = vqueue.front();\n        vqueue.pop();\n        InQnow[u] = false;\n\n        for (int i=0; i&lt;Edge[u].size(); i++) {\n            int v = Edge[u][i].v;\n            int w = Edge[u][i].w;\n            if (Dis[u] + w &lt; Dis[v]) {\n                Dis[v] = Dis[u] + w;\n                Pre[v].clear();\n                Pre[v].insert(u);\n                if (!InQnow[v]) {\n                    vqueue.push(v);\n                    InQnow[v] = true;\n                    if ((++JoinQtime[v]) &gt; n-1) { //\u6709\u8d1f\u73af\n                        return false;\n                    }\n                }\n            }\n            else if (Dis[u] + w == Dis[v]) {\n                Pre[v].insert(u);\n            }\n        }\n    }\n    return true;\n}\n\nvoid dfs(int v, vector&lt;int&gt; &amp;store) {\n    store.push_back(v);\n    if (Pre[v].empty()) {\n        Routes.push_back(store);\n    }\n    else {\n        for (set&lt;int&gt;::iterator it=Pre[v].begin(); it!=Pre[v].end(); ++it) {\n            dfs((*it), store);\n        }\n    }\n    store.pop_back();\n}\n\n\nint main () {\n    int N, M, C1, C2;\n    cin &gt;&gt; N &gt;&gt; M &gt;&gt; C1 &gt;&gt; C2;\n\n    //\u521d\u8bd5\u5316\u56fe\n    while (M--) {\n        int v1, v2, w;\n        cin &gt;&gt; v1 &gt;&gt; v2 &gt;&gt; w;\n        Edge[v1].push_back(node(v2, w));\n        Edge[v2].push_back(node(v1, w));\n    }\n\n\n    bool re = SPFA(C1, N);\n\n    if (!re) {\n        cout &lt;&lt; \"There are negative edges.\" &lt;&lt; endl;\n    }\n    else {\n        vector&lt;int&gt; store;\n        dfs(C2, store);\n        //\u8f93\u51fa\n        cout &lt;&lt; \"Routes:  \";\n        for (int i=0; i&lt;Routes.size(); i++) {\n            cout &lt;&lt; i &lt;&lt; \": \";\n            for (int j=Routes[i].size()-1; j&gt;0; cout &lt;&lt; Routes[i][j] &lt;&lt; \"-&gt;\", j--);\n            cout &lt;&lt; Routes[i][0] &lt;&lt; \" ;  \";\n        }\n        cout &lt;&lt;endl;\n    }\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/exam/#-floyd", "title": "\u56fe - \u5168\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5 - Floyd\u7b97\u6cd5", "text": "<p>\u5141\u8bb8\u6709\u8d1f\u6743\u8fb9\uff0c\u4e0d\u5141\u8bb8\u6709\u8d1f\u6743\u73af</p> <pre><code>const int MAXN = 0x1ff;\nconst int INF = 0x3fffffff;\n\nint Dis[MAXN][MAXN];\nset&lt;int&gt; Path[MAXN][MAXN];\nvector&lt;vector&lt;int&gt; &gt; Routes;\n\nvoid floyd(int n) {\n    for (int k=0; k&lt;n; k++) {\n        for (int i=0; i&lt;n; i++) {\n            for (int j=0; j&lt;n; j++) {\n//                if (Dis[i][k]!=INF &amp;&amp; Dis[k][j]!=INF &amp;&amp; Dis[i][k] + Dis[k][j] &lt; Dis[i][j]) {\n//                    Dis[i][j] = Dis[i][k] + Dis[k][j];\n//                    Path[i][j] = k;\n//                }\n                if (Dis[i][k]!=INF &amp;&amp; Dis[k][j]!=INF) {\n                    if (Dis[i][k] + Dis[k][j] &lt; Dis[i][j]) {\n                        Dis[i][j] = Dis[i][k] + Dis[k][j];\n                        Path[i][j].clear();\n                        Path[i][j].insert(k);\n                    }\n                    else if (Dis[i][k] + Dis[k][j] == Dis[i][j]) {\n                        Path[i][j].insert(k);\n                    }\n                }\n            }\n        }\n    }\n}\n\nvoid getPath(int i, int j, int d, vector&lt;int&gt; &amp;store) {\n//    if (Path[i][j] == -1) {\n//        store.push_back(j);\n//    }\n//    else {\n//        int k = Path[i][j];\n//        getPath(i, k, store);\n//        getPath(k, j, store);\n//    }\n    if (j == d) { //\u5982\u679c\u5230\u8fbe\u7ec8\u70b9\uff0c\u5b58\u50a8\u5f53\u524d\u8def\u5f84\n        store.push_back(j);\n        Routes.push_back(store);\n        store.pop_back();\n    }\n\n    if (Path[i][j].empty()) { //\u5982\u679ci\u4e0ej\u4e4b\u95f4\u65e0\u4e2d\u95f4\u70b9\uff0c\u5219\u8bf4\u660ei\u76f4\u8fbej\uff0c\u5373\u6700\u77ed\u8def\u5f84\u4e2d\u5305\u542bj\n        store.push_back(j);\n    }\n    else {\n        for (set&lt;int&gt;::iterator it=Path[i][j].begin(); it!=Path[i][j].end(); ++it) {\n            vector&lt;int&gt; t = store;\n            getPath(i, (*it), d, store);\n            getPath((*it), j, d, store);\n            store = t;\n        }\n    }\n}\n\nint main() {\n    int N, M, S, D;\n    cin &gt;&gt; N &gt;&gt; M &gt;&gt; S &gt;&gt; D;\n\n    fill(Dis[0], Dis[0]+MAXN*MAXN, INF);\n//    fill(Path[0], Path[0]+MAXN*MAXN, -1);\n\n    while (M--) {\n        int v1, v2, d;\n        cin &gt;&gt; v1 &gt;&gt; v2 &gt;&gt; d;\n        Dis[v1][v2] = Dis[v2][v1] = d;\n    }\n\n    //\u8ba1\u7b97\u5168\u6e90\u6700\u77ed\u8def\u5f84\n    floyd(N);\n\n    //\u83b7\u53d6\u6307\u5b9a\u8d77\u70b9\u4e0e\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff08\u53ef\u80fd\u6709\u591a\u6761\uff09\n    vector&lt;int&gt; store;\n    store.push_back(S);\n    getPath(S, D, D, store);\n\n    //\u8f93\u51fa\n    cout &lt;&lt; \"Routes:  \";\n    for (int i=0; i&lt;Routes.size(); i++) {\n        cout &lt;&lt; i &lt;&lt; \": \";\n        int j = 0;\n        for (; j&lt;Routes[i].size()-1; cout &lt;&lt; Routes[i][j] &lt;&lt; \"-&gt;\", j++);\n        cout &lt;&lt; Routes[i][j] &lt;&lt; \" ;  \";\n    }\n    cout &lt;&lt;endl;\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/exam/#-kruskal", "title": "\u6700\u5c0f\u751f\u6210\u6811 - kruskal\u7b97\u6cd5", "text": "<p>\u201c\u8fb9\u201d\u8d2a\u5fc3\u7684\u7b97\u6cd5\uff1b</p> <pre><code>const int MAXN = 0x1ff;\nconst int INF = 0x3fffffff;\n\n\nstruct edge{\n    int u, v; //\u8fb9\u7684\u4e24\u7aef\n    int d; //\u8fb9\u6743\n\n    edge() {}\n    edge(int _u, int _v, int _d) {\n        u = _u;\n        v = _v;\n        d = _d;\n    }\n};\n\nbool cmp(edge a, edge b) {\n    return a.d &lt; b.d;\n}\n\nvector&lt;edge&gt; Edges;\nint father[MAXN];\n\nint findFather(int t) {\n    int f = t;\n    while (f!=father[f]) {\n        f = father[f];\n    }\n    while (t!=father[t]) {\n        int tt = t;\n        t = father[t];\n        father[tt] = f;\n    }\n    return f;\n}\n\nbool kruskal(int n, vector&lt;edge&gt; &amp;store) {\n\n    sort(Edges.begin(), Edges.end(), cmp);\n\n    for (int i=0; i&lt;n; father[i]=i ,i++);\n\n    for (int i=0; i&lt;Edges.size() &amp;&amp; store.size()&lt;n-1; i++) {\n        edge e = Edges[i];\n        int fu = findFather(e.u);\n        int fv = findFather(e.v);\n        if (fu != fv) {\n            father[fu] = fv;\n            store.push_back(Edges[i]);\n        }\n    }\n\n    if (store.size()==n-1) return true;\n    else return false;\n}\n\n\nint main() {\n    int N, M;\n    cin &gt;&gt; N &gt;&gt; M;\n\n    while (M--) {\n        int v1, v2, d;\n        cin &gt;&gt; v1 &gt;&gt; v2 &gt;&gt; d;\n        Edges.push_back(edge(v1, v2, d));\n    }\n\n    vector&lt;edge&gt; store;\n    bool re = kruskal(N, store);\n\n    if (re) {\n        int totalD = 0;\n        for (int i=0; i&lt;store.size(); i++) {\n            cout &lt;&lt; store[i].u &lt;&lt; \"--\" &lt;&lt; store[i].v &lt;&lt; endl;\n            totalD += store[i].d;\n        }\n        cout &lt;&lt; totalD &lt;&lt; endl;\n    }\n    else {\n        cout &lt;&lt; \"No answer!\" &lt;&lt; endl;\n    }\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/exam/#dag-", "title": "DAG \u6700\u957f\u8def\u5f84 - \u52a8\u6001\u89c4\u5212\u7b97\u6cd5", "text": "<pre><code>struct node {\n    int v; int d;\n    node(){}\n    node(int _v, int _d) {v = _v; d = _d;}\n};\n\nvector&lt;node&gt; Edge[MAXN];\n\nset&lt;int&gt; Next[MAXN];\n\nint Dp[MAXN];\n\nint dp_DAG(int u) {\n    if (Dp[u] &gt; 0) {\n        return Dp[u];\n    }\n    else {\n        for (int i=0; i&lt;Edge[u].size(); i++) {\n            int v = Edge[u][i].v;\n            int d_uv = Edge[u][i].d;\n            int temp = dp_DAG(v) + d_uv;\n            if (temp &gt; Dp[u]) {\n                Dp[u] = temp;\n                Next[u].clear();\n                Next[u].insert(v);\n            }\n            else if (temp == Dp[u]) {\n                Next[u].insert(v);\n            }\n        }\n        return Dp[u];\n    }\n}\n\nvector&lt;vector&lt;int&gt; &gt; Routes;\n\nvoid dfs(int u, vector&lt;int&gt; &amp;store) {\n    store.push_back(u);\n    if (Next[u].empty()) {\n        Routes.push_back(store);\n    }\n    else {\n        for (set&lt;int&gt;::iterator it=Next[u].begin(); it!=Next[u].end(); ++it) {\n            dfs((*it), store);\n        }\n    }\n    store.pop_back();\n}\n\n\nint main() {\n\n    fill(Dp, Dp+MAXN, 0); //\u5728\u4e0d\u8bbe\u7f6e\u7ec8\u70b9\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u521d\u59cb\u5316\u8ddd\u79bb\u6570\u7ec4\u4e3a0\uff0c\u4f5c\u4e3a\u9012\u5f52\u8fb9\u754c\n    dp_DAG(0);\n\n    vector&lt;int&gt; store;\n    dfs(0, store);\n\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/exam/#dag", "title": "DAG \u6700\u957f\u8def\u5f84\uff08\u6307\u5b9a\u7ec8\u70b9\uff09", "text": "<pre><code>vector&lt;node&gt; Edge[MAXN];\n\nset&lt;int&gt; Next[MAXN];\n\nint Dp[MAXN];\nbool Vis[MAXN];\n\nint dp_DAG(int u) {\n    if (Vis[u]) {\n        return Dp[u];\n    }\n    else {\n        Vis[u] = true;\n        for (int i=0; i&lt;Edge[u].size(); i++) {\n            int v = Edge[u][i].v;\n            int d_uv = Edge[u][i].d;\n            int temp = dp_DAG(v) + d_uv;\n            if (temp &gt; Dp[u]) {\n                Dp[u] = temp;\n                Next[u].clear();\n                Next[u].insert(v);\n            }\n            else if (temp == Dp[u]) {\n                Next[u].insert(v);\n            }\n        }\n        return Dp[u];\n    }\n}\n\nint main() {\n\n    fill(Dp, Dp+MAXN, -INF);\n    fill(Vis, Vis+MAXN, false);\n    int end_point = 4;\n    Dp[end_point] = 0;\n    Vis[end_point] = true;\n    dp_DAG(0);\n\n    vector&lt;int&gt; store;\n    dfs(0, store);\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/exam/#_18", "title": "\u9898\u76ee", "text": ""}, {"location": "record/algo/exam/#pat-a1060", "title": "PAT A1060 \u5224\u65ad\u957f\u6d6e\u70b9\u6570\u662f\u5426\u76f8\u7b49", "text": "<pre><code>int n;\n\nint handle(string &amp;a) {\n    int e;\n\n    // \u53bb\u9664\u524d\u5bfc0\n    int gcc;\n    for (gcc=0; a[gcc]=='0'; gcc++);\n    a.erase(0, gcc);\n\n    // 0.00xxx \u578b\n    if (a[0]=='.') {\n        for (gcc=1; a[gcc]=='0'; gcc++);\n        e = (gcc==a.size()) ? 0 : 1 - gcc;\n        a.erase(0, gcc);\n    }\n    // xx.00x \u578b\n    else {\n        for (e=0;e&lt;a.size();e++) {\n            if (a[e]=='.') {\n                a.erase(a.begin()+e);\n                break;\n            }\n        }\n    }\n    if (a.size() &gt; n) {a = a.substr(0, n);}\n    else { for(int i=a.size(); i&lt; n;i++,a=a+\"0\");}\n\n    return e;\n}\n\nint main() {\n\n    string a, b;\n    cin &gt;&gt; n &gt;&gt; a &gt;&gt; b;\n\n    int ea = handle(a);\n    int eb = handle(b);\n\n    if (ea==eb &amp;&amp; a==b) {\n        cout &lt;&lt; \"YES\" &lt;&lt; \" 0.\" &lt;&lt; a &lt;&lt; \"*10^\" &lt;&lt; ea &lt;&lt; endl;\n    }\n    else {\n        cout &lt;&lt; \"NO\" &lt;&lt; \" 0.\" &lt;&lt; a &lt;&lt; \"*10^\" &lt;&lt; ea &lt;&lt; \" 0.\" &lt;&lt; b &lt;&lt; \"*10^\" &lt;&lt; eb &lt;&lt; endl;\n    }\n\n    return 0;\n\n}\n</code></pre>"}, {"location": "record/algo/exam/#codeup", "title": "Codeup \u7b80\u5355\u8ba1\u7b97\u5668", "text": "<pre><code>int main() {\n    char in[256];\n\n    while (gets(in)) {\n        if (strlen(in)==1 &amp;&amp; in[0]=='0') {\n            break;\n        }\n\n        queue&lt;double&gt; nums;\n        queue&lt;char&gt; ops;\n\n        char *delim = \" \";\n        char *re;\n        double num;\n\n        // \u62c6\u5206\u5b57\u7b26\u4e32\n        re = strtok(in, delim);\n        sscanf(re, \"%lf\", &amp;num);\n        nums.push(num);\n        while ((re = strtok(NULL, delim)) != NULL) {\n            if (isdigit(re[0])) {\n                sscanf(re, \"%lf\", &amp;num);\n                nums.push(num);\n            }\n            else {\n                ops.push(re[0]);\n            }\n        }\n\n        stack&lt;double&gt; stackN;\n        stack&lt;char&gt; stackO;\n\n        double a, b;\n        char op;\n\n        stackN.push(nums.front()); nums.pop();\n\n        while (!nums.empty()) {\n            op = ops.front(); ops.pop();\n            num = nums.front(); nums.pop();\n            switch (op) {\n                case '+': case '-':\n                    if (!stackO.empty()) {\n                        a = stackN.top(); stackN.pop();\n                        b = stackN.top(); stackN.pop();\n                        if (stackO.top()=='+') a=b+a;\n                        else if (stackO.top()=='-') a=b-a;\n                        stackO.pop();\n                        stackN.push(a);\n                    }\n                    stackO.push(op);\n                    stackN.push(num);\n                    break;\n                case '*':\n                    b = stackN.top(); stackN.pop(); stackN.push(b * num);\n                    break;\n                case '/':\n                    b = stackN.top(); stackN.pop(); stackN.push(b / num); \n                    break;\n                default :\n                    cout &lt;&lt; \"something wrong with op:\" &lt;&lt; op &lt;&lt; endl;\n            }\n        }\n\n        while (!stackO.empty()) {\n            op = stackO.top(); stackO.pop();\n            a = stackN.top(); stackN.pop();\n            b = stackN.top(); stackN.pop();\n\n            if (op=='+') { stackN.push(b+a); }\n            else if (op=='-') { stackN.push(b-a); }\n            else {cout &lt;&lt; \"something wrong with op: \" &lt;&lt; op &lt;&lt; endl;}\n        }\n        printf(\"%.2f\\n\", stackN.top());\n    }\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/exam/#pat-a1032", "title": "PAT A1032 \u9759\u6001\u94fe\u8868", "text": "<pre><code>struct Node{\n    char data;\n    bool flag;\n    int next;\n}node[100000\n\nint main() {\n    int h1, h2, n;\n    scanf(\"%d%d%d\", &amp;h1, &amp;h2, &amp;n);\n\n    int addr, next;\n    char data;\n    for (int i=0; i&lt;n; i++) {\n        scanf(\"%d %c%d\", &amp;addr, &amp;data, &amp;next);\n        node[addr].data = data;\n        node[addr].next = next;\n        node[addr].flag = false;\n    }\n    for (int i=h1; i != -1; node[i].flag=true, i=node[i].next);\n    for (int i=h2; i != -1; i=node[i].next) {\n        if (node[i].flag) {\n            printf(\"%05d\\n\", i);\n            return 0;\n        }\n    }\n    printf(\"-1\\n\");\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/exam/#p273", "title": "\u7b97\u6cd5\u7b14\u8bb0 P273", "text": "<pre><code>const int TARGET = 6;\nconst int K = 2;\nconst vector&lt;int&gt; IN = {2, 3, 3, 4};\nconst int MAXN = IN.size();\n\nvoid DFS(int index, int sum, int sumK, int sumS, vector&lt;int&gt; &amp;sequence) {\n    // \u9012\u5f52\u7ec8\u7ed3\n    if (sum==TARGET &amp;&amp; sumK==K) {\n        for (vector&lt;int&gt;::iterator it=sequence.begin(); it!=sequence.end(); printf(\"%d \", IN[*(it)]), ++it);\n        printf(\" sumS = %d\\n\", sumS); return;\n    }\n    else if (sum&gt;TARGET || sumK&gt;K || index&gt;=MAXN) {\n        return;\n    }\n\n    // \u9009\u62e9\u5f53\u524d\u503c\n    sequence.push_back(index);\n    DFS(index+1, sum+IN[index], sumK+1, sumS+IN[index]*IN[index], sequence);\n    sequence.pop_back();\n\n    // \u4e0d\u9009\u62e9\u5f53\u524d\u503c\n    DFS(index+1, sum, sumK, sumS, sequence);\n}\n\nint main() {\n    vector&lt;int&gt; seq;\n    DFS(0, 0, 0, 0, seq);\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/exam/#p276-bfsdfs", "title": "\u7b97\u6cd5\u7b14\u8bb0 P276 BFS\u4e0eDFS\u7684\u5e94\u7528", "text": "<pre><code>const int MAXH = 6;\nconst int MAXL = 7;\n\nint matrix[MAXH][MAXL] = {\n    {0,1,1,1,0,0,1},\n    {0,0,1,0,0,0,0},\n    {1,0,0,0,1,0,0},\n    {0,0,0,1,1,1,0},\n    {1,1,1,0,1,0,0},\n    {1,1,1,1,0,0,1}};\n\nint X[] = {0, 0, 1, -1};\nint Y[] = {1, -1, 0, 0};\n\n\nstruct node {\n    int x;\n    int y;\n\n    node(){}\n    node(int _x, int _y): x(_x), y(_y) {}\n};\n\ntypedef struct node Node;\n\nvoid BFS(int i, int j) {\n    queue&lt;node&gt; nodes;\n    matrix[i][j] = 0;\n    Node t = node(i, j);\n    nodes.push(t);\n    while (!nodes.empty()) {\n        Node v = nodes.front();\n        nodes.pop();\n        for (int k=0; k&lt;4; k++) {\n            int newx = v.x + X[k];\n            int newy = v.y + Y[k];\n            if ((newx&lt;MAXH &amp;&amp; newy&lt;MAXL) &amp;&amp; matrix[newx][newy]) {\n                matrix[newx][newy] = 0;\n                Node m = node(newx, newy);\n                nodes.push(m);\n            }\n        }\n    }\n}\n\nvoid DFS(int i, int j) {\n    if (matrix[i][j]==0 || i&gt;=MAXH || j&gt;=MAXL) {\n        return;\n    }\n    matrix[i][j] = 0;\n    for (int k=0; k&lt;4; k++) {\n        int newx = i + X[k];\n        int newy = j + Y[k];\n        DFS(newx, newy);\n    }\n}\n\nint main() {\n    int gcc = 0;\n    for (int i=0; i&lt;MAXH; i++) {\n        for (int j=0; j&lt; MAXL; j++) {\n            if (matrix[i][j]) {\n                gcc++;\n                BFS(i, j);\n//                DFS(i, j);\n            }\n        }\n    }\n\n    printf(\"%d\", gcc);\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/exam/#pat-a1034-dfs", "title": "PAT A1034 \u56fe\u7684\u5e94\u7528\uff08DFS\u89e3\u6cd5\uff09", "text": "<pre><code>map&lt;string, int&gt; name2id;\nmap&lt;int, string&gt; id2name;\nint Edges[2048][2048] = {0};\nint Weights[2048] = {0};\n\nint maxW, maxV;\nint totalW;\nset&lt;int&gt; totalV;\n\nvoid DFS(int v) {\n    if (Weights[v]&gt;maxW) {\n        maxV = v;\n        maxW = Weights[v];\n    }\n    for (int i=0; i&lt;name2id.size(); i++) {\n        if (Edges[v][i]) {\n            totalW += Edges[v][i];\n            totalV.insert(i);\n            Edges[v][i] = Edges[i][v] = 0;\n            DFS(i);\n        }\n    }\n}\n\nint main() {\n    int N, K;\n    scanf(\"%d%d\", &amp;N, &amp;K);\n\n    int name_count = 0;\n    for (int i=0; i&lt;N; i++) {\n        char t1[4], t2[4];\n        int tw;\n        scanf(\"%s%s%d\", t1, t2, &amp;tw);\n        if (name2id.find(t1)==name2id.end()) {\n            name2id.insert(pair&lt;string, int&gt;(t1, name_count));\n            id2name.insert(pair&lt;int, string&gt;(name_count++, t1));\n        }\n        if (name2id.find(t2)==name2id.end()) {\n            name2id.insert(pair&lt;string, int&gt;(t2, name_count));\n            id2name.insert(pair&lt;int, string&gt;(name_count++, t2));\n        }\n        Edges[name2id[t1]][name2id[t2]] += tw;\n        Edges[name2id[t2]][name2id[t1]] += tw;\n        Weights[name2id[t1]] += tw;\n        Weights[name2id[t2]] += tw;\n    }\n\n    map&lt;string, int&gt; bosses;\n\n    for (int i=0; i&lt;name2id.size(); i++) {\n        totalV.clear();\n        totalV.insert(i);\n        totalW = 0;\n        maxV = i;\n        maxW = Weights[i];\n        DFS(i);\n        if (totalV.size() &gt; 2 &amp;&amp; totalW &gt; K) {\n            bosses.insert(pair&lt;string, int&gt;(id2name[maxV], totalV.size()));\n        }\n    }\n\n    cout &lt;&lt; bosses.size() &lt;&lt; endl;\n    for (map&lt;string, int&gt;::iterator it=bosses.begin(); it!=bosses.end(); ++it) {\n        cout &lt;&lt; it-&gt;first &lt;&lt; \" \" &lt;&lt; it-&gt;second &lt;&lt; endl;\n    }\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/exam/#pat-a1034", "title": "PAT A1034 \u56fe\u7684\u5e94\u7528\uff08\u5e76\u67e5\u96c6\u89e3\u6cd5\uff09", "text": "<pre><code>const int MAXN = 2048;\n\nmap&lt;string, int&gt; name2id;\nmap&lt;int, string&gt; id2name;\n\nint Weights[MAXN] = {0};\n\nint Father[MAXN];\n\nint find_UFS(int a) {\n    int f = a;\n    while (f != Father[f]) {\n        f = Father[f];\n    }\n\n    while (a != Father[a]) {\n        int t = a;\n        a = Father[a];\n        Father[t] = f;\n    }\n    return f;\n}\n\nvoid union_UFS(int a, int b) { \n    int fa = find_UFS(a);   // \u6613\u9519\u70b9\uff01\n    int fb = find_UFS(b);\n    if (Weights[fa] &gt; Weights[fb]) {\n        Father[fb] = fa;\n    }\n    else {\n        Father[fa] = fb;\n    }\n}\n\nstruct node {\n    int totalV;\n    int totalW;\n\n    node (){}\n    node(int _v, int _w) {\n        totalV = _v;\n        totalW = _w;\n    }\n};\n\nint main() {\n\n    int N, K;\n    scanf(\"%d%d\", &amp;N, &amp;K);\n\n    for (int i=0; i&lt;MAXN; Father[i] = i, i++);\n\n    int name_count = 0;\n    vector&lt;pair&lt;int, int&gt; &gt; input_memory;\n    for (int i=0; i&lt;N; i++) {\n        string t1, t2;\n        int tw;\n        cin &gt;&gt; t1 &gt;&gt; t2 &gt;&gt; tw;\n        if (name2id.find(t1)==name2id.end()) {\n            name2id[t1] = name_count;\n            id2name[name_count++] = t1;\n        }\n        if (name2id.find(t2)==name2id.end()) {\n            name2id[t2] = name_count;\n            id2name[name_count++] = t2;\n        }\n        Weights[name2id[t1]] += tw;\n        Weights[name2id[t2]] += tw;\n\n        input_memory.push_back(pair&lt;int,int&gt;(name2id[t1], name2id[t2]));\n    }\n\n    for (int i=0; i&lt;N; i++) {\n        union_UFS(input_memory[i].first, input_memory[i].second);\n    }\n\n    map&lt;int, node&gt; nodes;\n    for (int i=0; i&lt;name_count; i++) {\n        int f = find_UFS(i);\n        if (nodes.find(f) == nodes.end()) {\n            nodes[f] = node(1, Weights[i]);\n        }\n        else {\n            nodes[f].totalV += 1;\n            nodes[f].totalW += Weights[i];\n        }\n    }\n\n    map&lt;string, int&gt; outputs;\n    for (map&lt;int, node&gt;::iterator it=nodes.begin(); it!=nodes.end(); ++it) {\n        if (it-&gt;second.totalV &gt; 2 &amp;&amp; it-&gt;second.totalW &gt; 2*K) {\n            outputs[id2name[it-&gt;first]] = it-&gt;second.totalV;\n        }\n    }\n\n    cout &lt;&lt; outputs.size() &lt;&lt; endl;\n    for (map&lt;string, int&gt;::iterator it=outputs.begin(); it!=outputs.end(); ++it) {\n        cout &lt;&lt; it-&gt;first &lt;&lt; \" \" &lt;&lt; it-&gt;second &lt;&lt; endl;\n    }\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/exam/#pat-a1076-bfs", "title": "PAT A1076 \u56fe\u76f8\u5173 BFS", "text": "<pre><code>struct node { // \u4f7f\u7528\u90bb\u63a5\u8868\u8fdb\u884c\u5b58\u50a8\u65f6\uff0c\u8fb9\u6743\u3001\u5c42\u6570\u7b49\u4fe1\u606f\u9700\u8981\u4f7f\u7528\u7ed3\u6784\u4f53\u5b58\u50a8\n    int vertex;\n    int level;\n\n    node(){}\n    node(int _v, int _l) {\n        vertex = _v;\n        level = _l;\n    }\n};\n\nconst int MAXN = 1024;\nvector&lt;int&gt; Edges[MAXN];\n\nint main() {\n    int N, L;\n    scanf(\"%d%d\", &amp;N, &amp;L);\n    for (int i=1; i&lt;=N; i++) {\n        int tcount;\n        scanf(\"%d\", &amp;tcount);\n        for (int j=0; j&lt;tcount; j++) {\n            int tnum;\n            scanf(\"%d\", &amp;tnum);\n            Edges[tnum].push_back(i);\n        }\n    }\n    int tN;\n    scanf(\"%d\", &amp;tN);\n    while (tN--) {\n        int target;\n        queue&lt;node&gt; qnode;\n        bool InQueue[MAXN] = {false};\n\n        scanf(\"%d\", &amp;target);\n        qnode.push(node(target, 1));\n        InQueue[target] = true;\n\n        int tran_count = 0;\n        while (!qnode.empty()) { // BFS\u904d\u5386\n            node tn = qnode.front();\n            qnode.pop();\n            if (tn.level &gt; L) continue;\n            for (int i=0; i&lt;Edges[tn.vertex].size(); i++) {\n                int tv = Edges[tn.vertex][i];\n                if (!InQueue[tv]) {\n                    qnode.push(node(tv, tn.level+1));\n                    InQueue[tv] = true;\n                    tran_count += 1;\n                }\n            }\n        }\n        printf(\"%d\\n\", tran_count);\n    }\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/exam/#pat", "title": "PAT \u6570\u5b57\u9ed1\u6d1e", "text": "<pre><code>bool cmp1(char a, char b) {\n    return a-b &gt;0;\n}\n\nbool cmp2(char a, char b) {\n    return a-b&lt;0;\n}\n\nint main() {\n\n    char input[5];\n    int re;\n\n    scanf(\"%d\", &amp;re);\n\n    int tmax, tmin;\n\n    do {\n        sprintf(input, \"%04d\", re);\n\n        sort(input, input+4, cmp1);\n\n        sscanf(input, \"%d\", &amp;tmax);\n\n        sort(input, input+4, cmp2);\n\n        sscanf(input, \"%d\", &amp;tmin);\n\n        re = tmax - tmin;\n\n        printf(\"%04d - %04d = %04d\\n\", tmax, tmin, re);\n    } while (re != 6174 &amp;&amp; re!=0);\n\n    return 0;\n}\n</code></pre>"}, {"location": "record/algo/hello/", "title": "\u4f60\u597d\uff0c\u7b97\u6cd5", "text": "<p>11.1.  \u6392\u5e8f\u7b97\u6cd5 - Hello \u7b97\u6cd5 (hello-algo.com)</p>"}, {"location": "record/algo/hello/#_2", "title": "\u5feb\u901f\u6392\u5e8f", "text": ""}, {"location": "record/inv_fastoct/00_00_log/", "title": "00 00 log", "text": "<p>\u8fd1\u671f\u8fdb\u5c55\uff1a</p> <ol> <li> <p>\u6a21\u578b\u8bad\u7ec3 pipeline \u65f6\u95f4\u4f18\u5316\uff1a</p> </li> <li> <p><code>18h+</code> -&gt; <code>10h-</code>\uff08\u591abatch / \u5de5\u7a0b\u4f18\u5316\uff09\uff08\u591a\u7ebf\u7a0b\u65e0\u6548\uff09</p> </li> <li> <p>\u6a21\u578b\u7cbe\u5ea6\u63d0\u5347\uff1a</p> </li> <li> <p>PSNR\uff1a16.06 -&gt; 16.42</p> </li> <li> <p>RMSE\uff1a0.2321 -&gt; 0.1550</p> </li> <li> <p>\u5b8c\u6210laval indoor\u771f\u5b9e\u573a\u666f\u6570\u636e\u96c6\u7684\u5904\u7406\uff0cfinetune \u7f51\u7edc\u4e2d</p> </li> <li> <p>\u5b8c\u6210\u53ef\u5fae\u516b\u53c9\u6811\u4f53\u7d20\u6e32\u67d3\u5668\uff1a</p> </li> <li> <ol> <li>\u540e\u7eed finetune \u7f51\u7edc\uff1a256*3 - \u516b\u53c9\u6811\u7f51\u7edc - \u53ef\u5fae\u516b\u53c9\u6811</li> </ol> </li> </ol>"}, {"location": "record/inv_fastoct/00_00_log/#_1", "title": "\u6027\u80fd\u4f18\u5316", "text": ""}, {"location": "record/inv_fastoct/00_00_log/#torchinverse", "title": "torch.inverse", "text": "<ul> <li>\u4f18\u5316\u524d</li> </ul> <ul> <li>torch.inverse </li> </ul> <ul> <li>\u4e3a\u4f55\u5355\u72ec\u6d4b\u8bd5 pose2inverse \u5feb\uff0c\u4f46\u653e\u5728\u91cc\u9762\u786e\u662f torch.inverse \u5feb</li> </ul>"}, {"location": "record/inv_fastoct/00_00_log/#ssim", "title": "ssim", "text": "<ul> <li>ssim \u8ba1\u7b97\u8017\u65f6\u660e\u663e</li> </ul>"}, {"location": "record/inv_fastoct/00_00_log/#_2", "title": "\u534a\u7cbe\u5ea6", "text": "<ul> <li>\u589e\u52a0\u4e86\u534a\u7cbe\u5ea6\uff08\u53ef\u4ee5\u652f\u6301batch\u4e3a4\uff09</li> </ul>"}, {"location": "record/inv_fastoct/00_00_log/#batch", "title": "\u591abatch\u6e32\u67d3\u5668", "text": "<ul> <li>\u4f18\u5316\u524d\uff1a</li> </ul>"}, {"location": "record/inv_fastoct/00_00_todolist/", "title": "00 00 todolist", "text": "<ul> <li> \u5f00\u53d1</li> <li> <p> \u652f\u6301\u591abatch</p> <p>\u52a0\u5165\u652f\u6301\u591abatch\u6e32\u67d3\u540e\uff0cwarning\uff1a</p> <p></p> </li> <li> <p> \u989c\u8272\u5b66\u4e60\u7684\u95ee\u9898</p> <ul> <li> \u5b9e\u9a8c\uff1a\u5224\u65ad\u662f\u54ea\u4e00\u6b65\u51fa\u4e86\u95ee\u9898\uff1a</li> <li> \u53ef\u5fae\u6e32\u67d3\u5668\u7684\u8ba1\u7b97\uff08\u5982\u4f55\u9a8c\u8bc1@\u5c91\u8fd0\u6c60\uff09</li> <li> \u628a\u53ef\u5fae\u6e32\u67d3\u5668\u8fd9\u4e00\u5757\u513f\u641e\u660e\u767d</li> <li> \u53ef\u5fae\u6e32\u67d3\u5668\u652f\u6301\u591aimage loss</li> <li> \u4e0d\u540closs\u7684grad\u6709\u6570\u91cf\u7ea7\u5dee\u8ddd</li> </ul> </li> <li> <p> \u652f\u6301\u591a\u7ebf\u7a0b\u6e32\u67d3</p> </li> <li> <p> \u652f\u6301\u6df1\u5ea6\u6e32\u67d3</p> </li> <li> <p> \u6dfb\u52a0\u5149\u7167\u76f4\u63a5\u76d1\u7763\u635f\u5931</p> <ul> <li> \uff01\uff01\u4f18\u5148\uff1a\u627e\u5230valid\u8fc7\u7a0b\u6162\u7684\u539f\u56e0</li> </ul> </li> <li> <p> \u6dfb\u52a0test.py \u7f51\u7edc</p> </li> <li> <p> \u6a21\u578b\u7684\u526a\u679d/\u538b\u7f29 PyTorch Lightning V1.2.0\u65b0\u7279\u6027\u4ee3\u7801\u4ecb\u7ecd - \u77e5\u4e4e (zhihu.com)</p> </li> <li> <p> pytorch_lightning\u6a21\u578b\u8bad\u7ec3\u52a0\u901f\u6280\u5de7\u4e0e\u6da8\u70b9\u6280\u5de7-\u817e\u8baf\u4e91\u5f00\u53d1\u8005\u793e\u533a-\u817e\u8baf\u4e91 (tencent.com)</p> </li> <li> <p> \u652f\u6301\u7403\u9762\u51fd\u6570</p> </li> <li> <p> \u203c\ufe0f \u6027\u80fd\u4f18\u5316</p> </li> </ul>"}, {"location": "record/inv_fastoct/00_00_todolist/#_1", "title": "\u601d\u8003\u4e0e\u8c03\u7814", "text": "<ul> <li> \u6881\u8001\u5e08\uff1a \u8c03\u7814\u5149\u7167\u4f30\u8ba1\u7684\u5e94\u7528\uff0c\u7279\u522b\u662f\u5149\u7167\u4e00\u81f4\u6027/\u589e\u5f3a\u73b0\u5b9e \u5149\u7167\u4f30\u8ba1\u7684\u5e94\u7528\u573a\u666f.md </li> <li> \u5f15\u5165\u516b\u53c9\u6811\u7684\u5149\u7167\u4f30\u8ba1\u4e0e\u865a\u5b9e\u878d\u5408\u7b97\u6cd5\uff0c\u53ef\u4ee5\u7ed9VR\u5e26\u6765\u54ea\u4e9b\u5168\u65b0\u7684\u4f53\u9a8c/\u573a\u666f</li> <li> \u516b\u53c9\u6811\u5e26\u6765\u7684\u662f\u65f6\u95f4\u7a7a\u95f4\u5229\u7528\u7387\u7684\u63d0\u5347\uff0c\u8fd9\u80fd\u5e26\u6765\u4ec0\u4e48\uff1f\u600e\u4e48\u7528\u5b9e\u9a8c\u9a8c\u8bc1\uff1f\u6709\u6ca1\u6709\u4e00\u4e2aVR\u91cc\u7684\u573a\u666f\uff0c\u539f\u6765\u4e0d\u652f\u6301\uff0c\u73b0\u5728\u652f\u6301\u4e86</li> </ul>"}, {"location": "record/inv_fastoct/develop/diff_render/01_format_trans/", "title": "\u5750\u6807\u7cfb\u5b9a\u4e49", "text": ""}, {"location": "record/inv_fastoct/develop/diff_render/01_format_trans/#_1", "title": "\u5750\u6807\u7cfb\u89c4\u5b9a", "text": ""}, {"location": "record/inv_fastoct/develop/diff_render/01_format_trans/#film-space-coordinates", "title": "film space coordinates", "text": "\\[ \\frac{x'}{x}=\\frac{y'}{y}=\\frac{f}{z} \\quad \\Rightarrow \\quad  \\begin{pmatrix}x' \\\\ y' \\\\ 1\\end{pmatrix}=\\frac{1}{z}\\begin{pmatrix}f &amp; 0 &amp; 0 \\\\ 0 &amp; f &amp; 0 \\\\ 0 &amp; 0 &amp; 1\\end{pmatrix}\\begin{pmatrix}x \\\\ y \\\\ z\\end{pmatrix} \\]"}, {"location": "record/inv_fastoct/develop/diff_render/01_format_trans/#screen-space-coordinates", "title": "screen space coordinates", "text": ""}, {"location": "record/inv_fastoct/develop/diff_render/01_format_trans/#_2", "title": "\u4e00\u822c\u6a21\u578b", "text": "\\[ \\begin{pmatrix}u \\\\ v \\\\ 1\\end{pmatrix}=\\begin{pmatrix}\\alpha &amp; 0 &amp; t_x \\\\ 0 &amp; \\beta &amp; t_y\\\\ 0 &amp; 0 &amp; 1\\end{pmatrix}\\begin{pmatrix}x' \\\\ y' \\\\ 1\\end{pmatrix} \\]"}, {"location": "record/inv_fastoct/develop/diff_render/01_format_trans/#_3", "title": "\u6e32\u67d3\u91c7\u7528\u7684\u5177\u4f53\u6a21\u578b", "text": "\\[ \\begin{pmatrix}u \\\\ v \\\\ 1\\end{pmatrix}=\\begin{pmatrix}\\alpha &amp; 0 &amp; t_x \\\\ 0 &amp; \\beta &amp; t_y\\\\ 0 &amp; 0 &amp; 1\\end{pmatrix}\\begin{pmatrix}x' \\\\ y' \\\\ 1\\end{pmatrix},\\quad\\mathbf{where}\\ \\  \\begin{cases} \\alpha=image\\_height/2/half\\_height\\\\ \\beta=image\\_width/2/half\\_width\\\\ t_x=image\\_width/2\\\\ t_y=image\\_height/2 \\end{cases} \\]"}, {"location": "record/inv_fastoct/develop/diff_render/01_ft01_i2p/", "title": "\u56fe\u50cf\u8f6c\u70b9\u4e91", "text": ""}, {"location": "record/inv_fastoct/develop/diff_render/01_ft01_i2p/#image-to-point-cloud", "title": "Image to Point Cloud", "text": ""}, {"location": "record/inv_fastoct/develop/diff_render/01_ft01_i2p/#_1", "title": "\u8f93\u5165\u8f93\u51fa\u6570\u636e", "text": "<ul> <li>\u8f93\u5165\u6570\u636e\uff1a</li> <li>\u6df1\u5ea6\u56fe depth \uff1a<code>depth[u, v]</code> \u8868\u793a\u50cf\u7d20\u70b9 \\((u,v)\\) \u5bf9\u5e94\u7684\u573a\u666f\u4e2d\u7684\u4e09\u7ef4\u70b9\u7684 \\(z\\) \u503c\u3002</li> <li>\u76f8\u673a\u5185\u53c2\u77e9\u9635 intrinsics</li> <li> <p>\u76f8\u673a\u5916\u53c2\u77e9\u9635/\u76f8\u673a\u4f4d\u59ff extrinsics\uff08\u53ef\u9009\uff09</p> </li> <li> <p>\u8f93\u51fa\u6570\u636e\uff1a</p> </li> <li>\u70b9\u4e91 point cloud\uff1a<code>(x, y, z)</code> \u8868\u793a\u70b9\u5728\u76f8\u673a\u6216\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u4e09\u7ef4\u5750\u6807\u3002</li> </ul>"}, {"location": "record/inv_fastoct/develop/diff_render/01_ft01_i2p/#_2", "title": "\u76f8\u673a\u5185\u53c2\u77e9\u9635", "text": "<p>\u76f8\u673a\u5185\u53c2\uff08intrinsics\uff09\u662f\u6307\u76f8\u673a\u7684\u5149\u5b66\u53c2\u6570\uff0c\u5305\u62ec\u7126\u8ddd\u3001\u50cf\u7d20\u5927\u5c0f\u3001\u4e3b\u70b9\u7b49\u3002\u5b83\u4eec\u51b3\u5b9a\u4e86\u56fe\u50cf\u5728\u76f8\u673a\u6210\u50cf\u8fc7\u7a0b\u4e2d\u7684\u6295\u5f71\u5173\u7cfb\u548c\u7578\u53d8\u60c5\u51b5\u3002\u76f8\u673a\u5185\u53c2\u901a\u5e38\u901a\u8fc7\u6807\u5b9a\u83b7\u53d6\uff0c\u53ef\u4ee5\u7528\u4e8e\u6821\u6b63\u56fe\u50cf\u7578\u53d8\u548c\u8ba1\u7b97\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u7269\u4f53\u4f4d\u7f6e\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5 \u5229\u7528\u76f8\u673a\u5185\u53c2\u77e9\u9635\u548c\u6df1\u5ea6\u56fe\u5c06\u70b9\u7531 \u5c4f\u5e55\u5750\u6807\u7cfb \u8f6c\u6362\u5230 \u76f8\u673a\u5750\u6807\u7cfb \u3002\u5177\u4f53\u63a8\u5bfc\u5982\u4e0b\u3002</p> <p>\u7531\u4e0a\u4e00\u8282\uff0c\u6211\u4eec\u77e5\u9053 \u76f8\u673a\u5750\u6807\u7cfb \u4e2d\u7684\u70b9 \\(P\\) \u6295\u5f71\u5230 \u80f6\u7247\u5750\u6807\u7cfb\uff0c\u518d\u8f6c\u6362\u5230 \u5c4f\u5e55\u5750\u6807\u7cfb \u5171\u7ecf\u5386\u4e86\u4e24\u6b21\u77e9\u9635\u53d8\u6362\uff1a</p> \\[ \\begin{pmatrix}x' \\\\ y' \\\\ 1\\end{pmatrix}=\\frac{1}{z}\\begin{pmatrix}f &amp; 0 &amp; 0 \\\\ 0 &amp; f &amp; 0 \\\\ 0 &amp; 0 &amp; 1\\end{pmatrix}\\begin{pmatrix}x \\\\ y \\\\ z\\end{pmatrix} ,\\quad \\begin{pmatrix}u \\\\ v \\\\ 1\\end{pmatrix}=\\begin{pmatrix}\\alpha &amp; 0 &amp; t_x \\\\ 0 &amp; \\beta &amp; t_y\\\\ 0 &amp; 0 &amp; 1\\end{pmatrix}\\begin{pmatrix}x' \\\\ y' \\\\ 1\\end{pmatrix} \\] <p>\u5408\u5e76\u4e24\u6b21\u77e9\u9635\u53d8\u6362\uff0c\u53ef\u4ee5\u5f97\u5230\u76f8\u673a\u5750\u6807\u7cfb\u4e0e\u5c4f\u5e55\u5750\u6807\u7cfb\u7684\u8f6c\u6362\u5173\u7cfb\uff1a</p> \\[ \\begin{pmatrix}u \\\\ v \\\\ 1\\end{pmatrix}=\\begin{pmatrix}\\alpha &amp; 0 &amp; t_x \\\\ 0 &amp; \\beta &amp; t_y\\\\ 0 &amp; 0 &amp; 1\\end{pmatrix}\\frac{1}{z}\\begin{pmatrix}f &amp; 0 &amp; 0 \\\\ 0 &amp; f &amp; 0 \\\\ 0 &amp; 0 &amp; 1\\end{pmatrix}\\begin{pmatrix}x \\\\ y \\\\ z\\end{pmatrix} \\quad \\Rightarrow \\quad  \\begin{pmatrix}u \\\\ v \\\\ 1\\end{pmatrix}=\\frac{1}{z}\\begin{pmatrix}\\alpha f&amp; 0 &amp; t_x \\\\ 0 &amp; \\beta f&amp; t_y\\\\ 0 &amp; 0 &amp; 1\\end{pmatrix}\\begin{pmatrix}x \\\\ y \\\\ z\\end{pmatrix}  \\quad \\Rightarrow \\quad  z \\begin{pmatrix}u \\\\ v \\\\ 1\\end{pmatrix}=\\mathbf{K}\\begin{pmatrix}x \\\\ y \\\\ z\\end{pmatrix} \\] <p>\u4e0a\u5f0f\u4e2d\u7684 \\(\\mathbf{K}\\) \u5373\u4e3a\u76f8\u673a\u5185\u53c2\u77e9\u9635\u3002\u56e0\u6b64\uff0c \u5728\u5df2\u77e5\u6df1\u5ea6\u56fe\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u5f0f\u5f97\u5230\u76f8\u673a\u5750\u6807\u7cfb\u4e0b\u7684\u70b9\u4e91 \uff1a</p> \\[ \\begin{pmatrix}x \\\\ y \\\\ z\\end{pmatrix}=\\mathbf{K^{-1}}\\begin{pmatrix}u \\\\ v \\\\ 1\\end{pmatrix}\\cdot z \\quad\\Rightarrow\\quad \\textcolor{blue}{ \\begin{pmatrix}x \\\\ y \\\\ z\\end{pmatrix}=\\mathbf{K^{-1}}\\begin{pmatrix}u \\\\ v \\\\ 1\\end{pmatrix}\\cdot \\mathbf{depth}_{u,v}} \\]"}, {"location": "record/inv_fastoct/develop/diff_render/01_ft01_i2p/#_3", "title": "\u76f8\u673a\u5916\u53c2\u77e9\u9635", "text": "<p>\u76f8\u673a\u5916\u53c2\uff08extrinsics\uff09\u662f\u6307\u76f8\u673a\u5728\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u4f4d\u7f6e\u548c\u59ff\u6001\uff0c\u901a\u5e38\u5305\u62ec\u76f8\u673a\u7684\u5e73\u79fb\u5411\u91cf\u548c\u65cb\u8f6c\u77e9\u9635\u3002\u5b83\u4eec\u63cf\u8ff0\u4e86\u76f8\u673a\u62cd\u6444\u56fe\u50cf\u65f6\u76f8\u5bf9\u4e8e\u7269\u4f53\u7684\u4f4d\u7f6e\u548c\u65b9\u5411\u5173\u7cfb\u3002\u76f8\u673a\u5916\u53c2\u53ef\u4ee5\u901a\u8fc7\u8ba1\u7b97\u673a\u89c6\u89c9\u4e2d\u7684\u6807\u5b9a\u65b9\u6cd5\u83b7\u53d6\uff0c\u6216\u8005\u901a\u8fc7\u4f20\u611f\u5668\u7684\u6570\u636e\u878d\u5408\u8fdb\u884c\u4f30\u8ba1\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5 \u5229\u7528\u76f8\u673a\u5916\u53c2\u77e9\u9635\u5c06\u70b9\u7531 \u76f8\u673a\u5750\u6807\u7cfb \u8f6c\u6362\u5230 \u4e16\u754c\u5750\u6807\u7cfb \u3002\u76f8\u673a\u7684\u4f4d\u59ff\u7531\u65cb\u8f6c\u77e9\u9635 \\(\\mathbf{R}\\) \u548c \u5e73\u79fb\u5411\u91cf \\(\\mathbf{t}\\) \u6765\u63cf\u8ff0\uff0c\u6709</p> \\[ \\mathbf{camera\\ pose}=\\begin{pmatrix}\\mathbf{R}|\\mathbf{t}\\end{pmatrix} \\quad\\Rightarrow\\quad \\textcolor{blue}{ \\begin{pmatrix}x_w \\\\ y_w \\\\ z_w\\end{pmatrix}=\\mathbf{R}\\begin{pmatrix}x \\\\ y \\\\ z\\end{pmatrix} + \\mathbf{t}} \\]"}, {"location": "record/inv_fastoct/develop/diff_render/01_ft02_p2v/", "title": "\u70b9\u4e91\u8f6c\u4f53\u7d20", "text": ""}, {"location": "record/inv_fastoct/develop/diff_render/01_ft02_p2v/#point-cloud-to-volume", "title": "Point Cloud to Volume", "text": ""}, {"location": "record/inv_fastoct/develop/diff_render/01_ft02_p2v/#_1", "title": "\u8f93\u5165\u8f93\u51fa\u6570\u636e", "text": "<ul> <li>\u8f93\u5165\u6570\u636e</li> <li>\u70b9\u4e91 point cloud\uff1a<code>(x,y,z)</code> \u8868\u793a\u70b9\u5728\u76f8\u673a\u6216\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u4e09\u7ef4\u5750\u6807\u3002</li> <li>\u8f93\u51fa\u6570\u636e</li> <li>\u4f53\u7d20\u7f51\u683c volume\uff1a<code>(i,j,k)</code> \u8868\u793a\u70b9\u5728\u4f53\u7d20\u7f51\u683c\u4e2d\u7684\u7d22\u5f15\u5750\u6807\u3002</li> </ul>"}, {"location": "record/inv_fastoct/develop/diff_render/01_ft02_p2v/#_2", "title": "\u8f6c\u6362\u77e9\u9635", "text": "<p>\u4ece\u70b9\u4e91\u5230\u4f53\u7d20\u7684\u8f6c\u6362\u4efb\u52a1\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u8868\u8fbe\u5f0f\u6765\u6982\u62ec\uff0c\u5373 \u5c06\u8fde\u7eed\u7684\u4e09\u7ef4\u5750\u6807\u79bb\u6563\u5316\u4e3a\u56fa\u5b9a\u5c3a\u5bf8\u7684\u4f53\u7d20\u7f51\u683c\u7d22\u5f15 \u3002</p> \\[ (x_{min},x_{max})\\times(y_{min},y_{max})\\times(z_{min},z_{max})\\quad \\to \\quad (0,W)\\times(0,H)\\times(0,D) \\] <p>\u6709\u5f88\u591a\u65b9\u5f0f\u5b8c\u6210\u8fd9\u79cd\u6620\u5c04\uff0c\u4e0b\u9762\u4ec5\u4ecb\u7ecd\u5728\u672c\u6587\u7684\u5b9e\u8df5\u4e2d\u91c7\u7528\u7684\u65b9\u6cd5\u3002</p> <ol> <li>\u7ed9\u5b9a\u70b9\u4e91\u7684\u5305\u56f4\u76d2 bbox\uff0c\u5148\u5c06\u70b9\u4e91\u5750\u6807\u5f52\u4e00\u5316\u5230 \\((-1, 1)^3\\) \uff0c\u4e0b\u56fe\u4ee5\u4e8c\u7ef4\u4e3a\u4f8b\u3002</li> </ol> <p></p> \\[ \\textcolor{blue}{\\begin{pmatrix}x' \\\\ y' \\\\ z'\\end{pmatrix}=\\frac{1}{max}\\begin{pmatrix}x \\\\ y \\\\ z\\end{pmatrix}},    \\quad\\mathbf{where}\\ \\     max=\\mathrm{max}(\\mathrm{abs}(\\mathbf{bbox}))    \\] <ol> <li>\u7ed9\u5b9a\u4f53\u7d20\u7684\u5f62\u72b6 \\((H,W,D)\\) \uff0c\u5c06\u5750\u6807\u7531 \\((-1, 1)^3\\) \u8f6c\u6362\u4e3a \\((0,W)\\times(0,H)\\times(0,D)\\) \uff0c\u4e0b\u56fe\u4f9d\u7136\u4ee5\u4e8c\u7ef4\u4e3a\u4f8b\u3002</li> </ol> <p></p> \\[ \\begin{pmatrix}x'' \\\\ y'' \\\\ z''\\end{pmatrix}=\\begin{pmatrix}W/2 &amp;0 &amp; 0\\\\ 0 &amp; H/2 &amp; 0  \\\\ 0 &amp; 0 &amp; D/2\\end{pmatrix}\\begin{bmatrix}\\begin{pmatrix}x' \\\\ y' \\\\ z'\\end{pmatrix}+\\begin{pmatrix}1 \\\\ 1 \\\\ 1\\end{pmatrix}\\end{bmatrix}    \\quad\\Rightarrow\\quad \\textcolor{blue}{    \\begin{pmatrix}x'' \\\\ y'' \\\\ z'' \\\\ 1\\end{pmatrix}=\\frac{1}{2}\\begin{pmatrix}W &amp;0 &amp; 0 &amp; W\\\\ 0 &amp; H &amp; 0 &amp; H  \\\\ 0 &amp; 0 &amp; D &amp; D \\\\ 0 &amp; 0 &amp; 0 &amp; 1\\end{pmatrix}\\begin{pmatrix}x' \\\\ y' \\\\ z' \\\\ 1\\end{pmatrix}    }    \\]"}, {"location": "record/inv_fastoct/develop/diff_render/01_ft03_v2o/", "title": "\u4f53\u7d20\u8f6c\u516b\u53c9\u6811", "text": ""}, {"location": "record/inv_fastoct/develop/diff_render/01_ft03_v2o/#volume-to-octree", "title": "Volume to Octree", "text": ""}, {"location": "record/inv_fastoct/develop/diff_render/01_ft04_o2g/", "title": "\u516b\u53c9\u6811\u8f6c\u5bf9\u5076\u56fe", "text": ""}, {"location": "record/inv_fastoct/develop/diff_render/01_ft04_o2g/#octree-to-graph", "title": "Octree to Graph", "text": ""}, {"location": "record/inv_fastoct/develop/diff_render/02_RTE/", "title": "\u8f90\u5c04\u4f20\u8f93\u65b9\u7a0b", "text": "<p>Volume Rendering for Developers: Foundations (scratchapixel.com)</p> <p>NeRF\u5165\u95e8\u4e4b\u4f53\u6e32\u67d3 (Volume Rendering)</p>"}, {"location": "record/inv_fastoct/develop/diff_render/02_RTE/#_1", "title": "\u8f90\u5c04\u4f20\u8f93\u65b9\u7a0b", "text": "<p>\u4e91\u3001\u96fe\u3001\u6d51\u6d4a\u7684\u6c34\u7b49\u7c7b\u4f3c\u7684\u4ecb\u8d28\u53ef\u4ee5\u6563\u5c04\u5149\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u8fd9\u4e9b\u4ecb\u8d28\u53c2\u4e0e\u5149\u7684\u4f20\u8f93\uff0c\u6545\u6211\u4eec\u628a\u6b64\u7c7b\u4ecb\u8d28\u79f0\u4f5c \u53c2\u4e0e\u4ecb\u8d28\uff08participating media\uff09 \u3002</p> <p></p> <p>\u5982\u679c\u5149\u5728\u975e\u771f\u7a7a\u4e2d\u4f20\u64ad\uff0c\u6211\u4eec\u6709\u5fc5\u8981\u8003\u8651\u73af\u5883\u4e2d\u53c2\u4e0e\u4ecb\u8d28\u5bf9\u5149\u7684\u4f20\u8f93\u7684\u5f71\u54cd\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u72ed\u7a84\uff08\u51c6\u76f4\uff09\u5149\u675f\u7a7f\u8fc7\u5706\u67f1\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u56db\u79cd\u4e0d\u540c\u7684\u65b9\u5f0f\u4e0e\u4ecb\u8d28\u8fdb\u884c\u76f8\u4e92\u4f5c\u7528\uff1a</p> <ul> <li>\u5438\u6536\uff08Absorption\uff09 \uff1a\u4e00\u4e9b\u5149\u88ab\u5438\u6536\u8f6c\u5316\u6210\u5176\u4ed6\u5f62\u5f0f\u7684\u80fd\u91cf\uff0c\u5982\u70ed\u80fd\u3002\u5149\u675f\u8f90\u5c04\u5f3a\u5ea6\u964d\u4f4e\u3002</li> <li>\u53d1\u5c04\uff08Emission\uff09 \uff1a\u6c14\u4f53\u5728\u8fbe\u5230\u4e00\u5b9a\u6e29\u5ea6\u65f6\u4f1a\u53d1\u5c04\u5149\u3002\u7535\u5b50\u83b7\u5f97\u80fd\u91cf\uff0c\u4ee5\u5149\u5b50\u7684\u5f62\u5f0f\u91ca\u653e\u51fa\u6765\u3002\u8fd9\u4e9b\u5149\u5b50\u6240\u53d6\u7684\u65b9\u5411\u662f\u968f\u673a\u7684\uff0c\u4f46\u6700\u7ec8\u5176\u4e2d\u4e00\u4e9b\u5c06\u6cbf\u7740\u5149\u675f\u7684\u8def\u5f84\u884c\u8fdb\u3002\u5149\u675f\u8f90\u5c04\u5f3a\u5ea6\u589e\u52a0\u3002</li> <li>\u5916\u6563\u5c04\uff08Out-scattering\uff09 \uff1a\u7ec4\u6210\u72ed\u7a84\u5149\u675f\u7684\u5149\u5b50\u671d\u5411\u773c\u775b\u524d\u8fdb\uff0c\u4f46\u5b83\u4eec\u53ef\u80fd\u65e0\u6cd5\u5168\u90e8\u5230\u8fbe\u773c\u775b\uff0c\u56e0\u4e3a\u5176\u4e2d\u4e00\u4e9b\u4f1a\u6cbf\u7740\u53e6\u4e00\u4e2a\uff08\u968f\u673a\u7684\uff09\u65b9\u5411\u6563\u5c04\u5f00\u6765\u3002\u5916\u90e8\u6563\u5c04\u7684\u5149\u5b50\u4e0d\u518d\u5728\u5149\u675f\u4e2d\uff0c\u56e0\u6b64\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5149\u675f\u7684\u8f90\u5c04\u5f3a\u5ea6\u4e5f\u4f1a\u964d\u4f4e\u3002</li> <li>\u5185\u6563\u5c04\uff08In-scattering\uff09 \uff1a\u6563\u5c04\u4e5f\u53ef\u80fd\u5bfc\u81f4\u843d\u5728\u4f53\u79ef\u5916\u7684\u4e00\u4e9b\u5149\u88ab\u504f\u8f6c\u5230\u6cbf\u7740\u6211\u4eec\u5149\u675f\u7684\u8def\u5f84\uff0c\u4f7f\u5149\u675f\u8f90\u5c04\u5f3a\u5ea6\u589e\u52a0\u3002</li> </ul> <p></p> <p>\u4e0a\u8ff0\u7269\u7406\u73b0\u8c61\u5728\u5f62\u5f0f\u4e0a\u53ef\u7528\u5982\u4e0b\u7684 \u8f90\u5c04\u4f20\u8f93\u65b9\u7a0b\uff08Radiative Transfer Equation\uff0cRTE\uff09 \u8868\u793a\uff1a</p> \\[ \\begin{aligned} (\\omega\\cdot\\nabla)L(\\mathbf{x},\\omega)&amp;= \\underbrace{-\\sigma_a(\\mathbf{x},\\omega)L(\\mathbf{x},\\omega)}_{absorption} \\underbrace{-\\sigma_s(\\mathbf{x},\\omega)L(\\mathbf{x},\\omega)}_{out-scattering} +\\underbrace{\\sigma_a(\\mathbf{x},\\omega)L_e(\\mathbf{x},\\omega)}_{emission} +\\underbrace{\\sigma_s(\\mathbf{x},\\omega)L_s(\\mathbf{x},\\omega)}_{in-scattering}\\\\ &amp;= \\underbrace{-\\sigma_t(\\mathbf{x},\\omega)L(\\mathbf{x},\\omega)}_{extinction} +\\underbrace{\\sigma_a(\\mathbf{x},\\omega)L_e(\\mathbf{x},\\omega)}_{emission} +\\underbrace{\\sigma_s(\\mathbf{x},\\omega)L_s(\\mathbf{x},\\omega)}_{in-scattering} \\end{aligned} \\] <p>\u65b9\u7a0b\u5de6\u4fa7\u662f\u5149\u7ebf\u7684\u8f90\u5c04\u5f3a\u5ea6 \\(L(\\mathbf{x},\\omega)\\) \u5728 \\(\\mathbf{x}\\) \u70b9\u5904\u6cbf \\(\\mathbf{\u03c9}\\) \u65b9\u5411\u7684\u53d8\u5316\u91cf\u3002\u53f3\u4fa7\u8868\u793a\u4e86\u5404\u79cd\u7269\u7406\u4f5c\u7528\u5bf9\u5176\u7684\u8d21\u732e\uff0c\u5176\u4e2d \\(\\sigma_a(\\cdot)\\) \u662f\u5438\u6536\u51fd\u6570\uff0c \\(\\sigma_s(\\cdot)\\) \u662f\u6563\u5c04\u51fd\u6570\uff0c\\(\\sigma_t(\\cdot)=\\sigma_a(\\cdot)+\\sigma_s(\\cdot)\\) \u662f\u6d88\u5149\u51fd\u6570\uff1b \\(L_e(\\mathbf{x},\\omega)\\) \u662f\u5728 \\(\\mathbf{x}\\) \u70b9\u5904\u7684\u7c92\u5b50\u6cbf \\(\\mathbf{\u03c9}\\) \u65b9\u5411\u53d1\u5c04\u7684\u8f90\u5c04\u5f3a\u5ea6\uff1b \\(L_s(\\mathbf{x},\\omega)\\) \u662f\u5728 \\(\\mathbf{x}\\) \u70b9\u5904\u7684\u7c92\u5b50\u63a5\u6536\u5230\u7684\u6765\u81ea\u56db\u9762\u516b\u65b9\u7684\u603b\u8f90\u5c04\u5f3a\u5ea6\uff0c\u5176\u8ba1\u7b97\u5f0f\u5982\u4e0b\uff0c\u5176\u4e2d \\(p(\\cdot)\\) \u662f\u5185\u6563\u5c04\u7684\u76f8\u51fd\u6570\uff08Phase function\uff09\uff0c\u5b83\u63cf\u8ff0\u7684\u662f\u4ecb\u8d28\u4e2d\u67d0\u4e2a\u70b9\u7684\u6563\u5c04\u5728\u5404\u4e2a\u7acb\u4f53\u89d2\u65b9\u5411\u4e0a\u7684\u5206\u5e03\u60c5\u51b5\u3002</p> \\[ L_s(\\mathbf{x},\\omega)=\\int_{\\Omega}{p(\\mathbf{x},\\omega',\\omega)L(\\mathbf{x},\\omega') \\mathrm{d}\\omega' } \\] <p>\u4e3a\u4ec0\u4e48\u5438\u6536\u9879\u4e0e\u53d1\u5c04\u9879\u7684\u7cfb\u6570\u76f8\u540c</p> <p>\u5728\u8f90\u5c04\u4f20\u8f93\u4e2d\uff0c\u5149\u7ebf\u7a7f\u8fc7\u4ecb\u8d28\u65f6\u4f1a\u4e0e\u4ecb\u8d28\u4e2d\u7684\u5206\u5b50\u6216\u539f\u5b50\u76f8\u4e92\u4f5c\u7528\u3002\u8fd9\u4e2a\u76f8\u4e92\u4f5c\u7528\u53ef\u4ee5\u5bfc\u81f4\u5149\u5b50\u88ab\u5438\u6536\u6216\u53d1\u5c04\u3002\u5438\u6536\u548c\u53d1\u5c04\u7684\u8fc7\u7a0b\u662f\u91cf\u5b50\u529b\u5b66\u4e2d\u7684\u57fa\u672c\u8fc7\u7a0b\uff0c\u5b83\u4eec\u7684\u6982\u7387\u540c\u65f6\u53d7\u5230\u4ecb\u8d28\u4e2d\u5206\u5b50\u6216\u539f\u5b50\u7684\u80fd\u7ea7\u7ed3\u6784\u7684\u5f71\u54cd\u3002 \u5728\u91cf\u5b50\u529b\u5b66\u7684\u6846\u67b6\u4e0b\uff0c\u5438\u6536\u548c\u53d1\u5c04\u662f\u5bf9\u79f0\u7684\u8fc7\u7a0b\uff0c\u5373\u4e00\u4e2a\u5206\u5b50\u6216\u539f\u5b50\u5438\u6536\u5149\u5b50\u7684\u6982\u7387\u548c\u5b83\u53d1\u5c04\u5149\u5b50\u7684\u6982\u7387\u662f\u76f8\u7b49\u7684\u3002\u56e0\u6b64\uff0c\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u8f90\u5c04\u4f20\u8f93\u65b9\u7a0b\u4e2d\u7684\u5438\u6536\u548c\u53d1\u5c04\u9879\u7cfb\u6570\u662f\u76f8\u7b49\u7684\u3002 \u5f53\u7136\uff0c\u5728\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u5982\u975e\u5e73\u8861\u6001\u4ecb\u8d28\u4e2d\uff0c\u5438\u6536\u548c\u53d1\u5c04\u7684\u8fc7\u7a0b\u53ef\u80fd\u4e0d\u518d\u662f\u5bf9\u79f0\u7684\uff0c\u8fd9\u65f6\u5438\u6536\u9879\u548c\u53d1\u5c04\u9879\u7684\u7cfb\u6570\u5c31\u4f1a\u6709\u6240\u4e0d\u540c\u3002\u7c7b\u4f3c\u7684\uff0c\u5185\u6563\u5c04\u9879\u4e0e\u5916\u6563\u5c04\u9879\u7cfb\u6570\u4e5f\u662f\u76f8\u540c\u7684\u3002</p>"}, {"location": "record/inv_fastoct/develop/diff_render/02_RTE/#_2", "title": "\u4f53\u6e32\u67d3\u65b9\u7a0b", "text": "<p>\u4f53\u6e32\u67d3\u7684\u793a\u610f\u56fe\u5982\u4e0b\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u4f53\u6e32\u67d3\u65b9\u7a0b\u662f\u8f90\u5c04\u4f20\u8f93\u65b9\u7a0b\u5728\u5149\u7167\u4f20\u8f93\u8def\u5f84\u4e0a\u7684\u79ef\u5206\u5f62\u5f0f\u3002</p> <p></p> <p>\u5177\u4f53\u5730\uff0c\u6211\u4eec\u91cd\u65b0\u5b9a\u4e49\u8f90\u5c04\u51fd\u6570\u4e3a\u8ddd\u79bb \\(s\\) \u7684\u51fd\u6570\uff0c\u5373 \\(L(\\mathbf{x},\\omega)\\to L(s)\\)\uff0c\u539f\u8f90\u5c04\u4f20\u8f93\u65b9\u7a0b\u8868\u793a\u4e3a\uff1a</p> \\[ \\frac{\\mathrm{d}L}{\\mathrm{d}s}=-\\sigma_t(s)L(s)+\\sigma_a(s)L_e(s)+\\sigma_s(s)L_s(s) \\] <p>\u8fd9\u662f\u5178\u578b\u7684\u4e00\u9636\u975e\u9f50\u6b21\u7ebf\u6027\u5fae\u5206\u65b9\u7a0b\uff0c\u5f62\u5f0f\u4e3a\uff1a</p> \\[ y'+p(x)y=q(x)\\\\ \\implies y(x)=e^{-\\int{p(x)}\\mathrm{d}x}(\\int{e^{-\\int{p(x)}\\mathrm{d}x}q(x)\\mathrm{d}x}+C) \\] <p>\u76f8\u5e94\u5730\uff0c\u6c42\u89e3\u8fd9\u4e2a\u5fae\u5206\u65b9\u7a0b\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230 \u4f53\u6e32\u67d3\u65b9\u7a0b \uff1a</p> \\[ L(s)=\\int^s_{t=0}e^{-\\int^t_{q=0}\\sigma_t(q)\\mathrm{d}q}[\\sigma_a(t)L_e(t)+\\sigma_s(t)L_s(t)]\\mathrm{d}t+L(0)e^{-\\int^s_{t=0}\\sigma_t(t)\\mathrm{d}t} \\] <p>\u900f\u5c04\u6bd4</p> <p>\u4ece\u8f90\u5c04\u4f20\u8f93\u65b9\u7a0b\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0c\u5165\u5c04\u5149\u5728\u7ecf\u8fc7\u4ecb\u8d28 (\u7c92\u5b50\u7fa4) \u540e\uff0c\u8f90\u5c04\u5f3a\u5ea6\u4f1a\u8870\u51cf\uff0c\u4e14\u8870\u51cf\u901f\u5ea6\u4e0e\u4ecb\u8d28\u7684\u6027\u8d28\u6709\u5173\u3002\u4eba\u4eec\u5b9a\u4e49\u4e86\u900f\u5c04\u6bd4\u8fd9\u4e2a\u7269\u7406\u91cf\u6765\u8868\u5f81\u8fd9\u4e00\u6027\u8d28\u3002\u5177\u4f53\u5730\uff0c\u900f\u5c04\u6bd4\u662f\u4ecb\u8d28\u5165\u5c04\u5149\u5728\u5165\u5c04\u70b9\u4e0e\u51fa\u5c04\u70b9\u7684\u8f90\u5c04\u5f3a\u5ea6\u7684\u6bd4\u503c\u3002</p> <p>\u6839\u636e\u900f\u5c04\u6bd4\u7684\u5b9a\u4e49\uff0c\u53ef\u4ee5\u5f97\u5230\u5176\u8868\u8fbe\u5f0f\u4e3a</p> \\[ T(a\\to b)=\\frac{L(b)}{L(a)}=\\frac{L(0)e^{-\\int^b_{t=0}\\sigma_t(t)\\mathrm{d}t}}{L(0)e^{-\\int^a_{t=0}\\sigma_t(t)\\mathrm{d}t}}=e^{-\\int^b_{t=a}\\sigma_t(t)\\mathrm{d}t} \\] <p>\u56e0\u6b64\uff0c\u6211\u4eec\u5f97\u5230\u4e86 \u6700\u7ec8\u7684\u4f53\u6e32\u67d3\u65b9\u7a0b \u4e3a</p> \\[ L(s)=\\int^s_{t=0}T(t)[\\sigma_a(t)L_e(t)+\\sigma_s(t)L_s(t)]\\mathrm{d}t+L(0)T(s),\\quad T(s)=T(0\\to s)=e^{-\\int^s_{t=0}\\sigma_t(t)\\mathrm{d}t} \\]"}, {"location": "record/inv_fastoct/develop/diff_render/02_vol_renderer/", "title": "\u4f53\u6e32\u67d3\u65b9\u7a0b", "text": "<p>Volume Rendering for Developers: Foundations (scratchapixel.com)</p> <p>NeRF\u5165\u95e8\u4e4b\u4f53\u6e32\u67d3 (Volume Rendering)</p>"}, {"location": "record/inv_fastoct/develop/diff_render/02_vol_renderer/#_1", "title": "\u7b80\u5316\u65b9\u7a0b", "text": "<p>\u5047\u8bbe\u4e0d\u8003\u8651\u5149\u5728\u4ecb\u8d28\u4e2d\u7684\u6563\u5c04\u73b0\u8c61\uff0c\u5219\u539f\u8f90\u5c04\u4f20\u8f93\u65b9\u7a0b\u53ef\u4ee5\u7b80\u5316\u4e3a\uff1a</p> \\[ (\\omega\\cdot\\nabla)L(\\mathbf{x},\\omega)= \\underbrace{-\\sigma_a(\\mathbf{x},\\omega)L(\\mathbf{x},\\omega)}_{absorption} +\\underbrace{\\sigma_a(\\mathbf{x},\\omega)L_e(\\mathbf{x},\\omega)}_{emission} \\] <p>\u5bf9\u5e94\u5730\uff0c\u6e32\u67d3\u65b9\u7a0b\u53ef\u4ee5\u7b80\u5316\u4e3a\uff08\u540c\u65f6\u5ffd\u7565\u80cc\u666f\u989c\u8272\uff0c\u5373\u4ee4 \\(L(0)=0\\)\uff09\uff1a</p> \\[ L(\\mathbf{x},\\omega)=L(s)=\\int^s_{t=0}T(t)\\sigma_a(t)L_e(t)\\mathrm{d}t,\\quad T(s)=e^{-\\int^s_{t=0}\\sigma_a(t)\\mathrm{d}t} \\]"}, {"location": "record/inv_fastoct/develop/diff_render/02_vol_renderer/#_2", "title": "\u79bb\u6563\u5316\u65b9\u7a0b", "text": "<p>\u4e0a\u8ff0\u79ef\u5206\u5f0f\u662f\u65e0\u6cd5\u5728\u8ba1\u7b97\u673a\u4e2d\u76f4\u63a5\u8ba1\u7b97\u7684\uff0c\u9700\u8981\u5c06\u5176\u79bb\u6563\u5316\u624d\u80fd\u6c42\u89e3\u3002\u4e0b\u9762\u63a8\u5bfc\u4f53\u6e32\u67d3\u7b80\u5316\u65b9\u7a0b\u7684\u79bb\u6563\u6c42\u89e3\u5f0f\u3002</p> <p></p> <p>\u8fd9\u91cc\u91c7\u7528\u6700\u7b80\u5355\u7684\u7b49\u8ddd\u91c7\u6837\u6cd5\uff0c\u5c06\u6574\u4e2a\u5149\u8def \\([0,s]\\) \u5212\u5206\u4e3a \\(N\\) \u4e2a\u76f8\u7b49\u95f4\u8ddd\u7684\u533a\u95f4 \\([t_n,t_{n-1}]\\)\uff0c\u5219\u6709\uff1a</p> \\[ L(t_n\\to t_{n-1})=\\int_{t=t_n}^{t_{n+1}}T(t)\\sigma_a(t)L_e(t)\\mathrm{d}t \\] <p>\u5047\u8bbe\u6bcf\u4e2a\u533a\u95f4\u5185\u7684 \\(\\sigma\\) \u548c \\(L_e\\) \u5747\u4e0d\u53d8\uff0c\u8bb0\u4e3a \\(\\sigma_n\\) \u548c \\(C_n\\) \uff0c\u5219\u6709\uff1a</p> \\[ L(t_n\\to t_{n-1})=\\sigma_nC_n\\int_{t=t_n}^{t_{n+1}}T(t)\\mathrm{d}t \\] <p>\u8fdb\u4e00\u6b65\u5730\uff0c\u5c06 \\(T(t)\\) \u62c6\u5206\u4e3a\u4e24\u6bb5\u7684\u4e58\u79ef\u5f62\u5f0f\uff1a</p> \\[ T(t)=e^{-\\int^{t_n}_{0}\\sigma_a(u)\\mathrm{d}u}\\cdot e^{-\\int^t_{t_n}\\sigma_a(u)\\mathrm{d}u}=T(0\\to t_n)\\cdot T(t_n\\to t)=T(t_n)\\cdot T(t_n-t) \\] <p>\u76f8\u5e94\u5730\uff0c\u533a\u95f4\u5185\u7684\u8f90\u5c04\u5f3a\u5ea6\u7684\u79ef\u5206\u5f0f\u53d8\u4e3a\uff1a</p> \\[ \\begin{aligned} L(t_n\\to t_{n+1}) &amp;=\\sigma_nC_n\\int_{t=t_n}^{t_{n+1}}T(t_n)T(t_n\\to t)\\mathrm{d}t\\\\ &amp;=\\sigma_nC_nT(t_n)\\int_{t=t_n}^{t_{n+1}}e^{-\\int^{t}_{t_n}\\sigma_n\\mathrm{d}u}\\mathrm{d}t\\\\ &amp;=\\sigma_nC_nT(t_n)\\int_{t=t_n}^{t_{n+1}}e^{-\\sigma_n(t-t_n)}\\mathrm{d}t\\\\ &amp;=\\sigma_nC_nT(t_n)\\frac{e^{-\\sigma_n(t-t_n)}}{-\\sigma_n}\\mid^{t_{n+1}}_{t_{n}}\\\\ &amp;=C_nT(t_n)(1-e^{-\\sigma_n(t_{n+1}-t_n)}) \\end{aligned} \\] <p>\u4e0a\u5f0f\u4e2d\u7684 \\(T(t_n)\\) \u9879\u4ecd\u662f\u79ef\u5206\u5f0f\uff0c\u4e0b\u9762\u5c06\u5176\u79bb\u6563\u5316\uff0c\u5047\u8bbe\u6bcf\u4e2a\u5c0f\u533a\u95f4\u957f\u5ea6\u4e3a \\(\\delta_n=t_{n+1}-t_{n}\\) \uff0c\u5219\u6709\uff1a</p> \\[ T_n=T(t_n)=e^{-\\int^{t_n}_{0}\\sigma_a(u)\\mathrm{d}u}\\approx e^{-\\sum_{k=1}^{n-1}\\sigma_k\\delta_k} \\] <p>\u7531\u6b64\u5f97\u5230\u533a\u95f4\u5185\u7684\u8f90\u5c04\u5f3a\u5ea6\u7684\u79bb\u6563\u8868\u793a\uff1a</p> \\[ L(t_n\\to t_{n+1})=C_nT_n(1-e^{-\\sigma_n\\delta_n}),\\quad T_n=e^{-\\sum_{k=1}^{n-1}\\sigma_k\\delta_k} \\] <p>\u6700\u540e\uff0c\u5c06\u6240\u6709\u91c7\u6837\u533a\u95f4\u7684\u503c\u7d2f\u52a0\u5f97\u5230 \u4f53\u6e32\u67d3\u7b80\u5316\u65b9\u7a0b\u7684\u79bb\u6563\u8868\u8fbe \uff1a</p> \\[ L(\\mathbf{x},\\omega)=L(s)=\\sum_{n=1}^{N}C_nT_n(1-e^{-\\sigma_n\\delta_n}),\\quad T_n=e^{-\\sum_{k=1}^{n-1}\\sigma_k\\delta_k} \\]"}, {"location": "record/inv_fastoct/develop/diff_render/03_diff_vol_renderer/", "title": "\u53ef\u5fae\u4f53\u6e32\u67d3", "text": ""}, {"location": "record/inv_fastoct/develop/diff_render/03_diff_vol_renderer/#nerf", "title": "NeRF\u6e32\u67d3\u65b9\u7a0b\u6c42\u5bfc", "text": "<p>\u7531\u524d\u9762\u7684\u63a8\u5bfc\uff0c\u6211\u4eec\u5f97\u5230\u4e86NeRF\u7684\u6e32\u67d3\u65b9\u7a0b\u7684\u79bb\u6563\u8868\u8fbe\uff1a</p> \\[ L(\\mathbf{x},\\omega)=L(s)=\\sum_{n=1}^{N}C_nT_n(1-e^{-\\sigma_n\\delta_n}),\\quad T_n=e^{-\\sum_{k=1}^{n-1}\\sigma_k\\delta_k} \\] <p>\u4e0b\u9762\u6211\u4eec\u5206\u522b\u63a8\u5bfc\u8be5\u6e32\u67d3\u65b9\u7a0b\u5728\u91c7\u6837\u70b9 \\(t\\) \u5904\u7684\u5173\u4e8e\u989c\u8272\u5f3a\u5ea6\u4e0e\u5438\u6536\u7cfb\u6570\u7684\u5bfc\u6570\u8ba1\u7b97\u5f0f\u3002</p>"}, {"location": "record/inv_fastoct/develop/diff_render/03_diff_vol_renderer/#_1", "title": "\u5173\u4e8e\u989c\u8272\u5f3a\u5ea6\u7684\u5bfc\u6570", "text": "\\[ \\frac{\\partial{L(\\mathbf{x},\\omega)}}{\\partial{C_t}} = \\frac{\\partial(\\sum_{n=1}^{N}C_nT_n(1-e^{-\\sigma_n\\delta_n}))}{\\partial{C_t}} =T_t(1-e^{-\\sigma_t\\delta_t}) \\]"}, {"location": "record/inv_fastoct/develop/diff_render/03_diff_vol_renderer/#_2", "title": "\u5173\u4e8e\u5438\u6536\u7cfb\u6570\u7684\u5bfc\u6570", "text": "\\[ \\begin{aligned} \\frac{\\partial{L(\\mathbf{x},\\omega)}}{\\partial{\\sigma_t}} &amp;=\\frac{\\partial{(\\sum_{n=1}^{N}C_nT_n(1-e^{-\\sigma_n\\delta_n}))}}{\\partial{\\sigma_t}}\\\\ &amp;=\\sum_{n=t}^{N}C_n\\frac{\\partial{(T_n(1-e^{-\\sigma_n\\delta_n}))}}{\\partial{\\sigma_t}}\\\\ &amp;=\\sum_{n=t}^{N}C_nT_n\\frac{\\partial{(1-e^{-\\sigma_n\\delta_n})}}{\\partial{\\sigma_t}} +\\sum_{n=t}^{N}C_n\\frac{\\partial{T_n}}{\\partial{\\sigma_t}}(1-e^{-\\sigma_n\\delta_n})\\\\ &amp;=C_tT_te^{-\\sigma_t\\delta_t}\\delta_t +\\sum_{n=t+1}^{N}C_n\\frac{\\partial{T_n}}{\\partial{\\sigma_t}}(1-e^{-\\sigma_n\\delta_n}) \\end{aligned} \\] <p>\u8fdb\u4e00\u6b65\u5730\uff1a</p> \\[ \\begin{aligned} \\frac{\\partial{T_n}}{\\partial{\\sigma_t}} &amp;=\\frac{\\partial{(e^{-\\sum_{k=1}^{n-1}\\sigma_k\\delta_k}})}{\\partial{\\sigma_t}}\\\\ &amp;=\\frac{\\partial{(e^{-\\sum_{1}^{t-1}\\sigma_k\\delta_k}e^{-\\sum_{t+1}^{n}\\sigma_k\\delta_k}}e^{-\\sigma_t\\delta_t})}{\\partial{\\sigma_t}}\\\\ &amp;=\\frac{\\partial{(T_tT_{t+2\\to n}e^{-\\sigma_t\\delta_t})}}{\\partial{\\sigma_t}}\\\\ &amp;=-T_tT_{t+2\\to n}e^{-\\sigma_t\\delta_t}\\delta_t\\\\ &amp;=-T_n\\delta_t \\end{aligned} \\] <p>\u4ee3\u5165\u5230\u524d\u5f0f\u53ef\u5f97\uff0c\u6e32\u67d3\u65b9\u7a0b\u5173\u4e8e\u5438\u6536\u7cfb\u6570\u7684\u5bfc\u6570\u7684\u8868\u8fbe\u5f0f\u4e3a\uff1a</p> \\[ \\begin{aligned} \\frac{\\partial{L(\\mathbf{x},\\omega)}}{\\partial{\\sigma_t}} &amp;=C_tT_te^{-\\sigma_t\\delta_t}\\delta_t -\\sum_{n=t+1}^{N}C_nT_n(1-e^{-\\sigma_n\\delta_n})\\delta_t\\\\ \\end{aligned} \\] <p>\u6700\u540e\uff0c\u82e5\u76f4\u63a5\u4f7f\u7528\u4e0a\u5f0f\u8ba1\u7b97\uff0c\u5728\u6c42\u89e3 \\(t\\) \u70b9\u7684\u5bfc\u6570\u65f6\u8fd8\u9700\u8981\u904d\u5386 \\(t\\) \u70b9\u4e4b\u540e\u7684\u91c7\u6837\u70b9\uff0c\u8ba1\u7b97\u6210\u672c\u8f83\u9ad8\u3002\u8003\u8651\u5230\u5728\u5b9e\u9645\u6c42\u89e3\u8fc7\u7a0b\u4e2d\uff0c\u5bfc\u6570\u8ba1\u7b97\u662f\u5728\u6b63\u5411\u6e32\u67d3\u4e4b\u540e\u8fdb\u884c\u7684\uff0c\u5373\u6700\u7ec8\u7684\u6e32\u67d3\u7ed3\u679c \\(L(\\mathbf{x},\\omega)\\) \u5df2\u77e5\uff0c\u6240\u4ee5\u4e00\u822c\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u4f1a\u5bf9\u4e0a\u5f0f\u4f5c\u8fdb\u4e00\u6b65\u5730\u8f6c\u6362\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u8ba1\u7b97\u5f0f\uff1a</p> \\[ \\begin{aligned} \\frac{\\partial{L(\\mathbf{x},\\omega)}}{\\partial{\\sigma_t}} &amp;=C_tT_te^{-\\sigma_t\\delta_t}\\delta_t -[L(\\mathbf{x},\\omega)-\\sum_{n=1}^{t}C_nT_n(1-e^{-\\sigma_n\\delta_n})]\\delta_t\\\\ &amp;=C_tT_{t+1}\\delta_t-[L(\\mathbf{x},\\omega)-\\sum_{n=1}^{t}C_nT_n(1-e^{-\\sigma_n\\delta_n})]\\delta_t \\end{aligned} \\]"}, {"location": "record/inv_fastoct/develop/diff_render/03_diff_vol_renderer_exper/", "title": "\u53ef\u5fae\u4f53\u6e32\u67d3\u5b9e\u9a8c", "text": ""}, {"location": "record/inv_fastoct/develop/diff_render/03_diff_vol_renderer_exper/#_1", "title": "\u53ef\u5fae\u6e32\u67d3\u5668\u4ee3\u7801\u5b9e\u73b0", "text": ""}, {"location": "record/inv_fastoct/develop/diff_render/03_diff_vol_renderer_exper/#_2", "title": "\u53ef\u80fd\u7684\u95ee\u9898", "text": "<ul> <li>\u5982\u679c\u4e25\u683c\u6309\u7167\u524d\u6587\u63a8\u5bfc\u7684\u516c\u5f0f\u8fdb\u884c\u68af\u5ea6\u7684\u8ba1\u7b97\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u68af\u5ea6\u8ba1\u7b97\u7ed3\u679c\u975e\u5e38\u5927\u7684\u60c5\u51b5\u3002</li> <li>\u8fd9\u662f\u56e0\u4e3a\uff0c\u4e00\u65b9\u9762\uff0c\u521d\u59cb\u72b6\u6001\u4e0b\u4e0e\u4f18\u5316\u76ee\u6807\u7684\u8ddd\u79bb\u8f83\u5927\uff0c\u5bfc\u81f4\u68af\u5ea6\u503c\u8f83\u5927\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u5355\u4e2a\u4f53\u7d20\u7684\u68af\u5ea6\u53ef\u80fd\u5305\u542b\u8bb8\u591a\u6761\u5149\u7ebf\u7684\u8d21\u732e\u3002\u56e0\u6b64\uff0c\u9700\u8981\u901a\u8fc7\u8c03\u6574\u5b66\u4e60\u7387\u6765\u8c03\u8282\u4f18\u5316\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u68af\u5ea6\u8fdb\u884c\u6620\u5c04\u6216\u622a\u65ad\uff0c\u6bd4\u5982\u5bf9\u8d85\u8fc7 \\([-1, 1]\\) \u7684\u68af\u5ea6\u8fdb\u884c\u622a\u65ad\uff0c\u4ee5\u4fdd\u8bc1\u8f83\u4e3a\u7a33\u5b9a\u7684\u5b66\u4e60\u3002</li> <li>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0ctaichi \u5185\u7f6e\u7684 <code>taichi.tools.imread()</code> \u4e0e <code>taichi.tools.imwrite()</code> \u51fd\u6570\u662f\u6309\u7167 <code>w,h,c</code> \u7684\u987a\u5e8f\u5b58\u50a8\u7684\uff0c\u4e0e cv2 \u548c plt \uff08<code>h,w,c</code>\uff09 \u90fd\u4e0d\u540c\uff0c\u8f6c\u6362\u5173\u7cfb\u4e3a <code>image(in taichi) = image.permute(1,0,2).flip(0)</code> \u3002  </li> </ul>"}, {"location": "record/inv_fastoct/develop/diff_render/04_object_inset/", "title": "\u865a\u5b9e\u878d\u5408\u6e32\u67d3", "text": ""}, {"location": "record/inv_fastoct/develop/diff_render/04_object_inset/#streamlit", "title": "streamlit \u5f00\u53d1", "text": "<p>\u53ef\u4ee5\u70b9\u51fb\u7684\u56fe\u7247\uff1aimage-coordinates</p> <p>\u5b9e\u73b0\u754c\u9762\u5185\u5237\u65b0\u4e0d\u6539\u53d8\u7684\u7f13\u5b58\uff1aSession State - Streamlit Docs</p> <p>\u5b9e\u73b0\u4f53\u7d20\u5207\u7247\u53ef\u89c6\u5316\uff1aVisualizing mri volume slices in Python (plotly.com)</p>"}, {"location": "record/inv_fastoct/survey/%E5%85%89%E7%85%A7%E4%BC%B0%E8%AE%A1%E7%9A%84%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF/", "title": "\u5149\u7167\u4f30\u8ba1\u7684\u5e94\u7528\u573a\u666f", "text": "<ul> <li> <p> \u5149\u7167\u4e00\u81f4\u6027\u662f\u4ec0\u4e48\uff1f</p> </li> <li> <p>\u6b8b\u7f3a\u6587\u7269\u589e\u5f3a\u73b0\u5b9e\u5c55\u793a\u7cfb\u7edf\u7684\u7814\u7a76\u4e0e\u5b9e\u73b0 - \u4e2d\u56fd\u77e5\u7f51 (cnki.net) \uff5c \u5c71\u4e1c\u5927\u5b66\u7855\u58eb\u8bba\u6587 \uff5c 2022 </p> </li> </ul> <p>\u8003\u53e4\u535a\u7269\u9986\u4f5c\u4e3a\u4e00\u7c7b\u91cd\u8981\u7684\u535a\u7269\u9986\uff0c\u5176\u51fa\u571f\u6587\u7269\u5927\u591a\u662f\u6b8b\u7f3a\u4e0d\u5168\u7684\u3002\u56e0\u4e3a\u6b8b\u7f3a\u6587\u7269\u7684\u7269\u7406\u4fee\u590d\u53ef\u80fd\u5bf9\u6587\u7269\u672c\u8eab\u5e26\u6765\u635f\u5bb3\uff0c\u56e0\u6b64\uff0c\u5f88\u591a\u6587\u7269\u5728\u535a\u7269\u9986\u7684\u5b9e\u7269\u5c55\u793a\u90fd\u4fdd\u6301\u4e86\u539f\u59cb\u7684\u6b8b\u7f3a\u72b6\u6001\uff0c\u7ed9\u4eba\u4eec\u89c2\u8d4f\u3001\u7406\u89e3\u6587\u7269\u5e26\u6765\u4e86\u5f88\u5927\u969c\u788d\u3002\u5982\u4f55\u901a\u8fc7\u589e\u5f3a\u73b0\u5b9e\u6280\u672f\u7684\u5e94\u7528\uff0c\u4f7f\u5f97\u4eba\u4eec\u5728\u73b0\u573a\u80fd\u89c2\u770b\u5230\u4fee\u590d\u5b8c\u6574\u7684\u6587\u7269\u53d8\u5f97\u975e\u5e38\u91cd\u8981\u548c\u6709\u610f\u4e49\u3002 \u7cfb\u7edf\u80fd\u591f\u5c06\u8ba1\u7b97\u673a\u751f\u6210\u7684\u6587\u7269\u8865\u5168\u90e8\u5206\u6a21\u578b\u53e0\u52a0\u81f3\u771f\u5b9e\u6b8b\u7f3a\u6587\u7269\u4e0a\uff0c\u5728\u624b\u6301\u6216\u5934\u6234\u8bbe\u5907\u4e2d\u5b9e\u65f6\u5730\u5448\u73b0\u51fa\u6b8b\u7f3a\u6587\u7269\u88ab\u4fee\u590d\u540e\u7684\u6548\u679c\uff0c\u4f7f\u89c2\u5bdf\u8005\u53ef\u4ee5\u5728\u6587\u7269\u5c55\u89c8\u73b0\u573a\u770b\u5230\u865a\u3001\u5b9e\u65e0\u7f1d\u878d\u5408\u7684\u6587\u7269\u3002 </p> <ul> <li>\u542f\u53d1\u4e00\uff1a\u65b0\u7684\u5e94\u7528\u573a\u666f\uff0c\u6b8b\u7f3a\u7269\u4f53\u7684\u8865\u5168\u4e5f\u4f1a\u7528\u5230\u5149\u7167\u4e00\u81f4\u7684\u865a\u5b9e\u878d\u5408\u6e32\u67d3\u3002</li> <li> <p>\u542f\u53d1\u4e8c\uff1a\u865a\u5b9e\u878d\u5408\u5b9e\u9a8c\u5c55\u793a\uff0c\u53ef\u4ee5\u7528\u4e00\u534a\u865a\u62df\u4e00\u534a\u771f\u5b9e\u7269\u4f53\u7684\u5f62\u5f0f\u6765\u5c55\u793a\u3002</p> </li> <li> <p>\u589e\u5f3a\u73b0\u5b9e\u7cfb\u7edf\u4e2d\u57fa\u4e8e\u5355\u76ee\u56fe\u50cf\u7684\u5149\u7167\u4f30\u8ba1 - \u4e2d\u56fd\u77e5\u7f51 (cnki.net) \uff5c \u56fd\u79d1\u5927\u7855\u58eb\u8bba\u6587 \uff5c 2019</p> </li> <li> <p>AR\u589e\u5f3a\u73b0\u5b9e\u6280\u672f\u7684\u771f\u5b9e\u611f\u548c\u4ea4\u4e92\u6027\u7814\u7a76 - \u4e2d\u56fd\u77e5\u7f51 (cnki.net) \uff5c \u897f\u5b89\u7535\u5b50\u79d1\u5927\u7855\u58eb\u8bba\u6587 \uff5c 2022</p> </li> <li> <p>\u57fa\u4e8e\u5149\u7167\u4e00\u81f4\u6027\u7684\u865a\u5b9e\u878d\u5408\u7b97\u6cd5\u7814\u7a76 - \u4e2d\u56fd\u77e5\u7f51 (cnki.net) \uff5c \u5409\u6797\u5927\u5b66\u535a\u58eb\u8bba\u6587 \uff5c 2022</p> </li> </ul> <p>\u9488\u5bf9\u771f\u5b9e\u573a\u666f\u4e2d\u955c\u9762\u7269\u4f53\u548c\u900f\u660e\u7269\u4f53\u7684\u7126\u6563\u73b0\u8c61\u4f1a\u5bf9\u63d2\u5165\u5230\u5176\u5468\u56f4\u7684\u865a\u62df\u7269\u4f53\u4ea7\u751f\u5f71\u54cd\u7684\u95ee\u9898,\u63d0\u51fa\u4e86\u8054\u5408\u4f30\u8ba1\u5149\u7167\u548c\u955c\u9762\u7269\u4f53\u6750\u8d28\u4e0e\u900f\u660e\u7269\u4f53\u6750\u8d28\u7684\u7b97\u6cd5\u3002</p> <ol> <li></li> </ol>"}, {"location": "record/xiaohongshu/dirtywork/03_dataset/", "title": "03 dataset", "text": ""}, {"location": "record/xiaohongshu/dirtywork/03_dataset/#todo", "title": "TODO", "text": "<ul> <li> \u6309\u7167\u5bbd\u9ad8\u6bd4\u5212\u5206\u6587\u4ef6\u7ed3\u6784</li> <li> \u4eba\u4f53\u68c0\u6d4b\uff0c\u6dfb\u52a0person\u6807\u7b7e</li> <li> \u4eba\u8138\u68c0\u6d4b\uff0c\u6dfb\u52a0face\u6807\u7b7e</li> <li> \u7ec6\u7c92\u5ea6\u7684\u6807\u7b7e\u5212\u5206</li> <li> \u8f93\u51fa\u6bcf\u4e00\u7c7b\u6570\u636e\u7684\u4e2a\u6570</li> <li> \u6570\u636e\u96c6\u6570\u91cf\u3001\u591a\u6837\u6027</li> <li> </li> </ul>"}, {"location": "record/xiaohongshu/dirtywork/03_dataset/#yolov5", "title": "\u4f7f\u7528YOLOv5\u8fdb\u884c\u76ee\u6807\u68c0\u6d4b", "text": "<p>YOLOv5 | PyTorch</p>"}, {"location": "record/xiaohongshu/dirtywork/03_dataset/#yoloface", "title": "\u4f7f\u7528YOLOface\u8fdb\u884c\u4eba\u8138\u68c0\u6d4b", "text": "<p>yoloface \u00b7 PyPI</p> <p>\u4f9d\u8d56 \u2014 MMDetection 2.28.2 \u6587\u6863</p> <p>\u5b66\u4e60\u4e00\u4e0b MMDetection\uff0cMMagic</p>"}, {"location": "record/xiaohongshu/dirtywork/20230720-20230807%20reverseY/", "title": "20230720 20230807 reverseY", "text": ""}, {"location": "record/xiaohongshu/dirtywork/20230720-20230807%20reverseY/#tab", "title": "\u8499\u7248tab", "text": "<p>64\u6761</p> \u540d\u79f0 \u95ee\u9898 \u72b6\u6001 \u900f\u89c6V \u900f\u89c6\u76f8\u53cd \u8499\u7248\u8fb9\u6846 \u2705 \u952f\u9f7f\u611f\u63cf\u8fb9 \u2705 \u7ad6\u7248\u6587\u5b57\u62fc\u63a5 \u2705 \u4e0a\u5bbd\u4e0b\u7a84 \u2705 \u4e0a\u7a84\u4e0b\u5bbd \u2705 \u660e\u4fe1\u7247 lut \u2705 \u62cd\u7acb\u5f97\u6846 \u8c03\u8282\uff08\u7279\u6b8a\uff09\uff08\u672c\u8eab\u6709798\u7248\u672c\uff09\u989c\u8272\u4e0d\u5bf9 \u2705 \u80f6\u7247\u6846 \u2705 \u5f69\u8272\u62cd\u7acb\u5f97 \u2705 \u5f69\u8272\u8fb9\u6846 \u2705 Mac\u754c\u9762\u2160 \u8c03\u8282 \u2705 \u9ed1\u8fb9\u77e9\u5f62\u2161 \u2705 \u5f02\u5f62\u8499\u7248\u2160 \u2705 \u77e9\u5f62\u62fc\u8d34 \u2705 \u9ed1\u8fb9\u77e9\u5f62\u2160 \u2705 \u624b\u673a\u8f6e\u5ed3 \u2705 Mac\u754c\u9762\u2161 \u8c03\u8282\uff08\u672a\u66f4\u65b0\u5305\uff09 \u2705 \u4eba\u8138\u5706\u5f62\u6846 \u2705 \u8f66\u7a97\u2160 \u2705 \u7ad6\u578b\u8499\u7248\u2160 \u2705 \u7ad6\u578b\u8499\u7248\u2161 \u2705 \u65e0\u7f1d\u62fc\u63a5I \u8c03\u8282\uff0c\u6709\u95ee\u9898 \u2705 \u65e0\u7f1d\u62fc\u63a5II \u8c03\u8282 \u2705 \u900f\u89c6\u2160 \u2705 \u900f\u89c6\u2161 \u2705 \u900f\u89c6\u2162 \u2705 \u900f\u89c6\u2163 \u2705 \u65b0\u5e74\u5154\u5b50 \u2705 \u51e0\u4f55\u5207\u5272\u4e0a \u2705 \u51e0\u4f55\u5207\u5272\u4e2d \u2705 \u51e0\u4f55\u5207\u5272\u4e0b \u2705 \u76f2\u76d2\u8499\u7248 \u6709\u95ee\u9898 \u2705 \u5165\u573a\u5238\u8499\u7248 \u2705 \u5706\u89d2\u77e9\u5f62\u2162 \u2705 \u5706\u89d2\u77e9\u5f62\u2161 \u2705 \u5706\u89d2\u77e9\u5f62\u2160 \u2705 \u5706\u89d2\u65b9\u5f62 \u2705 \u6298\u89d2\u767d\u8fb9\u77e9\u5f62 \u2705 \u6b63\u65b9\u5f62\u5706\u89d2 \u2705 \u77e9\u5f62\u5706\u89d2 \u2705 \u957f\u77e9\u5f62\u5706\u89d2 \u2705 \u77e9\u5f62\u8499\u7248IV \u2705 \u77e9\u5f62\u8499\u7248\u2162 \u2705 \u77e9\u5f62\u8499\u7248\u2161 \u2705 \u77e9\u5f62\u8499\u7248\u2160 \u2705 \u5706\u5f62\u7fbd\u5316 \u2705 \u8fb9\u89d2\u6298\u7eb8\u2160 \u2705 \u8fb9\u89d2\u6298\u7eb8\u2161 \u2705 \u692d\u5706\u8499\u7248 \u2705 \u6587\u5b57\u62fc\u63a5 \u6ca1\u6548\u679c \u2705 \u5f02\u5f62\u8499\u7248\u2163 \u2705 \u5f02\u5f62\u8499\u7248\u2162 \u2705 \u5f02\u5f62\u8499\u7248\u2161 \u2705 \u6587\u5b57\u6df7\u5408 \u2705 \u6495\u7eb8\u8499\u7248\u2162 \u2705 \u6495\u7eb8\u8499\u7248\u2161 \u2705 \u5f02\u5f62\u8499\u7248\u2164 \u2705 \u5f02\u5f62\u8499\u7248\u2165 \u2705 \u4e0d\u89c4\u5219\u5706\u2160 \u2705 \u4e0d\u89c4\u5219\u5706\u2161 \u2705 \u8237\u7a97 \u2705 \u6495\u7eb8\u8499\u7248\u2160 \u2705 \u5bf9\u8bdd\u6846 \u2705"}, {"location": "record/xiaohongshu/dirtywork/20230720-20230807%20reverseY/#tab_1", "title": "\u4eba\u7269tab", "text": "<p>56\u6761</p> \u540d\u79f0 \u95ee\u9898 \u72b6\u6001 \u9ea6\u95e8 \u7279\u6b8a ZsFaceStickerRenderer \u2705 \u4e3b\u4f53\u7fbd\u5316 \u2705 \u77e9\u5f62\u80cc\u666f \u2705 \u706f\u5e26\u73af\u7ed5 \u2705 \u5f69\u8272\u63cf\u8fb9\u2161 \u2705 \u6587\u5b57\u73af\u7ed5 \u6709\u95ee\u9898\uff0c\u8d34\u7eb8\u65b9\u4f4d\u4e0d\u540c \u80cc\u666f\u65cb\u8f6c \u65b9\u5411\u6709\u95ee\u9898 \u2705 \u5f69\u8272\u63cf\u8fb9\u2160 \u2705 \u534a\u8f6e\u5ed3\u865a\u7ebf\u63cf\u8fb9 \u7279\u6b8a\uff08\u539f\u672c\u6709799\u7248\u672c\uff09 \u2705 \u00bd\u63cf\u8fb9 \u6709\u95ee\u9898\uff0c\u6548\u679c\u4e0d\u540c\uff0c\u65b0\u7248\u672c\u6ca1\u6709\u9690\u85cf\u00bd \u5706\u5f62\u8272\u5757 \u2705 \u6587\u5b57\u63cf\u8fb9\u2161 \u7279\u6b8a \u2705 \u6587\u5b57\u63cf\u8fb9\u2162 \u7279\u6b8a \u2705 \u5934\u90e8\u5f39\u5e55 \u7279\u6b8a\uff08\u5b88\u4ec1\u5df2\u4fee\u6539\uff09 \u2705 \u6587\u5b57\u63cf\u8fb9\u2163 \u7279\u6b8a \u2705 \u591a\u624b\u673a\u62cd\u6444 \u6709\u95ee\u9898 \u2705 \u7ec6\u4e3b\u4f53\u526a\u7eb8 \u2705 \u7c97\u4e3b\u4f53\u526a\u7eb8 \u2705 \u65b9\u5f62\u8272\u5757 \u2705 \u7ebf\u5f62\u63cf\u8fb9 \u7279\u6b8a\uff08\u539f\u672c\u6709799\u7248\u672c\uff09\uff08\u5b88\u4ec1\u5df2\u4fee\u6539\uff09 \u2705 \u70b9\u7ebf\u63cf\u8fb9 \u65e0\u6548\u679c \u2705 \u6f6e\u9177\u6587\u5b572 \u7279\u6b8a\uff08textAround\uff09 \u2705 \u5934\u90e8\u8774\u8776 \u2705 \u6ce2\u6d6a\u7ebf\u63cf\u8fb9 \u65e0\u6548\u679c \u2705 \u767d\u8272\u6d82\u9e26\u6587\u5b57 \u7279\u6b8a \u2705 \u77e9\u5f62\u63cf\u8fb9 \u2705 \u4e3b\u4f53\u5f69\u8272 \u2705 \u624b\u673a\u76f8\u518c \u6709\u95ee\u9898\uff0c\u53cd\u8f6c \u2705 \u5c40\u90e8\u653e\u5927 \u6709\u95ee\u9898\uff0c\u53cd\u8f6c \u2705 \u900f\u5361 \u2705 \u6d82\u9e26\u63cf\u8fb9 \u7279\u6b8a\uff08\u5df2\u7ecf\u6709799\u7248\u672c\uff09 \u2705 \u80cc\u666f\u5f31\u5316 \u2705 \u4e1d\u6ed1\u63cf\u8fb9 \u2705 \u7c89\u7ea2\u6ce1\u6ce1 \u2705 \u5168\u5c40\u63cf\u8fb9 \u2705 \u6ee1\u5c4f\u7231\u5fc3 \u6709\u95ee\u9898\uff0c\u65b9\u5411\u4e0d\u5bf9 \u2705 \u7f8e\u5f0f\u751c\u5fc3 \u6709\u95ee\u9898 ZsFaceStickerRenderer \u2705 \u7f8e\u5f0f\u751c\u5fc32 \u7279\u6b8a\uff08\u5df2\u6709798\u7248\u672c\uff09ZsFaceStickerRenderer \u2705 \u6c42\u52a9 \u6709\u95ee\u9898\uff0c\u53cd\u8f6c ZsFaceStickerRenderer \u2705 \u65e0\u8bed \u6709\u95ee\u9898\uff0c\u53cd\u8f6c ZsFaceStickerRenderer \u2705 \u6d41\u6c57 \u6709\u95ee\u9898\uff0c\u53cd\u8f6c ZsFaceStickerRenderer \u2705 \u7b11\u8138\u906e\u6321 \u2705 \u6587\u5b57\u63cf\u8fb9\u2164 \u7279\u6b8a \u2705 \u53cc\u773c\u8bc6\u522b \u6709\u95ee\u9898\uff0c\u4f4d\u7f6e\u4e0d\u5bf9 \u2705 \u526a\u8d34\u753b \u2705 \u6f6e\u9177\u6587\u5b57 \u7279\u6b8a \u2705 \u7b80\u7ea6\u6587\u5b57 \u7279\u6b8a \u2705 \u4e94\u5b98\u8bc6\u522b \u6709\u95ee\u9898\uff0c\u4f4d\u7f6e\u4e0d\u5bf9 \u2705 \u4e3b\u4f53\u9634\u5f71\u2160 \u2705 \u4e3b\u4f53\u9634\u5f71II \u2705 \u00bd\u8721\u7b14\u63cf\u8fb9 \u2705 \u8721\u7b14\u63cf\u8fb9 \u2705 \u6587\u5b57\u63cf\u8fb9\u2160 \u7279\u6b8a \u2705 \u4eba\u4f53\u5173\u952e\u70b9\u2161 \u7279\u6b8a \u4eba\u4f53\u5173\u952e\u70b9\u2160 \u7279\u6b8a"}, {"location": "record/xiaohongshu/dirtywork/20230720-20230807%20reverseY/#tab_2", "title": "\u590d\u53e4tab", "text": "<p>45\u6761</p> \u540d\u79f0 \u95ee\u9898 \u72b6\u6001 DV\u754c\u9762 \u89c6\u9891 \u2705 \u9526\u9ca4 \u2705 \u91d1\u8272\u788e\u7247 \u2705 \u7ea2\u8272\u788e\u7247 \u2705 \u80f6\u7247\u2162 \u2705 \u767e\u8936\u6761\u7eb9 \u2705 \u6298\u7eb8\u5370\u5237 \u2705 \u590d\u53e490s \u2705 \u6697\u8c03 \u2705 \u805a\u5149\u706f \u2705 \u661f\u95ea \u7279\u6b8a\uff08\u65e0\u6587\u4ef6\uff09 \u2705 \u84dd\u8c03 \u2705 \u590d\u53e4\u611fDV \u2705 \u590d\u53e4DV1 \u89c6\u9891 \u2705 \u590d\u53e4DV2 \u89c6\u9891 \u2705 \u80f6\u7247\u2161 \u2705 \u80f6\u7247\u2160 \u2705 \u8001\u7167\u7247I \u2705 \u8001\u7167\u7247II \u2705 \u53d6\u666f\u5668 \u2705 DCR \u2705 CCD \u2705 \u68a6\u5e7bDV \u2705 \u590d\u53e4DV3 \u2705 \u6697\u5f71\u661f\u5149 \u2705 \u68a6\u5e7b\u788e\u94bb \u2705 Kira I \u2705 Kira II \u2705 \u4f4e\u753b\u8d28 \u2705 \u76d1\u63a7\u754c\u9762I \u2705 \u76d1\u63a7\u754c\u9762II \u2705 \u5b9d\u5229\u6765 \u2705 \u9ed1\u767d\u80f6\u7247 \u672c\u6765\u5c31\u6709 \u2705 \u805a\u5149\u9c7c\u773c \u2705 \u653e\u5927\u9c7c\u773c \u2705 \u6f0f\u5149\u2161 \u2705 \u6f0f\u5149\u2160 \u2705 \u6469\u5c14\u7eb9 \u2705 \u522e\u82b1\u2160 \u2705 \u522e\u82b1\u2161 \u2705 \u590d\u53e4DV \u89c6\u9891 \u2705 \u9ed1\u767d2 \u2705 \u9ed1\u767d\u566a\u70b9 \u2705"}, {"location": "record/xiaohongshu/dirtywork/20230720-20230807%20reverseY/#tab_3", "title": "\u57fa\u7840tab", "text": "<p>37\u6761</p>"}, {"location": "record/xiaohongshu/dirtywork/%E4%BA%BA%E7%89%A9tab/", "title": "\u4eba\u7269tab", "text": ""}, {"location": "record/xiaohongshu/dirtywork/%E4%BA%BA%E7%89%A9tab/#tab", "title": "\u4eba\u7269tab", "text": "\u540d\u79f0 \u95ee\u9898 \u72b6\u6001 \u9ea6\u95e8 \u7279\u6b8a \u4e3b\u4f53\u7fbd\u5316 \u2705 \u77e9\u5f62\u80cc\u666f \u2705 \u706f\u5e26\u73af\u7ed5 \u2705 \u5f69\u8272\u63cf\u8fb9\u2161 \u2705 \u6587\u5b57\u73af\u7ed5 \u2705 \u80cc\u666f\u65cb\u8f6c \u65b9\u5411\u6709\u95ee\u9898 \u2705 \u5f69\u8272\u63cf\u8fb9\u2160 \u2705 \u534a\u8f6e\u5ed3\u865a\u7ebf\u63cf\u8fb9 \u7279\u6b8a\uff08\u539f\u672c\u6709799\u7248\u672c\uff09 \u00bd\u63cf\u8fb9 \u2705 \u5706\u5f62\u8272\u5757 \u2705 \u6587\u5b57\u63cf\u8fb9\u2161 \u7279\u6b8a \u6587\u5b57\u63cf\u8fb9\u2162 \u7279\u6b8a \u5934\u90e8\u5f39\u5e55 \u7279\u6b8a \u6587\u5b57\u63cf\u8fb9\u2163 \u7279\u6b8a \u591a\u624b\u673a\u62cd\u6444 \u6709\u95ee\u9898 \u2705 \u7ec6\u4e3b\u4f53\u526a\u7eb8 \u2705 \u7c97\u4e3b\u4f53\u526a\u7eb8 \u2705 \u65b9\u5f62\u8272\u5757 \u2705 \u7ebf\u5f62\u63cf\u8fb9 \u7279\u6b8a\uff08\u539f\u672c\u6709799\u7248\u672c\uff09 \u70b9\u7ebf\u63cf\u8fb9 \u2705 \u6f6e\u9177\u6587\u5b572 \u7279\u6b8a \u5934\u90e8\u8774\u8776 \u2705 \u6ce2\u6d6a\u7ebf\u63cf\u8fb9 \u2705 \u767d\u8272\u6d82\u9e26\u6587\u5b57 \u7279\u6b8a \u77e9\u5f62\u63cf\u8fb9 \u2705 \u4e3b\u4f53\u5f69\u8272 \u2705 \u624b\u673a\u76f8\u518c \u6709\u95ee\u9898\uff0c\u53cd\u8f6c \u2705 \u5c40\u90e8\u653e\u5927 \u6709\u95ee\u9898\uff0c\u53cd\u8f6c \u900f\u5361 \u2705 \u6d82\u9e26\u63cf\u8fb9 \u7279\u6b8a\uff08\u5df2\u7ecf\u6709799\u7248\u672c\uff09 \u80cc\u666f\u5f31\u5316 \u2705 \u4e1d\u6ed1\u63cf\u8fb9 \u2705 \u7c89\u7ea2\u6ce1\u6ce1 \u7279\u6b8a \u5168\u5c40\u63cf\u8fb9 \u2705 \u6ee1\u5c4f\u7231\u5fc3 \u2705 \u7f8e\u5f0f\u751c\u5fc3 \u6709\u95ee\u9898 \u7f8e\u5f0f\u751c\u5fc32 \u7279\u6b8a\uff08\u5df2\u6709798\u7248\u672c\uff09 \u6c42\u52a9 \u6709\u95ee\u9898\uff0c\u53cd\u8f6c \u65e0\u8bed \u6709\u95ee\u9898\uff0c\u53cd\u8f6c \u6d41\u6c57 \u6709\u95ee\u9898\uff0c\u53cd\u8f6c \u7b11\u8138\u906e\u6321 \u2705 \u6587\u5b57\u63cf\u8fb9\u2164 \u7279\u6b8a \u53cc\u773c\u8bc6\u522b \u6709\u95ee\u9898\uff0c\u53cd\u8f6c \u526a\u8d34\u753b \u2705 \u6f6e\u9177\u6587\u5b57 \u7279\u6b8a \u7b80\u7ea6\u6587\u5b57 \u7279\u6b8a \u4e94\u5b98\u8bc6\u522b \u6709\u95ee\u9898\uff0c\u53cd\u8f6c \u4e3b\u4f53\u9634\u5f71\u2160 \u2705 \u4e3b\u4f53\u9634\u5f71II \u2705 \u00bd\u8721\u7b14\u63cf\u8fb9 \u2705 \u8721\u7b14\u63cf\u8fb9 \u2705 \u6587\u5b57\u63cf\u8fb9\u2160 \u7279\u6b8a \u4eba\u4f53\u5173\u952e\u70b9\u2161 \u7279\u6b8a \u4eba\u4f53\u5173\u952e\u70b9\u2160 \u7279\u6b8a"}, {"location": "record/xiaohongshu/zeus_shader/blooming_light/", "title": "Blooming light", "text": "<p>\u9ad8\u8d28\u91cf\u6cdb\u5149\uff08bloom\uff09\u4ece\u7406\u8bba\u5230\u5b9e\u6218 - \u77e5\u4e4e (zhihu.com)</p>"}, {"location": "record/xiaohongshu/zeus_shader/human_body_outline/", "title": "Human body outline", "text": ""}, {"location": "record/xiaohongshu/zeus_shader/ice_cube/", "title": "Ice cube", "text": ""}, {"location": "record/xiaohongshu/zeus_shader/ice_cube/#ice-cube", "title": "\u51b0\u5757 ICE CUBE", "text": "<p>Misted glass (shadertoy.com)</p> <p>semistructured (shadertoy.com)</p> <p>Packing Data (shadertoy.com)</p> <p>Shader\u5b66\u4e60\u5206\u4eab\uff1a\u96e8\u5929\u7a97\u6237Shader_\u8ba1\u7b97\u6d41\u7a0b\u53ef\u89c6\u5316\u62c6\u89e3 - \u77e5\u4e4e (zhihu.com)</p>"}, {"location": "record/xiaohongshu/zeus_shader/perspective_mask/", "title": "Perspective mask", "text": "flowchart LR a[\u8f93\u5165\u56fe\u50cf]-- \u900f\u89c6\u77e9\u9635\u6620\u5c04 --&gt; b[\u900f\u89c6\u56fe\u50cf]--&gt;c[\u6df7\u5408] A[Input] --&gt; B[LUT] B --&gt; D[Gaussion Blur] subgraph   D --&gt; E1[Sharpen] E1--&gt; E2[Dispersion] E2 --&gt; E[Gold Noises] end E --&gt; F[Foreground] F --&gt; G[Output]  flowchart LR  subgraph   a[image]-- perspective projection --&gt;a1[image1] end  subgraph   b[image]-- perspective projection --&gt;b1[image2] -- gaussian blur --&gt;b2[image3] end  c[background]--&gt;d[blend] a1--&gt;d b2--&gt;d  d--&gt;d1[output]"}, {"location": "record/xiaohongshu/zeus_shader/spiderman/", "title": "Spiderman", "text": ""}, {"location": "record/xiaohongshu/zeus_shader/spiderman/#shader", "title": "Shader\u4f18\u5316", "text": ""}, {"location": "record/xiaohongshu/zeus_shader/spiderman/#nose_texcoord", "title": "nose_texCoord \u7b97\u6cd5\u63d0\u4f9b\u5750\u6807\u9519\u8bef", "text": ""}, {"location": "record/xiaohongshu/zeus_shader/spiderman/#1-0", "title": "\u4fee\u6b631-0\u60c5\u51b5\u4e0b\u7684\u8499\u7248\u504f\u79fb", "text": ""}, {"location": "record/xiaohongshu/zeus_shader/spiderman/#0-x", "title": "\u589e\u52a00-x\u60c5\u51b5\u4e0b\u7684\u6e32\u67d3\u903b\u8f91", "text": "<ul> <li>\u4e3b\u4f53\u8499\u7248</li> </ul>"}, {"location": "record/xiaohongshu/zeus_shader/spiderman/#_1", "title": "\u591a\u6bd4\u4f8b\u9002\u914d", "text": "<ul> <li>\u88c1\u526a</li> </ul>"}, {"location": "theory/CG/basic/", "title": "\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u7684\u6570\u5b66\u57fa\u7840", "text": ""}, {"location": "theory/CG/basic/matrix/", "title": "\u300c\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u300d\u77e9\u9635\u53d8\u6362\u63a8\u5bfc", "text": ""}, {"location": "theory/CG/basic/matrix/#_1", "title": "\u603b\u4f53\u6d41\u7a0b", "text": "<ol> <li> <p>\u521d\u59cb\u60c5\u51b5 \uff1a\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u573a\u666f\uff0c\u573a\u666f\u4e2d\u5305\u542b\u82e5\u5e72\u7269\u4f53\u4ee5\u53ca\u76f8\u673a\u3002</p> </li> <li> <p>\u5176\u4e2d\uff0c\u76f8\u673a\u5305\u62ec \u2460\u76f8\u673a\u4f4d\u7f6e pos\uff1b\u2461\u5411\u4e0a\u65b9\u5411 up\uff1b\u2462\u671d\u5411 look-at \u4e09\u4e2a\u53c2\u6570\u3002</p> </li> <li> <p>view/camera \u89c6\u56fe\u8f6c\u6362 \uff1a\u5c06\u76f8\u673a\u8f6c\u6362\u5230\u5750\u6807\u7cfb\u539f\u70b9\uff0c\u4e14up\u4e3ay\u8f74\u6b63\u65b9\u5411\uff0clook-at\u4e3az\u8f74\u8d1f\u65b9\u5411\u3002</p> </li> <li> <p>\u8be5\u8f6c\u6362\u4f1a\u5e94\u7528\u4e8e\u6574\u4e2a\u573a\u666f\uff0c\u4e0d\u53ea\u662f\u76f8\u673a\uff0c\u5373\u8f6c\u6362\u524d\u540e\uff0c\u76f8\u673a\u5728\u573a\u666f\u4e2d\u7684\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8\u3002</p> </li> <li> <p>\u6ce8\u610f\uff0c\u4e0d\u540c\u6e32\u67d3\u8f6f\u4ef6\u4e2d\u76f8\u673a\u8f6c\u6362\u5230\u7684\u4f4d\u7f6e\u4ee5\u53ca\u53c2\u6570\u53ef\u80fd\u4e0d\u540c\uff0c\u6b64\u5904\u4ee5GAMES-101\u4e2d\u4e3a\u4f8b\u3002</p> </li> <li> <p>projection \u6295\u5f71\u8f6c\u6362 \uff1a\u5c063\u7ef4\u7684\u89c6\u666f\u4f53\u8f6c\u6362\u4e3a\u6807\u51c6\u7acb\u65b9\u4f53\\([-1, 1]^3\\)\u3002</p> </li> <li> <p>\u5e38\u89c1\u7684\u6709\u6b63\u4ea4\u6295\u5f71\u548c\u900f\u89c6\u6295\u5f71\u4e24\u79cd\u6295\u5f71\u53d8\u6362\u65b9\u5f0f\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u4f7f\u7528\u900f\u89c6\u6295\u5f71\u7684\u65b9\u6cd5\u3002</p> </li> <li> <p>viewport \u89c6\u7a97\u8f6c\u6362 \uff1a\u5c06\u6210\u50cf\u5e73\u9762\u7684xy\u5e73\u9762\u4ece\\([-1,1]^2\\)\u8f6c\u6362\u4e3a $[0,width]\u00d7[0,height] $\u3002</p> </li> <li> <p>\u6b64\u65f6\uff0cz\u5750\u6807\u65e0\u5173\u7d27\u8981\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u5c06\u7acb\u65b9\u4f53\u62cd\u6241\u6210\u4e8c\u7ef4\u6b63\u65b9\u5f62\uff0c\u518d\u8fdb\u884c\u62c9\u4f38\u548c\u5e73\u79fb\u3002</p> </li> <li> <p>\u89c6\u7a97\u8f6c\u6362\u540e\u7684\u7ed3\u679c\u5c31\u662f\u6700\u7ec8\u7684\u7167\u7247\uff0c\u5373\u5c06\u6210\u50cf\u5e73\u9762\u8f6c\u6362\u5230\u5c4f\u5e55\u5750\u6807\u7cfb\u4e0b\u4e86\u3002</p> </li> </ol>"}, {"location": "theory/CG/basic/matrix/#_2", "title": "\u89c6\u56fe\u8f6c\u6362", "text": ""}, {"location": "theory/CG/basic/matrix/#_3", "title": "\u8f6c\u6362\u76ee\u6807", "text": "<p>\u5982\u4e0b\u56fe\uff0c\u5c06\u76f8\u673a\u7684 \u4f4d\u7f6e \\(\\vec{e}\\) \u8f6c\u6362\u5230\u539f\u70b9\uff0c \u5411\u4e0a\u65b9\u5411 \\(\\hat{t}\\) \u8f6c\u6362\u5230 \\(y\\) \u8f74\u6b63\u65b9\u5411\uff0c \u671d\u5411 \\(\\hat{g}\\) \u8f6c\u6362\u5230 \\(z\\) \u8f74\u8d1f\u65b9\u5411\u3002</p> <p></p>"}, {"location": "theory/CG/basic/matrix/#_4", "title": "\u89c6\u56fe\u77e9\u9635", "text": "<p>\u89c6\u56fe\u8f6c\u6362\u7684\u8fc7\u7a0b\u53ef\u4ee5\u62c6\u5206\u4e3a\u4ee5\u4e0b\u5b50\u8fc7\u7a0b\uff0c\u5373 \\(M_{view} = R_{view} \\cdot T_{view}\\)\uff1a \u7b2c\u4e00\u6b65 \uff0c\u5c06\u76f8\u673a\u7684\u4f4d\u7f6e \\(\\vec{e}\\) \u8f6c\u6362\u5230\u539f\u70b9 \\((0,0,0)\\)</p> \\[ T_{\\text {view }}=\\left[\\begin{array}{cccc} 1 &amp; 0 &amp; 0 &amp; -x_{e} \\\\ 0 &amp; 1 &amp; 0 &amp; -y_{e} \\\\ 0 &amp; 0 &amp; 1 &amp; -z_{e} \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\] <p>\u7b2c\u4e8c\u6b65 \uff0c\u5c06\u671d\u5411 \\(\\hat{g}\\) \u8f6c\u6362\u5230\\(z\\)\u8f74\u8d1f\u65b9\u5411\uff0c\u5411\u4e0a\u65b9\u5411 \\(\\hat{t}\\) \u8f6c\u6362\u5230\\(y\\)\u8f74\u6b63\u65b9\u5411\uff0c \\(\\hat{g} \u00d7 \\hat{t}\\) \u8f6c\u6362\u5230\\(x\\)\u8f74\u6b63\u65b9\u5411</p> <ul> <li> <p>\u4ee5 \\(\\hat{g}\\) \u4e3a\u4f8b\uff0c\u8981\u5c06 \\((x_{\\hat{g}}, y_{\\hat{g}}, z_{\\hat{g}})\\) \u65cb\u8f6c\u5230 \\((0,1,0)\\) \u65b9\u5411\u4e0a\uff0c\u5373\u6c42\u51fa\u65cb\u8f6c\u77e9\u9635 \\(R\\) \uff0c\u6ee1\u8db3 \\({R}\\cdot (x_{\\hat{g}}, y_{\\hat{g}}, z_{\\hat{g}})^T = (0,1,0)^T\\) \u6210\u7acb\uff0c\u4e5f\u5c31\u662f \\((x_{\\hat{g}}, y_{\\hat{g}}, z_{\\hat{g}})^T ={R}^{-1}\\cdot  (0,1,0)^T\\)\u3002</p> </li> <li> <p>\u540c\u7406\u53ef\u4ee5\u5f97\u5230\u4e0b\u5217\u7b49\u5f0f\uff1a</p> </li> </ul> \\[ \\left[\\begin{array}{cccc}   x_{\\hat{g} \\times \\hat{t}} &amp; x_{\\hat{t}} &amp; x_{\\hat{g} } &amp; 0 \\\\   y_{\\hat{g} \\times \\hat{t}} &amp; y_{\\hat{t}} &amp; y_{\\hat{g} } &amp; 0 \\\\   z_{\\hat{g} \\times \\hat{t}} &amp; z_{\\hat{t}} &amp; z_{\\hat{g} } &amp; 0 \\\\   0 &amp; 0 &amp; 0 &amp; 1   \\end{array}\\right]=R_{\\text {view }}^{-1} \\cdot \\left[\\begin{array}{cccc}   1 &amp; 0 &amp; 0 &amp; 0 \\\\   0 &amp; 1 &amp; 0 &amp; 0 \\\\   0 &amp; 0 &amp; -1 &amp; 0 \\\\   0 &amp; 0 &amp; 0 &amp; 1   \\end{array}\\right]   \\] <ul> <li>\u6c42\u89e3\u4e0a\u5f0f\u53ef\u4ee5\u6c42\u51fa $R^{-1}_{view} $ \uff1a</li> </ul> \\[ R_{\\text {view }}^{-1}=\\left[\\begin{array}{cccc}   x_{\\hat{g} \\times \\hat{t}} &amp; x_{\\hat{t}} &amp; x_{-\\hat{g} } &amp; 0 \\\\   y_{\\hat{g} \\times \\hat{t}} &amp; y_{\\hat{t}} &amp; y_{-\\hat{g} } &amp; 0 \\\\   z_{\\hat{g} \\times \\hat{t}} &amp; z_{\\hat{t}} &amp; z_{-\\hat{g} } &amp; 0 \\\\   0 &amp; 0 &amp; 0 &amp; 1   \\end{array}\\right]   \\] <ul> <li>\u5bf9 \\(R^{-1}_{view}\\) \u6c42\u9006\u77e9\u9635\uff0c\u5f97\u5230\u65cb\u8f6c\u77e9\u9635 \\(R_{view}\\) \uff1a</li> </ul> \\[ R_{\\text {view }}=\\left[\\begin{array}{cccc}   x_{\\hat{g} \\times \\hat{t}} &amp; y_{\\hat{g} \\times \\hat{t}}  &amp; z_{\\hat{g} \\times \\hat{t}}  &amp; 0 \\\\    x_{\\hat{t}}  &amp; y_{\\hat{t}} &amp;  z_{\\hat{t}} &amp; 0 \\\\   x_{-\\hat{g} }&amp; y_{-\\hat{g} } &amp; z_{-\\hat{g} } &amp; 0 \\\\   0 &amp; 0 &amp; 0 &amp; 1   \\end{array}\\right]   \\] <p>\u7ed3\u5408\u4e0a\u8ff0\u4e24\u4e2a\u8fc7\u7a0b\uff0c\u53ef\u5f97\u5230\u6700\u7ec8\u7684 \u89c6\u56fe\u8f6c\u6362\u77e9\u9635\u4e3a </p> \\[ M_{view}=R_{view}\\cdot T_{view}=\\left[\\begin{array}{cccc} x_{\\hat{g} \\times \\hat{t}} &amp; y_{\\hat{g} \\times \\hat{t}}  &amp; z_{\\hat{g} \\times \\hat{t}}  &amp; 0 \\\\  x_{\\hat{t}}  &amp; y_{\\hat{t}} &amp;  z_{\\hat{t}} &amp; 0 \\\\ x_{-\\hat{g} }&amp; y_{-\\hat{g} } &amp; z_{-\\hat{g} } &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\cdot \\left[\\begin{array}{cccc} 1 &amp; 0 &amp; 0 &amp; -x_{e} \\\\ 0 &amp; 1 &amp; 0 &amp; -y_{e} \\\\ 0 &amp; 0 &amp; 1 &amp; -z_{e} \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\]"}, {"location": "theory/CG/basic/matrix/#_5", "title": "\u6295\u5f71\u8f6c\u6362", "text": "<p>\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5e38\u89c1\u7684\u6295\u5f71\u8f6c\u6362\u6709\u900f\u89c6\u6295\u5f71\uff08perspective projection\uff09\u548c\u6b63\u4ea4\u6295\u5f71\uff08orthographic projection\uff09\u4e24\u79cd\u3002\u900f\u89c6\u6295\u5f71\u7684\u89c6\u666f\u4f53\u4e3a\u9525\u4f53\uff0c\u6210\u50cf\u6548\u679c\u4e3a\u8fd1\u5927\u8fdc\u5c0f\uff1b\u6b63\u4ea4\u6295\u5f71\u7684\u89c6\u666f\u4f53\u4e3a\u957f\u65b9\u4f53\uff0c\u6210\u50cf\u6548\u679c\u4e3a\u5e73\u884c\u6210\u50cf\uff0c\u8fdc\u8fd1\u4e00\u81f4\u3002</p> <p></p>"}, {"location": "theory/CG/basic/matrix/#_6", "title": "\u8f6c\u6362\u76ee\u6807", "text": "<p>\u5bf9\u4e8e\u6b63\u4ea4\u6295\u5f71\u6765\u8bf4\uff0c\u8f6c\u6362\u7684\u76ee\u6807\u662f\u5c06\u89c6\u666f\u4f53 \\([l,r]\u00d7[b,t]\u00d7[f,n]\\) \u8f6c\u6362\u5230\u6807\u51c6\u7acb\u65b9\u4f53 \\([-1,1]^3\\)\u3002</p> <p></p> <p>\u5bf9\u4e8e\u900f\u89c6\u6295\u5f71\u6765\u8bf4\uff0c\u6295\u5f71\u8f6c\u6362\u7684\u76ee\u6807\u53ef\u4ee5\u62c6\u89e3\u4e3a\u4e24\u6b65\u3002\u7b2c\u4e00\u6b65\uff0c\u5c06\u9525\u5f62\u89c6\u666f\u4f53\u8f6c\u6362\u5230\u957f\u65b9\u4f53\u89c6\u666f\u4f53\uff1b\u7b2c\u4e8c\u6b65\uff0c\u5c06\u957f\u65b9\u5f62\u89c6\u666f\u4f53\u8f6c\u6362\u5230\u6807\u51c6\u7acb\u65b9\u4f53\uff08\u8fd9\u4e00\u6b65\u4e0e\u6b63\u4ea4\u6295\u5f71\u76f8\u540c\uff09\u3002\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p>"}, {"location": "theory/CG/basic/matrix/#_7", "title": "\u6295\u5f71\u77e9\u9635", "text": "<p>\u4e0b\u9762\u6211\u4eec\u9996\u5148\u63a8\u5bfc\u6b63\u4ea4\u6295\u5f71\u7684\u89c6\u56fe\u77e9\u9635 \\(M_{ortho}\\) \uff0c\u7136\u540e\u63a8\u5bfc\u5c06\u900f\u89c6\u6295\u5f71\u89c6\u666f\u4f53\u8f6c\u6362\u4e3a\u6b63\u4ea4\u6295\u5f71\u89c6\u666f\u4f53\u7684\u8f6c\u6362\u77e9\u9635 \\(M_{persp\u2192ortho}\\) \uff0c\u6700\u7ec8\u5f97\u5230\u900f\u89c6\u6295\u5f71\u7684\u89c6\u56fe\u77e9\u9635 \\(M_{persp}=M_{ortho}\\cdot M_{persp\u2192ortho}\\) \u3002</p>"}, {"location": "theory/CG/basic/matrix/#_8", "title": "\u6b63\u4ea4\u6295\u5f71", "text": "<p>\u6b63\u4ea4\u6295\u5f71\u53ef\u4ee5\u5206\u4e3a\u4e24\u6b65\uff1a\u2460\u5c06\u89c6\u666f\u4f53\u4e2d\u5fc3\u79fb\u5230\u539f\u70b9\uff1b\u2461\u5c06\u89c6\u666f\u4f53\u7f29\u653e\u5230\u6807\u51c6\u7acb\u65b9\u4f53\u3002\u6613\u5f97</p> \\[ M_{\\text {ortho }}=\\left[\\begin{array}{cccc} \\frac{2}{r-l} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\frac{2}{t-b} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; \\frac{2}{n-f} &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right]\\left[\\begin{array}{cccc} 1 &amp; 0 &amp; 0 &amp; -\\frac{r+l}{2} \\\\ 0 &amp; 1 &amp; 0 &amp; -\\frac{t+b}{2} \\\\ 0 &amp; 0 &amp; 1 &amp; -\\frac{n+f}{2} \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\]"}, {"location": "theory/CG/basic/matrix/#_9", "title": "\u900f\u89c6\u6295\u5f71", "text": "<p>\u7279\u522b\u6ce8\u610f\u7684\u662f\uff0c\u5728\u5c06\u89c6\u666f\u4f53\u201c\u538b\u7f29\u201d\u6210\u957f\u65b9\u4f53\u65f6\uff0c\u6211\u4eec\u89c4\u5b9a\u4e86 \u4e09\u70b9\u539f\u5219 \uff1a \u2160. \u8fd1\u5e73\u9762\u7684\u6240\u6709\u70b9\u5750\u6807\u4e0d\u53d8\uff1b \u2161. \u8fdc\u5e73\u9762\u7684\u6240\u6709\u70b9\u7684z\u8f74\u5750\u6807\u4e0d\u53d8\uff1b \u2162. \u8fdc\u5e73\u9762\u7684\u4e2d\u5fc3\u70b9\u5750\u6807\u4e0d\u53d8\u3002 </p> <p>\u900f\u89c6\u6295\u5f71\u4e5f\u53ef\u4ee5\u5206\u4e3a\u4e24\u6b65\uff1a\u2460\u5c06\u9525\u5f62\u89c6\u666f\u4f53\u201c\u538b\u7f29\u201d\u6210\u957f\u65b9\u4f53\uff08\\(M_{persp\u2192ortho}\\)\uff09\uff1b\u2461\u6b63\u4ea4\u6295\u5f71\u3002 \u7b2c\u4e00\u6b65 \uff0c\u63a8\u5bfc\u201c\u538b\u7f29\u201d\u77e9\u9635\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u8fd9\u91cc\u6211\u4eec\u5173\u6ce8\u7684\u662f \\((x,y,z) \u2192 (x',y',z')\\) \u7684\u8fc7\u7a0b\u3002</p> <ul> <li>\u6839\u636e\u76f8\u4f3c\u4e09\u89d2\u5f62\u6cd5\u5219\u4e0e\u89c6\u666f\u4f53\u8f6c\u6362\u7684\u539f\u5219\u2161\uff0c\u7ed3\u5408\u53f3\u4e0a\u56fe\uff0c\u5f97 \\(x\u2192x'\\) \u7684\u5173\u7cfb\u5f0f\u4e3a \\(x'=\\frac{n}{z} x\\) \uff0c\u540c\u7406\u53ef\u5f97 \\(y\u2192y'\\) \u7684\u5173\u7cfb\u5f0f\u4e3a \\(y'=\\frac{n}{z}y\\) \uff0c\u6b64\u65f6\u6709\u7b49\u5f0f\uff1a</li> </ul> \\[ M_{p e r s p \\rightarrow \\text { ortho }}\\cdot\\left(\\begin{array}{l}   x \\\\   y \\\\   z \\\\   1   \\end{array}\\right)=\\left(\\begin{array}{c}   n x/z \\\\   n y/z \\\\   \\text { unknown } \\\\   1   \\end{array}\\right)==\\left(\\begin{array}{c}   n x \\\\   n y \\\\   \\text { unknown } \\\\   z   \\end{array}\\right)   \\] <p>\u6ce8\u610f\uff1a\u4e0a\u5f0f\u4e2d\u7528\u5230\u4e86\u9f50\u6b21\u5750\u6807\u7cfb\u4e0b \\(k\\vec{v}=\\vec{v}\\) \u7684\u5b9a\u7406\uff0c\u4ece\u800c\u4f7f\u6c42\u5f97\u7684\u8f6c\u6362\u77e9\u9635\u4e0d\u5305\u542b\u53d8\u91cf \\(z\\) \u3002</p> <ul> <li>\u8bb0 \\(m_{ij}\\) \u4e3a\u77e9\u9635 \\(M_{persp\u2192ortho}\\) \u7684\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u5143\u7d20\uff0c\u6839\u636e\u4e0a\u9762\u7684\u7b49\u5f0f\uff0c\u6709</li> </ul> \\[ \\begin{cases}   m_{11}\\cdot x + m_{12}\\cdot y + m_{13}\\cdot z + m_{14}\\cdot 1 = nx \\\\   m_{21}\\cdot x + m_{22}\\cdot y + m_{23}\\cdot z + m_{24}\\cdot 1 = ny \\\\   m_{41}\\cdot x + m_{42}\\cdot y + m_{43}\\cdot z + m_{44}\\cdot 1 = z   \\end{cases}   \\] <ul> <li>\u6839\u636e\u4e0a\u9762\u7684\u7b49\u5f0f\uff0c\u53ef\u4ee5\u89e3\u51fa $M_{persp\u2192ortho} $ \u7684\u90e8\u5206\u53c2\u6570\uff0c\u5f97\u5230</li> </ul> \\[ M_{\\text {persp\u2192ortho}}=\\left[\\begin{array}{cccc}   n &amp; 0 &amp; 0 &amp; 0 \\\\   0 &amp; n &amp; 0 &amp; 0 \\\\   ? &amp; ? &amp; ? &amp; ? \\\\   0 &amp; 0 &amp; 1 &amp; 0   \\end{array}\\right]   \\] <ul> <li>\u6839\u636e\u89c6\u666f\u4f53\u8f6c\u6362\u7684\u539f\u5219\u2160\uff0c\u8fd1\u5e73\u9762\u7684\u6240\u6709\u70b9\u7684\u5750\u6807\u4e0d\u53d8\uff0c\u5373\u5bf9\u4e8e\u4efb\u610f\u7684\u70b9 \\((x,y,n,1)\\) \uff0c\u6052\u6709 \\(M_{persp\u2192ortho}\\cdot(x,y,n,1)^T=(x,y,n,1)^T\\) \u6210\u7acb\uff0c\u5f97\u5230</li> </ul> \\[ \\left[\\begin{array}{cccc}   n &amp; 0 &amp; 0 &amp; 0 \\\\   0 &amp; n &amp; 0 &amp; 0 \\\\   ? &amp; ? &amp; ? &amp; ? \\\\   0 &amp; 0 &amp; 1 &amp; 0   \\end{array}\\right] \\cdot \\left[\\begin{array}{c}   x  \\\\   y  \\\\   n  \\\\   1    \\end{array}\\right]=\\left[\\begin{array}{c}   x  \\\\   y  \\\\   n  \\\\   1    \\end{array}\\right]==\\left[\\begin{array}{c}   nx  \\\\   ny  \\\\   n^2  \\\\   n    \\end{array}\\right]   \\] <ul> <li>\u7531\u4e0a\u9762\u7684\u7b49\u5f0f\uff0c\u53ef\u4ee5\u5f97\u5230</li> </ul> \\[ m_{31}\\cdot x+m_{32}\\cdot y+m_{33}\\cdot n+m_{34}\\cdot 1=n^2   \\] <ul> <li>\u4e0a\u5f0f\u5e76\u4e0d\u8db3\u4ee5\u89e3\u51fa\u53c2\u6570\uff0c\u73b0\u8003\u8651\u89c6\u666f\u4f53\u8f6c\u6362\u7684\u539f\u5219\u2162\uff0c\u8fdc\u5e73\u9762\u4e2d\u5fc3\u70b9\u7684\u5750\u6807\u4e0d\u53d8\u4e14\u4e3a \\((0,0,f)\\)\uff0c\u5373\u6709 \\(M_{persp\u2192ortho}\\cdot (0,0,f,1)^T=(0,0,f,1)^T\\) \u6052\u6210\u7acb\uff0c\u5f97\u5230</li> </ul> \\[ \\left[\\begin{array}{cccc}   n &amp; 0 &amp; 0 &amp; 0 \\\\   0 &amp; n &amp; 0 &amp; 0 \\\\   ? &amp; ? &amp; ? &amp; ? \\\\   0 &amp; 0 &amp; 1 &amp; 0   \\end{array}\\right] \\cdot \\left[\\begin{array}{c}   0  \\\\   0  \\\\   f  \\\\   1    \\end{array}\\right]=\\left[\\begin{array}{c}   0  \\\\   0  \\\\   f  \\\\   1    \\end{array}\\right]==\\left[\\begin{array}{c}   0  \\\\   0  \\\\   f^2  \\\\   f    \\end{array}\\right]   \\] <ul> <li>\u7531\u4e0a\u9762\u7684\u7b49\u5f0f\uff0c\u53ef\u4ee5\u5f97\u5230</li> </ul> \\[ m_{31}\\cdot 0+m_{32}\\cdot 0+m_{33}\\cdot f+m_{34}\\cdot 1=f^2   \\] <ul> <li>\u8054\u7acb\u4e24\u4e2a\u7b49\u5f0f\uff0c\u6709</li> </ul> \\[ \\begin{cases}   m_{31}\\cdot x+m_{32}\\cdot y+m_{33}\\cdot n+m_{34}\\cdot 1=n^2 \\\\   m_{31}\\cdot 0+m_{32}\\cdot 0+m_{33}\\cdot f+m_{34}\\cdot 1=f^2   \\end{cases}   \\Rightarrow   \\begin{cases}   m_{31}=m_{32}=0\\\\   m_{33}=n+f \\\\   m_{34}=-nf   \\end{cases}   \\] <ul> <li>\u5230\u6b64\uff0c\u6211\u4eec\u6c42\u51fa\u4e86\u5c06\u89c6\u666f\u4f53\u201c\u538b\u7f29\u201d\u5230\u957f\u65b9\u4f53\u7684\u8f6c\u6362\u77e9\u9635\uff1a</li> </ul> \\[ M_{\\text {persp\u2192ortho}}=\\left[\\begin{array}{cccc}   n &amp; 0 &amp; 0 &amp; 0 \\\\   0 &amp; n &amp; 0 &amp; 0 \\\\   0 &amp; 0 &amp; n+f &amp; -nf \\\\   0 &amp; 0 &amp; 1 &amp; 0   \\end{array}\\right]   \\] <p>\u7b2c\u4e8c\u6b65 \uff0c\u5c06\u957f\u65b9\u5f62\u89c6\u666f\u4f53\u8f6c\u6362\u5230\u6807\u51c6\u7acb\u65b9\u4f53\uff0c\u8fd9\u4e00\u6b65\u4e0e\u6b63\u4ea4\u6295\u5f71\u76f8\u540c\uff0c\u6839\u636e\u524d\u9762\u7684\u63a8\u5bfc\uff0c\u6709</p> \\[ M_{\\text {ortho }}=\\left[\\begin{array}{cccc} \\frac{2}{r-l} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\frac{2}{t-b} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; \\frac{2}{n-f} &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right]\\left[\\begin{array}{cccc} 1 &amp; 0 &amp; 0 &amp; -\\frac{r+l}{2} \\\\ 0 &amp; 1 &amp; 0 &amp; -\\frac{t+b}{2} \\\\ 0 &amp; 0 &amp; 1 &amp; -\\frac{n+f}{2} \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\] <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u5f97\u5230\u6700\u7ec8\u7684 \u900f\u89c6\u6295\u5f71\u77e9\u9635 \u4e3a</p> \\[ \\begin{aligned} M_{persp} &amp;= M_{ortho} \\cdot M_{persp\u2192ortho} \\\\  &amp;= \\left[\\begin{array}{cccc} \\frac{2}{r-l} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\frac{2}{t-b} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; \\frac{2}{n-f} &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right]\\left[\\begin{array}{cccc} 1 &amp; 0 &amp; 0 &amp; -\\frac{r+l}{2} \\\\ 0 &amp; 1 &amp; 0 &amp; -\\frac{t+b}{2} \\\\ 0 &amp; 0 &amp; 1 &amp; -\\frac{n+f}{2} \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right]\\left[\\begin{array}{cccc} n &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; n &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; n+f &amp; -nf \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\end{array}\\right] \\end{aligned} \\]"}, {"location": "theory/CG/basic/matrix/#_10", "title": "\u900f\u89c6\u6295\u5f71\uff08\u8865\u5145\uff09", "text": "<p>\u4e0a\u6587\u8ba8\u8bba\u4e86\u89c6\u666f\u4f53\u4ee5\u53c2\u6570 $[l,r]\u00d7[b,t]\u00d7[f,n] $ \u5f62\u5f0f\u8868\u793a\u65f6\u7684\u900f\u89c6\u6295\u5f71\u77e9\u9635\uff0c\u4f46\u662f\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u90fd\u662f\u7528 \u89c6\u573a\u89d2 \\(FOV\\)\uff0c\u5bbd\u9ad8\u6bd4 \\(Apect\\)\uff0c\u8fdc\u5e73\u9762 \\(Far\\)\uff0c \u8fd1\u5e73\u9762 \\(Near\\) \u56db\u4e2a\u53c2\u6570\u6765\u5b9a\u4e49\u89c6\u666f\u4f53\u7684\u3002</p> <p></p> <p>\u4e0b\u9762\uff0c\u63a8\u5bfc\u4e00\u4e0b\u7528\u8fd9\u56db\u4e2a\u53c2\u6570\u8868\u793a\u65f6\u7684\u900f\u89c6\u6295\u5f71\u77e9\u9635\u3002</p> <ul> <li>\u6839\u636e\u76f8\u4f3c\u4e09\u89d2\u5f62\u539f\u5219\u548c\u53c2\u6570\u5b9a\u4e49\uff0c\u53ef\u77e5</li> </ul> \\[ \\begin{cases}   \\tan {\\frac{fovY}{2}}= \\frac{t}{|n|} =\\frac{-b}{|n|} \\\\   \\tan {\\frac{fovX}{2}}= \\frac{r}{|n|}= \\frac{-l}{|n|} \\\\   aspect=\\frac{r}{t}=\\frac{-l}{-b} \\\\   far=|f|,\\  near=|n|   \\end{cases}   \\] <ul> <li>\u6839\u636e\u4e0a\u8ff0\u5173\u7cfb\u5f0f\uff0c\u53ef\u4ee5\u63a8\u51fa</li> </ul> <p>$$ - \\begin{cases}     t = near\\cdot \\tan{\\frac{fovY}{2}}=-b \\      r=near\\cdot \\tan{\\frac{fovX}{2}}= near\\cdot \\tan{\\frac{fovY}{2}}\\cdot aspect=-l \\     n=-near, f=-far  (far&gt;near&gt;0)</p> <p>\\end{cases}   $$</p> <p>\u6ce8\u610f\uff1a\u7531\u4e8e\u76f8\u673a\u89c6\u56fe\u8f6c\u6362\u65f6\uff0c\u6211\u4eec\u5c06\u76f8\u673a\u671d\u5411\u8bbe\u4e3a \\(z\\) \u8f74\u8d1f\u65b9\u5411\uff0c\u6240\u4ee5 \\(n\\) \u548c \\(f\\) \u5747\u5c0f\u4e8e \\(0\\) \u3002</p> <ul> <li>\u5c06\u5404\u53c2\u6570\u4ee3\u5165\u5230\u4e0a\u4e00\u8282\u5f97\u5230\u7684\u900f\u89c6\u6295\u5f71\u77e9\u9635\u4e2d\uff0c\u5f97\u5230</li> </ul> \\[ \\begin{aligned}   M_{persp} &amp;= \\left[\\begin{array}{cccc}   \\frac{2}{r-l} &amp; 0 &amp; 0 &amp; 0 \\\\   0 &amp; \\frac{2}{t-b} &amp; 0 &amp; 0 \\\\   0 &amp; 0 &amp; \\frac{2}{n-f} &amp; 0 \\\\   0 &amp; 0 &amp; 0 &amp; 1   \\end{array}\\right]\\left[\\begin{array}{cccc}   1 &amp; 0 &amp; 0 &amp; -\\frac{r+l}{2} \\\\   0 &amp; 1 &amp; 0 &amp; -\\frac{t+b}{2} \\\\   0 &amp; 0 &amp; 1 &amp; -\\frac{n+f}{2} \\\\   0 &amp; 0 &amp; 0 &amp; 1   \\end{array}\\right]\\left[\\begin{array}{cccc}   n &amp; 0 &amp; 0 &amp; 0 \\\\   0 &amp; n &amp; 0 &amp; 0 \\\\   0 &amp; 0 &amp; n+f &amp; -nf \\\\   0 &amp; 0 &amp; 1 &amp; 0   \\end{array}\\right]\\\\ &amp;=   \\left[\\begin{array}{cccc}   \\frac{1}{near\\cdot \\tan{\\frac{fovX}{2}}} &amp; 0 &amp; 0 &amp; 0 \\\\   0 &amp; \\frac{1}{near\\cdot \\tan{\\frac{fovY}{2}}} &amp; 0 &amp; 0 \\\\   0 &amp; 0 &amp; \\frac{2}{far-near} &amp; 0 \\\\   0 &amp; 0 &amp; 0 &amp; 1   \\end{array}\\right]\\left[\\begin{array}{cccc}   1 &amp; 0 &amp; 0 &amp; 0 \\\\   0 &amp; 1 &amp; 0 &amp; 0 \\\\   0 &amp; 0 &amp; 1 &amp; \\frac{near+far}{2} \\\\   0 &amp; 0 &amp; 0 &amp; 1   \\end{array}\\right]\\left[\\begin{array}{cccc} -near &amp; 0 &amp; 0 &amp; 0 \\\\   0 &amp; -near &amp; 0 &amp; 0 \\\\   0 &amp; 0 &amp; -(near+far) &amp; -near\\cdot far \\\\   0 &amp; 0 &amp; 1 &amp; 0   \\end{array}\\right] \\\\&amp;=   \\left[\\begin{array}{cccc}   \\frac{1}{near\\cdot \\tan{\\frac{fovX}{2}}} &amp; 0 &amp; 0 &amp; 0 \\\\   0 &amp; \\frac{1}{near\\cdot \\tan{\\frac{fovY}{2}}} &amp; 0 &amp; 0 \\\\   0 &amp; 0 &amp; \\frac{2}{far-near} &amp; \\frac{near+far}{far-near} \\\\   0 &amp; 0 &amp; 0 &amp; 1   \\end{array}\\right]\\left[\\begin{array}{cccc} -near &amp; 0 &amp; 0 &amp; 0 \\\\   0 &amp; -near &amp; 0 &amp; 0 \\\\   0 &amp; 0 &amp; -(near+far) &amp; -near\\cdot far \\\\   0 &amp; 0 &amp; 1 &amp; 0   \\end{array}\\right]\\\\ &amp;=   \\left[\\begin{array}{cccc}   \\frac{-1}{\\tan{\\frac{fovX}{2}}} &amp; 0 &amp; 0 &amp; 0 \\\\   0 &amp; \\frac{-1}{\\tan{\\frac{fovY}{2}}} &amp; 0 &amp; 0 \\\\   0 &amp; 0 &amp; \\frac{-(near+far)}{far-near} &amp; \\frac{-2\\cdot near\\cdot far}{far-near} \\\\   0 &amp; 0 &amp; 1 &amp; 0   \\end{array}\\right]\\\\ &amp;=   \\left[\\begin{array}{cccc}   \\frac{-1}{aspect\\cdot \\tan{\\frac{fovY}{2}}} &amp; 0 &amp; 0 &amp; 0 \\\\   0 &amp; \\frac{-1}{\\tan{\\frac{fovY}{2}}} &amp; 0 &amp; 0 \\\\   0 &amp; 0 &amp; \\frac{-(near+far)}{far-near} &amp; \\frac{-2\\cdot near\\cdot far}{far-near} \\\\   0 &amp; 0 &amp; 1 &amp; 0   \\end{array}\\right]   \\end{aligned}   \\] <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u5f97\u5230\u6700\u7ec8\u7684 \u900f\u89c6\u6295\u5f71\u77e9\u9635 \u4e3a</p> \\[ M_{persp}=\\left[\\begin{array}{cccc} \\frac{-1}{aspect\\cdot \\tan{\\frac{fovY}{2}}} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\frac{-1}{\\tan{\\frac{fovY}{2}}} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; \\frac{-(near+far)}{far-near} &amp; \\frac{-2\\cdot near\\cdot far}{far-near} \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\end{array}\\right] \\]"}, {"location": "theory/CG/basic/matrix/#_11", "title": "\u89c6\u7a97\u8f6c\u6362", "text": ""}, {"location": "theory/CG/basic/matrix/#_12", "title": "\u8f6c\u6362\u76ee\u6807", "text": "<p>\u901a\u8fc7\u4e0a\u9762\u7684\u8f6c\u6362\uff0c\u6211\u4eec\u5df2\u7ecf\u5f97\u5230\u4e86\u4e00\u4e2a\u6807\u51c6\u7acb\u65b9\u4f53 \\([-1,1]\\) \uff0c\u4e0b\u4e00\u6b65\u8981\u505a\u7684\u5c31\u662f\u89c6\u7a97\u8f6c\u6362\uff0c\u5373\u5c06\u6807\u51c6\u7acb\u65b9\u4f53\u8f6c\u6362\u5230 \\([0,width] \\times [0,height]\\) \u7684\u5e73\u9762\uff08\u5c4f\u5e55\uff09\u4e0a\u3002\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p>"}, {"location": "theory/CG/basic/matrix/#_13", "title": "\u89c6\u7a97\u77e9\u9635", "text": "<p>\u89c6\u7a97\u8f6c\u6362\u53ef\u4ee5\u62c6\u89e3\u4e3a\u4e24\u6b65\uff1a\u2460\u7f29\u653e\uff0c\u5373\\([-1,1]\\times[-1,1]\u2192[-\\frac{width}{2},\\frac{width}{2}]\\times[-\\frac{height}{2},\\frac{height}{2}]\\) \u2461\u5e73\u79fb\uff0c\u5373 \\([-\\frac{width}{2},\\frac{width}{2}]\\times[-\\frac{height}{2},\\frac{height}{2}] \u2192 [0,width]\\times[0,height]\\)\u3002</p> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230 \u89c6\u7a97\u8f6c\u6362\u77e9\u9635 \u4e3a</p> \\[ \\begin{aligned}M_{viewport}&amp;= \\left[\\begin{array}{cccc} 1 &amp; 0 &amp; 0 &amp; \\frac{width}{2} \\\\ 0 &amp; 1 &amp; 0 &amp; \\frac{height}{2} \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\left[\\begin{array}{cccc} \\frac{width}{2} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\frac{height}{2} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right]\\\\&amp;= \\left[\\begin{array}{cccc} \\frac{width}{2} &amp; 0 &amp; 0 &amp; \\frac{width}{2} \\\\ 0 &amp; \\frac{height}{2} &amp; 0 &amp; \\frac{height}{2} \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\end{aligned} \\]"}, {"location": "theory/CG/basic/matrix/#_14", "title": "\u603b\u7ed3", "text": "<p>\u7ecf\u8fc7\u4e0a\u9762\u7684\u63a8\u5bfc\uff0c\u6211\u4eec\u6700\u7ec8\u5f97\u5230\u4e86\u5c06\u573a\u666f\u4ece\u521d\u59cb\u7684\u4e16\u754c\u5750\u6807\u7cfb\u5230\u5c4f\u5e55\u5750\u6807\u7cfb\u7684\u6240\u6709\u8f6c\u6362\u77e9\u9635\uff0c\u5982\u4e0b \u89c6\u56fe\u8f6c\u6362\u77e9\u9635\uff1a </p> \\[ M_{view}=\\left[\\begin{array}{cccc} x_{\\hat{g} \\times \\hat{t}} &amp; y_{\\hat{g} \\times \\hat{t}}  &amp; z_{\\hat{g} \\times \\hat{t}}  &amp; 0 \\\\  x_{\\hat{t}}  &amp; y_{\\hat{t}} &amp;  z_{\\hat{t}} &amp; 0 \\\\ x_{-\\hat{g} }&amp; y_{-\\hat{g} } &amp; z_{-\\hat{g} } &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\cdot \\left[\\begin{array}{cccc} 1 &amp; 0 &amp; 0 &amp; -x_{e} \\\\ 0 &amp; 1 &amp; 0 &amp; -y_{e} \\\\ 0 &amp; 0 &amp; 1 &amp; -z_{e} \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\] <p>\u900f\u89c6\u6295\u5f71\u8f6c\u6362\u77e9\u9635\uff1a </p> \\[ \\begin{aligned} M_{persp} &amp;= \\left[\\begin{array}{cccc} \\frac{2}{r-l} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\frac{2}{t-b} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; \\frac{2}{n-f} &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right]\\left[\\begin{array}{cccc} 1 &amp; 0 &amp; 0 &amp; -\\frac{r+l}{2} \\\\ 0 &amp; 1 &amp; 0 &amp; -\\frac{t+b}{2} \\\\ 0 &amp; 0 &amp; 1 &amp; -\\frac{n+f}{2} \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right]\\left[\\begin{array}{cccc} n &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; n &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; n+f &amp; -nf \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\end{array}\\right]\\\\ &amp;=\\left[\\begin{array}{cccc} \\frac{-1}{aspect\\cdot \\tan{\\frac{fovY}{2}}} &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; \\frac{-1}{\\tan{\\frac{fovY}{2}}} &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; \\frac{-(near+far)}{far-near} &amp; \\frac{-2\\cdot near\\cdot far}{far-near} \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\end{array}\\right] \\end{aligned} \\] <p>\u89c6\u7a97\u8f6c\u6362\u77e9\u9635\uff1a </p> \\[ \\begin{aligned}M_{viewport}= \\left[\\begin{array}{cccc} \\frac{width}{2} &amp; 0 &amp; 0 &amp; \\frac{width}{2} \\\\ 0 &amp; \\frac{height}{2} &amp; 0 &amp; \\frac{height}{2} \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{array}\\right] \\end{aligned} \\] <p>\u5bf9\u4e8e\u521d\u59cb\u4e16\u754c\u5750\u6807\u7cfb\u4e0b\u7684\u573a\u666f\u5750\u6807 $ (x,y,z) $ \uff0c\u8981\u5c06\u5176\u6700\u7ec8\u5448\u73b0\u5728\u5c4f\u5e55\u4e0a\uff0c\u5373\u6c42\u5176\u5bf9\u5e94\u5c4f\u5e55\u5750\u6807\u7cfb\u7684\u70b9 \\((x',y',z')\\) \uff0c\u53ea\u9700\u8981\u5229\u7528\u4e0b\u5217\u7b49\u5f0f\u8ba1\u7b97\u5373\u53ef\uff1a</p> \\[ (x',y',z',1)^T=M_{viewport}M_{persp}M_{view}(x,y,z,1)^T \\]"}, {"location": "theory/CG/basic/matrix/#_15", "title": "\u53c2\u8003\u94fe\u63a5", "text": "<p>GAMES101-\u73b0\u4ee3\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u5165\u95e8-\u95eb\u4ee4\u742a_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>zhuanlan.zhihu.com [\u56fe\u5f62\u5b66\u7b14\u8bb0]\u63a8\u5bfc\u6295\u5f71\u77e9\u9635</p> <p>OpenGL\u4e2d\u7684\u5750\u6807\u53d8\u6362\u3001\u77e9\u9635\u53d8\u6362_\u5b59\u7fa4\u7684\u535a\u5ba2-CSDN\u535a\u5ba2_ndc\u5750\u6807\u7cfb</p>"}, {"location": "theory/CG/rendering/", "title": "\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u7684\u6e32\u67d3\u57fa\u7840", "text": ""}, {"location": "theory/CG/rendering/IBL/", "title": "\u300c\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u300d\u57fa\u4e8e\u56fe\u50cf\u7684\u7167\u660e", "text": "<p>\u73af\u5883\u6620\u5c04\u6280\u672f\u6f2b\u8c08</p> <p>LearnOpenGL - Diffuse irradiance</p> <p>Environment Mapping</p> <p>\u8be6\u89e3\u7403\u9762\u73af\u5883\u6620\u5c04 - Spherical Environment Mapping</p> <p>www.cnblogs.com \u7403\u9762\u5747\u5300\u91c7\u6837</p> <p></p> <p>\u57fa\u4e8e\u56fe\u50cf\u7684\u5149\u7167IBL</p> <p>\u3010Unreal\u4ece0\u52301\u3011\u3010\u7b2c\u4e00\u7ae0\uff1a\u7269\u7406\u7684\u5168\u5c40\u5149\u7167\u5b9e\u73b0\u30111.1\uff0cPRT\uff1a\u9884\u8ba1\u7b97\u7684\u5168\u5c40\u5149\u7167</p>"}, {"location": "theory/CG/rendering/basic/", "title": "\u6e32\u67d3\u7ba1\u7ebf\u57fa\u7840", "text": ""}, {"location": "theory/CG/rendering/basic/#games101-2", "title": "GAMES101 \u4f5c\u4e1a2", "text": ""}, {"location": "theory/CG/rendering/basic/#_1", "title": "\u7ed8\u5236\u6d41\u7a0b", "text": "flowchart TB A(\u8ba1\u7b97 Bounding Box) --&gt; B(\u904d\u5386 BB \u4e2d\u7684\u50cf\u7d20\u70b9 p) B --&gt; C(\"\u5224\u65ad p \u662f\u5426\u5728\u4e09\u89d2\u5f62\u5185\uff0c\u5373 insideTriangle(\u00b7)\") subgraph   C --&gt; | \u662f | D(\"\u901a\u8fc7\u91cd\u5fc3\u5750\u6807\u63d2\u503c\u8ba1\u7b97 p \u70b9\u7684 z \u503c\uff0c\u5373 computeBarycentric2D(\u00b7)\") D --&gt; E( \u5224\u65ad z \u503c\u662f\u5426\u5c0f\u4e8e depth buffer \u4e2d\u5bf9\u5e94\u7684\u503c ) E --&gt; | \u662f | F(\"\u66f4\u65b0 depth buffer \u4ee5\u53ca frame buffer\") end"}, {"location": "theory/CG/rendering/basic/#_2", "title": "\u5224\u65ad\u67d0\u4e00\u70b9\u662f\u5426\u5728\u4e09\u89d2\u5f62\u5185", "text": ""}, {"location": "theory/CG/rendering/basic/#_3", "title": "\u5e73\u9762\u4e2d\u7684\u5224\u65ad\u539f\u7406", "text": "<p>\u4ec5\u8003\u8651\u4e8c\u7ef4\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5730\u901a\u8fc7\u5411\u91cf\u53c9\u79ef\u7684\u65b9\u5f0f\u5feb\u901f\u5224\u65ad\u4e00\u4e2a\u70b9\u662f\u5426\u5728\u4e09\u89d2\u5f62\u4e2d\u3002\u5177\u4f53\u5730\uff0c\u5982\u4e0b\u53f3\u56fe\u6240\u793a\uff0c \u5982\u679c\u70b9 \\(p\\) \u5728\u4e09\u89d2\u5f62 \\(\\Delta_{abc}\\) \u5185\uff0c\u6211\u4eec\u4ece \\(a\\) \u70b9\u51fa\u53d1\uff0c\u6cbf\u7740\u56fa\u5b9a\u7684\u65b9\u5411\uff08\u9006\u65f6\u9488/\u987a\u65f6\u9488\uff09\u5728\u4e09\u6761\u8fb9\u884c\u8d70\u65f6\uff0c\u70b9 \\(p\\) \u5e94\u8be5\u59cb\u7ec8\u5728\u6211\u4eec\u8eab\u4f53\u7684\u540c\u4e00\u4fa7 \u3002\u56e0\u6b64\uff0c\u4e3a\u4e86\u5224\u65ad\u70b9 \\(p\\) \u662f\u5426\u5728\u4e09\u89d2\u5f62 \\(\\Delta_{abc}\\) \u5185\uff0c\u53ef\u4ee5\u5c06\u4e09\u89d2\u5f62\u7684\u9876\u70b9 \\(abc\\) \u6309\u987a\u5e8f\u8fde\u63a5\u8d77\u6765\uff0c\u5f62\u6210\u4e09\u4e2a\u5411\u91cf \\(\\vec{ab}\\)\u3001\\(\\vec{bc}\\)\u3001\\(\\vec{ca}\\)\u3002\u7136\u540e\u518d\u4ee5\u6bcf\u4e2a\u9876\u70b9\u4e3a\u57fa\u51c6\uff0c\u83b7\u5f97\u5411\u91cf\\(\\vec{ap}\\)\u3001\\(\\vec{bp}\\)\u3001\\(\\vec{cp}\\)\uff0c \u5224\u65ad\u4e09\u7ec4\u5bf9\u5e94\u5411\u91cf\u7684\u53c9\u79ef\u662f\u5426\u540c\u53f7 \uff0c\u82e5\u540c\u53f7\u5219\u70b9\u5728\u4e09\u89d2\u5f62\u5185\uff0c\u5426\u5219\u4e0d\u5728\u3002\u4f8b\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5982\u679c \\(p\\) \u5728\u4e09\u89d2\u5f62 \\(\\Delta_{abc}\\) \u5185\uff0c\u90a3\u4e48\u7531\u53c9\u4e58\u7684\u6027\u8d28\uff08\u53f3\u624b\u5b9a\u5219\uff09\uff0c\u4f1a\u6709 \\(\\vec{ab}\u00d7\\vec{ap}&gt;0\\) \u3002\u540c\u7406\uff0c\u4f1a\u6709\\(\\vec{bc}\u00d7\\vec{bp}&gt;0\\)\uff0c\\(\\vec{ca}\u00d7\\vec{cp}&gt;0\\)\u3002\u800c\u5982\u679c \\(p\\) \u5728\u4e09\u89d2\u5f62\u5916\uff0c\u6bd4\u5982 \\(p\u2019\\) \u70b9\uff0c\u5219\u6709 \\(\\vec{ab}\u00d7\\vec{ap'}&lt;0\\)\u3002</p> \u5149\u6805\u5316\u65f6\u53ef\u4ee5\u5148\u786e\u5b9a\u5305\u56f4\u76d2\u518d\u505a\u5224\u65ad \u5224\u65ad\u70b9Q\u662f\u5426\u5728\u4e09\u89d2\u5f62\u4e2d"}, {"location": "theory/CG/rendering/basic/#_4", "title": "\u4ee3\u7801\u5b9e\u6218", "text": "<pre><code>static bool insideTriangle(float x, float y, const Vector3f* _v)\n{   \n    // TODO : Implement this function to check if the point (x, y) is inside the triangle represented by _v[0], _v[1], _v[2]\n    Vector3f ab = _v[1] - _v[0];\n    Vector3f bc = _v[2] - _v[1];\n    Vector3f ca = _v[0] - _v[2];\n    ab.z() = bc.z() = ca.z() = 0;\n\n    Vector3f p(x, y, 0);\n    Vector3f ap = p - _v[0];\n    Vector3f bp = p - _v[1];\n    Vector3f cp = p - _v[2];\n    ap.z() = bp.z() = cp.z() = 0;\n\n    Vector3f ap_ab = ap.cross(ab);\n    Vector3f bp_bc = bp.cross(bc);\n    Vector3f cp_ca = cp.cross(ca);\n\n    bool isInside = (ap_ab.z() &gt;= 0 &amp;&amp; bp_bc.z() &gt;=0 &amp;&amp; cp_ca.z()&gt;=0) \n        || (ap_ab.z() &lt; 0 &amp;&amp; bp_bc.z() &lt; 0 &amp;&amp; cp_ca.z() &lt; 0);\n\n    return isInside;\n}\n</code></pre>"}, {"location": "theory/CG/rendering/basic/#_5", "title": "\u91cd\u5fc3\u5750\u6807\u63d2\u503c", "text": ""}, {"location": "theory/CG/rendering/basic/#_6", "title": "\u4ec0\u4e48\u662f\u91cd\u5fc3\u5750\u6807\uff1f", "text": "<p>Barycentric coordinates\uff08\u91cd\u5fc3\u5750\u6807\uff09\u662f\u6307\u7528 \u4e09\u4e2a\u6709\u5e8f\u70b9\u6240\u6784\u6210\u7684\u4e09\u89d2\u5f62\u4e2d\u7684\u4e00\u70b9\u5bf9\u6bcf\u4e2a\u7aef\u70b9\u7684\u6bd4\u4f8b\u6765\u63cf\u8ff0\u8be5\u70b9\u7684\u5750\u6807\u7684\u4e00\u79cd\u5750\u6807\u7cfb \u3002 </p> <p>\u5728\u4e00\u4e2a\u4e09\u89d2\u5f62ABC\u4e2d\uff0c\u70b9P\u7684\u91cd\u5fc3\u5750\u6807 \\((u, v, w)\\) \u8868\u793a\u4e3a\uff1a\\(P = uA + vB + wC\\)\uff0c\u5176\u4e2d \\(u+v+w=1\\)\uff0c \u4e14 \\(u\u3001v\u3001w\u22650\\)\u3002</p> <p>\u56e0\u6b64\uff0c \u91cd\u5fc3\u5750\u6807\u610f\u5473\u7740P\u70b9\u76f8\u5bf9\u4e8e\u4e09\u89d2\u5f62ABC\u7684\u91cd\u5fc3\u7684\u6bd4\u4f8b \u3002\u91cd\u5fc3\u5750\u6807\u5728\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u548c\u4e09\u89d2\u5f62\u7f51\u683c\u7684\u5904\u7406\u4e2d\u6709\u5e7f\u6cdb\u7684\u5e94\u7528\u3002</p> <p>\u91cd\u5fc3\u5750\u6807\u7cfb\u9488\u5bf9\u7279\u5b9a\u4e09\u89d2\u5f62\uff0c\u6bcf\u4e2a\u4e09\u89d2\u5f62\u90fd\u6709\u4e00\u5957\u81ea\u5df1\u7684\u91cd\u5fc3\u5750\u6807\u7cfb\uff0c \u4e3a\u4e86\u4f7f\u5f97\u8be5\u91cd\u5fc3\u5750\u6807\u7cfb\u5185\u7684\u70b9\u90fd\u662f\u4e09\u89d2\u5f62\u9876\u70b9\u7684\u4e00\u4e2a\u7ebf\u6027\u7ec4\u5408\uff0c\u5fc5\u987b\u6ee1\u8db3 \u03b1 + \u03b2 + \u03b3 = 1 \uff0c\u540c\u65f6\uff0c\u4e3a\u4e86\u5c06\u70b9\u9650\u5236\u5728\u4e09\u89d2\u5f62\u5185\u90e8\uff0c\u7ebf\u6027\u7ec4\u5408\u7cfb\u6570\u9700\u8981\u6ee1\u8db3 (\u03b1\u22650, \u03b2\u22650, \u03b3\u22650) \u3002</p> \u5f53\u67d0\u4e00\u70b9\u7684\u91cd\u5fc3\u5750\u6807\u90fd\u4e0d\u5c0f\u4e8e0\u65f6\uff0c\u8be5\u70b9\u4f4d\u4e8e\u4e09\u89d2\u5f62\u5185 \u91cd\u5fc3\u5750\u6807\u503c\u5bf9\u5e94\u4e86\u5404\u90e8\u5206\u5360\u603b\u4e09\u89d2\u5f62\u7684\u6bd4\u91cd <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c \u5f53\u6211\u4eec\u5c06\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\u6295\u5f71\u5230\u4e8c\u7ef4\u5e73\u9762\u4e0a\u65f6\uff0c\u8be5\u70b9\u7684\u91cd\u5fc3\u5750\u6807\u4f1a\u53d1\u751f\u53d8\u5316 \u3002\u8fd9\u662f\u56e0\u4e3a\u6295\u5f71\u6d89\u53ca\u5c06\u70b9\u4ece\u9ad8\u7ef4\u7a7a\u95f4\u8f6c\u6362\u4e3a\u4f4e\u7ef4\u7a7a\u95f4\uff0c\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u538b\u7f29\u6548\u5e94\u3002\u7ed3\u679c\uff0c\u6295\u5f71\u70b9\u4e0e\u4e09\u89d2\u5f62\u9876\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u6bd4\u7387\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u800c\u91cd\u5fc3\u5750\u6807\u4e5f\u4f1a\u53d1\u751f\u53d8\u5316\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u91cd\u5fc3\u5750\u6807\u53d6\u51b3\u4e8e\u5b9a\u4e49\u5b83\u4eec\u7684\u53c2\u8003\u7cfb\uff0c\u56e0\u6b64\u5728\u6295\u5f71\u65f6\u4e0d\u80fd\u4fdd\u6301\u4e0d\u53d8\u3002\u8fd9\u610f\u5473\u7740\u5728\u4f7f\u7528\u91cd\u5fc3\u5750\u6807\u8868\u793a\u70b9\u65f6\uff0c\u91cd\u8981\u7684\u662f\u8003\u8651\u5b83\u4eec\u6240\u5728\u7684\u4e0a\u4e0b\u6587\uff0c\u5e76\u786e\u4fdd\u6295\u5f71\u4e0d\u4f1a\u5f71\u54cd\u5750\u6807\u7684\u9884\u671f\u89e3\u91ca\u3002\u6bd4\u5982\uff0c \u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u5c5e\u6027\u8981\u5728\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u505a\u63d2\u503c \uff0c\u56e0\u4e3a\u6295\u5f71\u540e\u91cd\u5fc3\u7684\u4f4d\u7f6e\u4f1a\u53d8\u5316\u3002</p>"}, {"location": "theory/CG/rendering/basic/#_7", "title": "\u91cd\u5fc3\u5750\u6807\u7684\u6c42\u89e3", "text": "<p>\u91cd\u5fc3\u5750\u6807\u7cfb\u7684\u5efa\u7acb\u8fc7\u7a0b\u5982\u4e0b\u5de6\u56fe\u6240\u793a\uff1a\u5047\u8bbe\u4ee5 \\(A\\) \u4e3a\u539f\u70b9\uff0c\\(\\overrightarrow{AB}\\) \u548c \\(\\overrightarrow{AC}\\) \u4e3a\u5750\u6807\u8f74\uff0c\u5efa\u7acb\u5750\u6807\u7cfb\u3002</p> <p>\u539f\u5750\u6807\u7cfb\u4e0b\u4efb\u4e00\u70b9 \\(P(x,y)\\) \u5728\u4e09\u89d2\u5f62 \\(\\Delta_{ABC}\\) \u7684\u91cd\u5fc3\u5750\u6807\u7cfb\u4e0b\u7684\u5750\u6807\u503c \\((\\alpha,\\beta,\\gamma)\\) \u53ef\u4ee5\u901a\u8fc7\u4e0b\u53f3\u56fe\u6240\u793a\u7684\u516c\u5f0f\u8ba1\u7b97\u3002\u516c\u5f0f\u63a8\u5bfc\u5982\u4e0b\u3002</p> \\[ \\alpha=\\frac{A_A}{A_A+A_B+A_C}=\\frac{|\\overrightarrow{PA}\\times\\overrightarrow{PB}|}{|\\overrightarrow{AB}\\times\\overrightarrow{AC}|},\\quad \\beta=\\frac{|\\overrightarrow{PA}\\times\\overrightarrow{PC}|}{|\\overrightarrow{AB}\\times\\overrightarrow{AC}|},\\quad \\gamma=1-\\alpha-\\beta \\] \u91cd\u5fc3\u5750\u6807\u7cfb\u7684\u5efa\u7acb \u91cd\u5fc3\u5750\u6807\u7cfb\u4e0b\uff0c\u6c42\u89e3\u4efb\u610f\u4e00\u70b9\u7684\u5750\u6807"}, {"location": "theory/CG/rendering/basic/#_8", "title": "\u4ee3\u7801\u5b9e\u6218", "text": "<pre><code>static std::tuple&lt;float, float, float&gt; computeBarycentric2D(float x, float y, const Vector3f* v)\n{\n    float c1 = (x*(v[1].y() - v[2].y()) + (v[2].x() - v[1].x())*y + v[1].x()*v[2].y() - v[2].x()*v[1].y()) / (v[0].x()*(v[1].y() - v[2].y()) + (v[2].x() - v[1].x())*v[0].y() + v[1].x()*v[2].y() - v[2].x()*v[1].y());\n    float c2 = (x*(v[2].y() - v[0].y()) + (v[0].x() - v[2].x())*y + v[2].x()*v[0].y() - v[0].x()*v[2].y()) / (v[1].x()*(v[2].y() - v[0].y()) + (v[0].x() - v[2].x())*v[1].y() + v[2].x()*v[0].y() - v[0].x()*v[2].y());\n    float c3 = (x*(v[0].y() - v[1].y()) + (v[1].x() - v[0].x())*y + v[0].x()*v[1].y() - v[1].x()*v[0].y()) / (v[2].x()*(v[0].y() - v[1].y()) + (v[1].x() - v[0].x())*v[2].y() + v[0].x()*v[1].y() - v[1].x()*v[0].y());\n    return {c1,c2,c3};\n}\n</code></pre>"}, {"location": "theory/CG/rendering/basic/#todo", "title": "\u3010TODO\u3011\u8d85\u91c7\u6837", "text": "<pre><code>float offset_x[4] = { 0.25, 0.25, 0.75, 0.75 };\nfloat offset_y[4] = { 0.25, 0.75, 0.25, 0.75 };\nfor (int i = 0; i &lt; 4; i++) {\n    float tx = (float)x + offset_x[i];\n    float ty = (float)y + offset_y[i];\n\n    if (!insideTriangle(tx, ty, t.v)) continue;\n\n    // If so, use the following code to get the interpolated z value.\n    auto [alpha, beta, gamma] = computeBarycentric2D(tx, ty, t.v);\n    float w_reciprocal = 1.0 / (alpha / v[0].w() + beta / v[1].w() + gamma / v[2].w());\n    float z_interpolated = alpha * v[0].z() / v[0].w() + beta * v[1].z() / v[1].w() + gamma * v[2].z() / v[2].w();\n    z_interpolated *= w_reciprocal;\n\n    // TODO : set the current pixel (use the set_pixel function) to the color of the triangle (use getColor function) if it should be painted.\n    z_interpolated = 1 - z_interpolated;\n    if (z_interpolated &lt; sample_depth_buf[get_index(x, y)][i]) {\n        sample_depth_buf[get_index(x, y)][i] = z_interpolated;\n        sample_frame_buf[get_index(x, y)][i] = t.getColor();\n    }\n}\nVector3f tc(0, 0, 0);\nfor (int i = 0; i &lt; 4; i++) {\n    tc += 0.25 * sample_frame_buf[get_index(x, y)][i];\n}\nset_pixel(Vector3f(x, y, 0), tc);\n</code></pre>"}, {"location": "theory/CG/rendering/basic/#_9", "title": "\u53c2\u8003\u94fe\u63a5", "text": "<p>GAMES101: \u73b0\u4ee3\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u5165\u95e8 (ucsb.edu)</p> <p>GAMES101-\u4f5c\u4e1a1\u3001\u4f5c\u4e1a2\u3001\u4f5c\u4e1a3\u7684\u89e3\u9898\u548c\u6846\u67b6\u5206\u6790 - \u77e5\u4e4e (zhihu.com)</p> <p>\u56fe\u5f62\u5b66\u968f\u7b14\uff1a\u4e09\u89d2\u5f62\u91cd\u5fc3\u5750\u6807\u63a8\u5bfc - \u77e5\u4e4e (zhihu.com)</p> <p>\u5224\u65ad\u70b9\u662f\u5426\u5728\u4e09\u89d2\u5f62\u5185 - \u7ff0\u58a8\u5c0f\u751f - \u535a\u5ba2\u56ed (cnblogs.com)</p> <p>\u7528\u5411\u91cf\u53c9\u4e58\u5feb\u901f\u5224\u65ad\u70b9\u5728\u4e09\u89d2\u5f62\u5185\u5916\u539f\u7406\u4e0e\u4ee3\u7801_\u53c9\u4e58\u5224\u65ad\u70b9\u662f\u5426\u5728\u4e09\u89d2\u5f62\u5185_zeeq_\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p>"}, {"location": "theory/CG/rendering/basic/#games101-3", "title": "GAMES101 \u4f5c\u4e1a3", "text": ""}, {"location": "theory/CG/rendering/basic/#todo_1", "title": "\u3010TODO\u3011\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf", "text": "\u6298\u53e0\u5757\u6807\u9898      \u56fa\u5b9a\u6e32\u67d3\u7ba1\u7ebf&lt;\u672c\u7ae0\u7684\u6838\u5fc3\uff0c\u524d\u9762\u4ec5\u9700\u4e86\u89e3\u5373\u53ef&gt; \u5728\u6211\u4eec\u7684\u56fe\u5f62\u51e0\u4f55\u5b66\u4e0a\u6709\u4e863D\u573a\u666f\u53ca\u6444\u50cf\u673a\uff0c\u6700\u540e\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u5b83\u4eec\u8f6c\u6362\u62102D \u56fe\u5f62\u6765\u663e\u793a\u5728\u5c4f\u5e55\u4e0a\u3002\u8fd9\u5c31\u662f\u56fa\u5b9a\u6e32\u67d3\u7ba1\u7ebf\u6240\u4f5c\u7684\u5de5\u4f5c\u3002 \u5b9e\u9645\u4e0aD3D\u7684\u6e32\u67d3\u7ba1\u7ebf\u5927\u90e8\u5206\u5de5\u4f5c\u90fd\u662f\u5728\u505a\u56fe\u5f62\u53d8\u6362\u3002D3\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u4fbf\u7684\u51fd\u6570 g_pDevice-&gt;SetTransform(\u53d8\u6362\u7c7b\u578b\uff0c\u53d8\u6362\u77e9\u9635)\u3002 \u4e0b\u8fb9\u6211\u4eec\u4e00\u8d77\u56de\u987e\u6216\u8005\u5b66\u4e60\u4e00\u4e0bD3D\u7684\u6e32\u67d3\u6d41\u6c34\u7ebf\u7684\u7406\u8bba\u7ec6\u8282\uff1a \u200b        1\u3001\u672c\u5730\u7a7a\u95f4 \u8bf4\u767d\u4e86\u5c31\u662f\u5efa\u6a21\u7a7a\u95f4(\u7f8e\u5de5\u5efa\u6a21\uff0c\u6216\u8005\u4f60\u5728\u672c\u5730\u7ec4\u7ec7\u4e09\u89d2\u5f62\u7684\u7ec4\u7ec7\u65b9\u5f0f) \u200b        2\u3001\u4e16\u754c\u7a7a\u95f4 \u901a\u8fc7\u5e73\u79fb\u65cb\u8f6c\u7f29\u653e\u5c06\u90a3\u4e9b\u672c\u5730\u7a7a\u95f4\u7684\u7269\u4f53\u8f6c\u6362\u6210\u4e16\u754c\u7a7a\u95f4\u5185\u7684\u7269\u4f53\uff0c\u4ee5 \u5b9e\u73b0\u573a\u666f\u7684\u7ec4\u7ec7\u3002D3D\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f4d\u7f6e\u53d8\u6362\u7684\u51fd\u6570D3DXMaterxTranslation\uff1b \u65cb\u8f6c\u51fd\u6570D3DXMaterxRoationX/Y/Z/Axis;\u7f29\u653e\u51fd\u6570D3DXMaterxScalling\u3002\u5177\u4f53 \u8bf7\u4f60\u53c2\u9605DXAPI\u3002 \u200b        3\u3001\u89c6\u56fe\u7a7a\u95f4(\u5373\u6444\u50cf\u673a\u7a7a\u95f4) \u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u51e0\u4f55\u56fe\u548c\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u662f\u76f8\u5bf9\u4e8e\u4e16\u754c\u5750\u6807\u800c\u5b9a\u4e49\u7684\u3002\u4f46\u662f\u6709 \u4e00\u4e2a\u7f3a\u9677\u662f\u5982\u679c\u6444\u50cf\u673a\u7684\u4f4d\u7f6e\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u4e0d\u662f\u786e\u5b9a\u7684\u6216\u8005\u6b7b\u677f\u7684\uff0c\u90a3 \u901a\u8fc7\u8be5\u6444\u50cf\u673a\u53bb\u89c2\u5bdf\u7269\u4f53\u90a3\u662f\u975e\u5e38\u96be\u4e8e\u63a7\u5236\u548c\u4f4e\u6548\u7684\u3002\u5728\u8fd9\u79cd\u5c34\u5c2c\u5c40\u9762\u4e0b\uff0c\u8bde \u751f\u4e86\u89c6\u56fe\u7a7a\u95f4\u8fd9\u4e2a\u6982\u5ff5\uff01\u6211\u4eec\u8fd9\u6837\u64cd\u4f5c\u6444\u50cf\u673a\uff0c\u9996\u5148\u5c06\u6444\u50cf\u673a\u79fb\u81f3\u4e16\u754c\u7a7a\u95f4\u7684 \u539f\u70b9\uff0c\u7136\u540e\u65cb\u8f6c\u6444\u50cf\u673a\uff0c\u8ba9\u5b83\u7684\u6b63\u65b9\u5411\u4e0e\u4e16\u754c\u7a7a\u95f4\u7684Z\u65b9\u5411\u4e00\u81f4\u3002\u8fd9\u6837\u5f53\u4f60\u518d\u79fb \u52a8\u6216\u8005\u65cb\u8f6c\u6444\u50cf\u673a\u7684\u65f6\u5019\uff0c\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u51e0\u4f55\u56fe\u5c31\u4f1a\u968f\u7740\u6444\u50cf\u673a\u7684\u53d8\u5316\u800c\u505a\u76f8 \u540c\u7684\u53d8\u5316\u3002\u4f7f\u5176\u53d8\u5f97\u987a\u5176\u81ea\u7136\uff0c\u800c\u4e0d\u662f\u88ab\u52a8\u7684\u5566\uff01 D3D\u540c\u6837\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u4fbf\u7684\u51fd\u6570D3DXMatriLookAtLH\u3002 \u200b       4\u3001\u80cc\u9762\u62e3\u9009 D3D\u901a\u8fc7\u80cc\u9762\u62e3\u9009\u65b9\u5f0f\u5254\u9664(\u5373\u5220\u9664\u591a\u4f59\u7684\u5904\u7406\u8fc7\u7a0b)\u65e0\u7528\u7684\u80cc\u9762\u591a\u8fb9\u5f62\uff0c\u6765 \u63d0\u9ad8\u7a0b\u5e8f\u7684\u6267\u884c\u6548\u7387\u3002 D3D\u9ed8\u8ba4\u7684\u9876\u70b9\u662f\u4ee5\u987a\u65f6\u9488\u7ec4\u7ec7\u7684\u591a\u8fb9\u5f62\u4e3a\u8be5\u591a\u8fb9\u5f62\u7684\u6b63\u9762\u3002 D3D\u540c\u6837\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fd\u6570\u6765\u505a\u8fd9\u9879\u5de5\u4f5c\uff1a g_Device-&gt;SetRendState(D3DRS_CULLMODE\uff0cValue)\u3002\u9ed8\u8ba4\u7684\u662fD3DCULL_CCW\u3002 \u200b       5\u3001\u5149\u7167 \u5149\u7167\u7684\u5b9a\u4e49\u662f\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\uff0c\u5e76\u4e0d\u662f\u5728\u89c6\u56fe\u7a7a\u95f4\u5b9a\u4e49\u7684\u3002\u4f46\u662f\u89c6\u56fe\u7a7a\u95f4 \u5c06\u8fd9\u4e9b\u70b9\u5f04\u7684\u975e\u5e38\u771f\u5b9e\u3002 \u200b       6\u3001\u88c1\u526a \u8d85\u51fa\u51ed\u501f\u53f0\u4f53\u7684\u90e8\u5206\u51e0\u4f55\u56fe\u5c06\u88ab\u65e0\u60c5\u88c1\u526a\uff0c\u501f\u6b64\u63d0\u9ad8\u7a0b\u5e8f\u6267\u884c\u7684\u6548\u7387\u8ddf\u6027\u80fd\u3002 \u200b        7\u3001\u6295\u5f71 \u6295\u5f71\u7684\u4f5c\u7528\u5c31\u662f\u5c063D\u573a\u666f\u8f6c\u6362\u62102D\u56fe\u50cf\uff0c\u7136\u540e\u8f6c\u5230\u6295\u5f71\u7a97\u53e3\u4e0a\u53bb\u3002 \u8fd9\u79cd\u4ecen\u7ef4\u5230n-1\u7ef4\u7684\u8fc7\u7a0b\u5c31\u53eb\u6295\u5f71\u3002\u6e38\u620f\u5f00\u53d1\u4e2d\u7528\u5230\u7684\u6295\u5f71\u662f\u900f\u89c6\u6295\u5f71\u3002 \u56e0\u4e3a\u900f\u89c6\u6295\u5f71\u53ef\u4ee5\u4f7f\u8fdc\u79bb\u6444\u50cf\u673a\u7684\u56fe\u5f62\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u7684\u65f6\u5019\u4e5f\u53d8\u5c0f\uff0c\u8fd9\u4f7f\u5f97 \u6211\u4eec\u7684\u6548\u679c\u66f4\u52a0\u903c\u771f\u7684\u8f6c\u6362\u62102D\u56fe\u50cf\u3002 D3D\u540c\u6837\u4e5f\u7ed9\u6211\u4eec\u4e00\u4e2a\u7b80\u4fbf\u7684\u6295\u5f71\u53d8\u6362\u77e9\u9635\uff1aD3DXMaterxPerspectiveFovLH\u3002 \u200b       8\u3001\u89c6\u53e3\u53d8\u6362 \u89c6\u53e3\u53d8\u6362\u5c31\u662f\u5c06\u6295\u5f71\u7a97\u53e3\u53d8\u6362\u4e3a\u5c4f\u5e55\u4e0a\u4e00\u4e2a\u77e9\u5f62\u533a\u57df\u7684\u53ef\u9760\u53d8\u6362\uff0c\u8fd9\u4e2a\u77e9\u5f62\u533a\u57df \u5c31\u662f\u6240\u8c13\u7684\u89c6\u53e3\u3002 D3D\u4e2d\u6709\u4e00\u4e2a\u7ed3\u6784\u4f53\u5e2e\u52a9\u6211\u4eec\u8bbe\u5b9a\u89c6\u53e3\u7684\u76f8\u5173\u5c5e\u6027D3DVIEWPORT9\u7ed3\u6784\uff1b\u5e76\u4e14D3D\u8fd8 \u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u53e6\u5916\u4e00\u4e2a\u91cd\u8981\u7684\u51fd\u6570g_pDevice-&gt;SetViewPort(D3DVIEWPORT\u7ed3\u6784\u7684\u4e00\u4e2a \u53d8\u91cf\u5730\u5740)\u3002 \u5bf9\u4e8e\u89c6\u53e3\u53d8\u6362\u7684\u77e9\u9635\u7684\u76f8\u5173\u91cd\u8981\u77e5\u8bc6\u70b9\u4e0b\u8282\u8fdb\u884c\u91cd\u8981\u5206\u6790\u3002 \u200b       9\u3001\u5149\u73ca\u5316\u5904\u7406 \u7ecf\u8fc7\u89c6\u53e3\u53d8\u6362\u8fd9\u4e9b\u4e2a\u56fe\u50cf\u5c31\u5230\u5c4f\u5e55\u4e0a\u53bb\u4e86\u3002\u5149\u6805\u5316\u6240\u5904\u7406\u7684\u662f\u8ba1\u7b97\u9700\u8981\u663e\u793a\u7684\u6bcf\u4e2a \u4e09\u89d2\u5f62\u4e2d\u6bcf\u4e2a\u70b9\u7684\u50cf\u7d20\u503c\u3002\u5b83\u603b\u662f\u5e94\u8be5\u901a\u8fc7\u786c\u4ef6\u6765\u8fdb\u884c\u5904\u7406\uff0c\u56e0\u4e3a\u5b83\u592a\u8fc7\u4e8e\u7e41\u7410\u4e86\u5982\u679c \u5fae\u8f6f\u81ea\u5df1\u7f16\u7801\u5904\u7406\u7684\u8bdd\u3002 \u5728\u8ba1\u7b97\u5b8c\u4e86\u50cf\u7d20\u503c\u4e4b\u540e\u5462\uff0c\u5b83\u5c31\u5c06\u8fd9\u4e2a\u6210\u5f62\u76842D\u56fe\u50cf\u51f8\u73b0\u51fa\u6765\u5566\uff01 \u200b    \u8bf4\u4e86\u8fd9\u4e48\u591a\uff0c\u6211\u611f\u89c9\u6700\u540e\u9700\u8981\u603b\u7ed3\u4e00\u4e0b\u5b50\uff0c\u4f60\u89c9\u5f97\u5462\uff1f \u672c\u7ae0\u91cd\u70b9\u9610\u8ff0\u4e86D3D\u7684\u56fa\u5b9a\u6e32\u67d3\u6d41\u6c34\u7ebf\u3002\u6d89\u53ca9\u5c0f\u70b9\uff0c\u90a3\u4f60\u5982\u4f55\u8bb0\u5fc6\u5462\uff1f \u8fd8\u662f\u4e4b\u524d\u8bf4\u7684D3D\u521d\u59cb\u5316\u90a3\u4e2a\u8bb0\u5fc6\u65b9\u6cd5\uff1a \u5206\u4e3a3\u4e2a\u6d41\u7a0b\uff1a \u8bbe\u8ba1 --- \u751f\u4ea7 --- \u663e\u793a \u8bbe\u8ba1\uff1a\u672c\u5730 ---&gt; \u4e16\u754c --&gt;\u89c6\u56fe\u7a7a\u95f4(\u6444\u50cf\u673a\u7a7a\u95f4) --&gt; \u62e3\u9009 --&gt;\u5149\u7167 ---&gt; \u88c1\u526a(\u8d85\u51fa\u5e73\u622a\u53f0\u4f53\u7684\u90e8\u5206) \u751f\u4ea7\uff1a\u6309\u7167\u4ee5\u4e0a\u8bbe\u8ba1\u7684\u89c4\u683c\u8fdb\u5165\u751f\u4ea7\u6d41\u7a0b --&gt; \u6295\u5f71(\u5c06\u8bbe\u8ba1\u4e2d\u76843D\u7269\u4f53\u8f6c\u6362\u6210\u73b0\u5b9e\u76842D\u56fe\u50cf\uff0c\u5e76\u8f6c\u5230\u6295\u5f71\u4e0a\u53bb) ---&gt;\u89c6\u53e3\u53d8\u6362(\u5c062D\u56fe\u50cf\u6620\u5c04\u5230\u5c4f\u5e55\u7684\u67d0\u4e2a\u533a\u57df\u5185\uff0c\u7ed9\u4ed6\u63d0\u4f9b\u53ef\u4f9b\u663e\u793a\u7684\u7a7a\u95f4) \u663e\u793a\uff1a \u5149\u6805\u5316\u5904\u7406 \u6279\u6ce8\uff1a \u5149\u6805\u5316\u505a\u4e86\u4ec0\u4e48\u4ec0\u4e48\u4e8b\u60c5: \u5149\u6805\u5316\u5c31\u662f\u628a\u77e2\u91cf\u7684\u56fe\u5f62\u50cf\u7d20\u5316,\u6bd4\u5982\u8bf43\u4e2a\u9876\u70b9\u7ec4\u6210\u7684\u4e00\u4e2a\u4e09\u89d2\u5f62\u628a\u5b83\u8f6c\u5316\u4e3a\u5c4f\u5e55\u4e0a\u7684\u50cf\u7d20\u7684\u8fc7\u7a0b\u3002 \u7b80\u5355\u7684\u8bf4\uff0c\u5c31\u662f\u628a\u8981\u663e\u793a\u7684\u4e1c\u897f\uff0c\u663e\u793a\u5728\u663e\u793a\u5668\u4e0a\u8fc7\u7a0b(\u7ed9\u56fe\u50cf\u52a0\u989c\u8272\u5b9e\u9645\u4e0a)\u3002"}, {"location": "theory/CG/rendering/basic/#_10", "title": "\u6cd5\u7ebf\u5411\u91cf\u53d8\u6362", "text": "<p>\u6cd5\u7ebf\u5411\u91cf\u4e0d\u662f\u4e00\u76f4\u5b58\u5728\u4e8e\u4e16\u754c\u5750\u6807\u7a7a\u95f4\u4e4b\u4e2d\u5417\uff0c\u4e3a\u4ec0\u4e48\u8981\u53bb\u53d8\u6362\u4ed6\u5462\uff1f\u5176\u5b9e\u539f\u56e0\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a \u6a21\u578b\u53d8\u6362 \u53ef\u80fd\u4f1a\u5bfc\u81f4\u6a21\u578b\u4f4d\u7f6e\u5f62\u72b6\u53d1\u751f\u6539\u53d8\uff0c\u5982\u679c\u5c5e\u4e8e\u8be5\u6a21\u578b\u7684\u5404\u4e2a\u4e09\u89d2\u5f62\u9762\u7684\u6cd5\u7ebf\u5411\u91cf\u4e0d\u8ddf\u7740\u6539\u53d8\u7684\u8bdd\uff0c\u90a3\u4e48\u6b64\u65f6\u6240\u8bb0\u5f55\u7684\u6cd5\u7ebf\u5411\u91cf\u5c31\u662f\u9519\u8bef\u7684\u3002\u56e0\u6b64\u6cd5\u7ebf\u5411\u91cf\u4e00\u5b9a\u4e5f\u8981\u8ddf\u7740\u6a21\u578b\u672c\u8eab\u53d1\u751f\u6539\u53d8\u3002</p> <p>\u90a3\u4e48\u662f\u5426\u7b80\u5355\u7684\u5c06\u4f5c\u7528\u5728\u6a21\u578b\u672c\u8eab\u7684\u53d8\u6362\u4e5f\u4f5c\u7528\u5728\u5bf9\u5e94\u7684\u6cd5\u7ebf\u5411\u91cf\u4e4b\u4e0a\u5c31\u53ef\u4ee5\u4e86\u5462\uff1f\u7b54\u6848\u662f\u5426\u5b9a\u7684\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u4e00\u4e2a\u7b80\u5355\u77e9\u5f62\u7ecf\u8fc7\u4e00\u4e2a\u526a\u5207\u53d8\u6362 \\(\\mathbf{M}\\) \u4e4b\u540e\uff0c\u4e0d\u96be\u53d1\u73b0\u77e9\u5f62\u53f3\u8fb9\u7684\u6cd5\u7ebf\u5411\u91cf\u6ca1\u6709\u6539\u53d8\uff0c\u800c\u4e0e\u53d8\u6362\u77e9\u9635 \\(\\mathbf{M}\\cdot\\mathbf{n}\\) \u5f97\u5230\u7684\u7ed3\u679c\u4e0d\u76f8\u7b26\u3002</p> \u5750\u6807\u7cfb\u53d8\u6362\u6d41\u7a0b\u56fe \u793a\u4f8b\uff1a\u5c06\u540c\u6837\u7684\u53d8\u6362\u5e94\u7528\u5230\u6cd5\u5411\u91cf\u4e0a\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9519\u8bef"}, {"location": "theory/CG/rendering/basic/#_11", "title": "\u6cd5\u7ebf\u5411\u91cf\u53d8\u6362\u516c\u5f0f\u63a8\u5bfc", "text": "<p>\u5047\u8bbe \\(\\mathbf{t}\\) \u662f\u539f\u5e73\u9762\u4e0a\u7684\u4efb\u4e00\u5411\u91cf\uff0c\u5219\u6709 \\(\\mathbf{n}^T \\cdot \\mathbf{t}=\\mathbf{0}\\) \u3002\u8bb0\u53d8\u6362\u77e9\u9635\u4e3a \\(\\mathbf{M}\\) \uff0c\u6709</p> \\[ \\mathbf{n}^T\\cdot\\mathbf{t}=\\mathbf{n}^T\\cdot\\mathbf{M}^{-1}\\cdot\\mathbf{M}\\cdot\\mathbf{t}=(\\mathbf{n}^T\\cdot\\mathbf{M}^{-1})\\cdot(\\mathbf{M}\\cdot\\mathbf{t})= \\mathbf{0} \\\\ \\Longrightarrow\\quad \\mathbf{n'}^T=\\mathbf{n}^T\\cdot\\mathbf{M}^{-1} \\\\ \\Longrightarrow\\quad \\mathbf{n'}=(\\mathbf{M}^{-1})^T\\cdot\\mathbf{n} \\] <p>\u7531\u6b64\uff0c\u6211\u4eec\u63a8\u5bfc\u51fa\u53d8\u6362\u540e\u7684 \\(\\mathbf{n'}\\) \u7684\u8868\u8fbe\u5f0f\uff0c\u5373 \u5728\u4f7f\u7528\u53d8\u6362\u77e9\u9635\u4e3a \\(\\mathbf{M}\\) \u5bf9\u9876\u70b9\u505a\u53d8\u6362\u65f6\uff0c\u6211\u4eec\u9700\u8981\u540c\u65f6\u5bf9\u6cd5\u5411\u91cf\u65bd\u52a0\u53d8\u6362 \\((\\mathbf{M}^{-1})^T\\) \u3002</p>"}, {"location": "theory/CG/rendering/basic/#_12", "title": "\u4ee3\u7801\u5b9e\u6218", "text": "<pre><code>// Correct Normal\nEigen::Matrix4f inv_trans = (view * model).inverse().transpose();\nEigen::Vector4f n[] = {\n    inv_trans * to_vec4(t-&gt;normal[0], 0.0f),\n    inv_trans * to_vec4(t-&gt;normal[1], 0.0f),\n    inv_trans * to_vec4(t-&gt;normal[2], 0.0f)\n};\n</code></pre>"}, {"location": "theory/CG/rendering/basic/#z-buffer-w-buffer", "title": "Z-buffer \u4e0e W-buffer", "text": "<p>\u4ee5\u4e0b\u5185\u5bb9\u5f15\u7528\u81ea \u8be6\u7ec6\u4ecb\u7ecdZ-Buffer\u4e0eW-Buffer-\u963f\u91cc\u4e91\u5f00\u53d1\u8005\u793e\u533a (aliyun.com) \u3002</p> <p>Depth-Buffer\uff08\u6df1\u5ea6\u7f13\u5b58\uff09\u6709\u4e24\u79cd\uff1aZ-Buffer \u548c W-Buffer\uff0c\u8fd9\u91cc\u8ba8\u8bba\u8fd9\u4e24\u79cd\u6df1\u5ea6\u7f13\u5b58\u7684\u533a\u522b\uff0c\u4ee5\u53ca\u5982\u4f55\u5728\u4e24\u8005\u4e4b\u95f4\u8f6c\u6362\u3002</p>"}, {"location": "theory/CG/rendering/basic/#w", "title": "w \u7684\u542b\u4e49", "text": "<p>3D\u7a7a\u95f4\u70b9\u7684\u5750\u6807\u662f \\((x,y,z)\\)\uff0c\u4e3a\u4e86\u4f7f\u77e9\u9635\u4e58\u6cd5\u5177\u6709\u5e73\u79fb\u53d8\u6362\u7684\u529f\u6548\uff0c\u6211\u4eec\u75284D\u7a7a\u95f4\u4e2d\u7684\u70b9 \\((x,y,z,w)\\) \u6765\u8868\u793a3D\u7a7a\u95f4\u4e2d\u7684\u70b9 \\((x'\uff0cy'\uff0cz')\\) \uff0c\u8fd9\u4e24\u4e2a\u4e0d\u540c\u7a7a\u95f4\u70b9\u4e4b\u95f4\u7684\u5173\u7cfb\u662f\uff1a</p> \\[ x'=\\frac{x}{w},\\quad y'=\\frac{y}{w},\\quad z'=\\frac{z}{w} \\] <p>\u50cf\u8fd9\u6837\u7528\u56db\u7ef4\u7a7a\u95f4\u70b9\u8868\u793a\u4e09\u7ef4\u7a7a\u95f4\u70b9\uff0c\u6216\u8005\u8bf4\u7528 \\(n + 1\\) \u7ef4\u7a7a\u95f4\u70b9\u8868\u793a \\(n\\) \u7ef4\u7a7a\u95f4\u70b9\u7684\u65b9\u6cd5\u53eb\u505a \u201c\u9f50\u6b21\u5750\u6807\u8868\u793a\u6cd5\u201d\u3002</p> <p>\u5b9e\u9645\u4f7f\u7528\u4e2d\uff0c\u5728\u6a21\u578b-&gt;\u4e16\u754c\u8f6c\u6362\u3001\u4e16\u754c-&gt;\u89c6\u56fe\u8f6c\u6362\u8fc7\u7a0b\u4e2d\uff0c\\(w\\) \u901a\u5e38\u4fdd\u6301\u4e0d\u53d8\uff0c\u603b\u662f\u7b49\u4e8e \\(1\\)\uff0c\u8fd9\u6837\uff0c\u9f50\u6b21\u5750\u6807\u7684\u524d\u4e09\u4e2a\u5206\u91cf\u5c31\u662f\u5bf9\u5e943D\u7a7a\u95f4\u70b9\u7684\u4e09\u4e2a\u5750\u6807\u5206\u91cf\u3002\u4f46\u662f\uff0c\u7ecf\u8fc7 \u900f\u89c6\u6295\u5f71\u53d8\u6362\u540e\uff0c\\(w\\) \u5c06\u5f97\u5230\u4e00\u4e2a\u6bd4\u4f8b\u503c \uff0c\u6bd4\u5982\uff0c\u4e00\u822c\u7684\u900f\u89c6\u6295\u5f71\u53d8\u6362\u77e9\u9635\u662f\uff1a</p> \\[ \\begin{matrix} W &amp; 0 &amp; 0 &amp; 0\\\\ 4 &amp; H &amp; 6 &amp; 0\\\\ 7 &amp; 8 &amp; Q &amp; 1\\\\ 0 &amp; 0 &amp; -QZ_n &amp;0 \\end{matrix} \\] <p>\u5176\u4e2d\u3000 \\(Z_n\\) \u4e3a\u8fd1\u88c1\u526a\u9762 \\(z\\) \u5750\u6807\uff0c\\(Z_f\\) \u4e3a\u8fdc\u88c1\u526a\u9762 \\(z\\) \u5750\u6807\uff0c\\(W=2 \\cdot Z_n / \u89c6\u53e3\u5bbd\u5ea6\\) \uff0c\\(H=2 \\cdot Z_n / \u89c6\u53e3\u9ad8\u5ea6\\)\uff0c\\(Q=Z_f / (Z_f - Z_n)\\) \u3002</p> <p>\u5c06\u70b9 \\((x,y,z,1)\\) \u4e58\u4ee5\u6b64\u77e9\u9635\uff0c\\(w\\) \u4fbf\u4e0d\u518d\u662f \\(1\\) \uff0c\u800c\u5bf9\u5e94\u76843D\u7a7a\u95f4\u70b9\u5750\u6807 \\((x / w,y / w,z / w)\\) \uff08\u8fd9\u79cd\u8ba1\u7b97\u4e5f\u88ab\u79f0\u4e3a \u900f\u89c6\u9664\u6cd5 \uff09\u5c06\u51fa\u73b0\u4e00\u4e2a\u7f29\u653e\u6548\u679c\u3002\u540c\u65f6\uff0c\u56e0\u4e3a \\(w\\) \u7684\u503c\u901a\u5e38\u4e0e \\(z\\) \u5750\u6807\u6210\u6b63\u6bd4\uff08\u6bd4\u5982\u7ecf\u8fc7\u4e0a\u9762\u8fd9\u4e2a\u77e9\u9635\u7684\u53d8\u6362\uff0c\\(w\\) \u7684\u503c\u5176\u5b9e\u5c31\u662f \\(z\\) \u5750\u6807\u7684\u503c\uff09\uff0c\u6240\u4ee5\u7ecf\u8fc7\u6295\u5f71\u53d8\u6362\uff0c\u7269\u4f53\u4f1a\u4ea7\u751f\u8fd1\u5927\u8fdc\u5c0f\u7684\u6548\u679c\u3002</p>"}, {"location": "theory/CG/rendering/basic/#z-buffer-w-buffer_1", "title": "Z-Buffer \u4e0e W-Buffer \u7684\u533a\u522b", "text": "<p>\u7b80\u5355\u7684\u8bf4\uff0cz-buffer \u4e0e w-buffer \u7684\u533a\u522b\u5c31\u662f\u524d\u8005\u4fdd\u5b58\u7684\u662f\u70b9\u7684 \\(z\\) \u5750\u6807\uff0c\u800c\u540e\u8005\u4fdd\u5b58\u7684\u662f\u70b9\u7684 \\(w\\) \u5750\u6807\u3002\u5177\u4f53\u7684\u8bf4\uff0c\u4e24\u8005\u56e0\u4e3a\u4fdd\u5b58\u7684\u503c\u6709\u4e0d\u540c\u7684\u542b\u4e49\uff0c\u6240\u4ee5\u8868\u73b0\u51fa\u6765\u7684\u5b9e\u9645\u6548\u679c\u4e5f\u4f1a\u6709\u5dee\u522b\u3002</p> <p>z-buffer \u4fdd\u5b58\u7684\u662f\u7ecf\u8fc7\u6295\u5f71\u53d8\u6362\u540e\u7684 \\(z\\) \u5750\u6807\uff0c\u524d\u9762\u8bf4\u8fc7\uff0c\u6295\u5f71\u540e\u7269\u4f53\u4f1a\u4ea7\u751f\u8fd1\u5927\u8fdc\u5c0f\u7684\u6548\u679c\uff0c\u6240\u4ee5\u8ddd\u79bb\u773c\u775b\u6bd4\u8f83\u8fd1\u7684\u5730\u65b9\uff0c\\(z\\) \u5750\u6807\u7684\u5206\u8fa8\u7387\u6bd4\u8f83\u5927\uff0c\u800c\u8fdc\u5904\u7684\u5206\u8fa8\u7387\u5219\u6bd4\u8f83\u5c0f\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u6295\u5f71\u540e\u7684 \\(z\\) \u5750\u6807\u5728\u5176\u503c\u57df\u4e0a\uff0c\u5bf9\u4e8e\u79bb\u5f00\u773c\u775b\u7684\u7269\u7406\u8ddd\u79bb\u53d8\u5316\u6765\u8bf4\uff0c\u4e0d\u662f\u7ebf\u6027\u53d8\u5316\u7684\uff08\u5373\u975e\u5747\u5300\u5206\u5e03\uff09\uff0c\u8fd9\u6837\u7684\u4e00\u4e2a\u597d\u5904\u662f\u8fd1\u5904\u7684\u7269\u4f53\u5f97\u5230\u4e86\u8f83\u9ad8\u7684\u6df1\u5ea6\u5206\u8fa8\u7387\uff0c\u4f46\u662f\u8fdc\u5904\u7269\u4f53\u7684\u6df1\u5ea6\u5224\u65ad\u53ef\u80fd\u4f1a\u51fa\u9519\u3002</p> <p>w-buffer \u4fdd\u5b58\u7684\u662f\u7ecf\u8fc7\u6295\u5f71\u53d8\u6362\u540e\u7684 \\(w\\) \u5750\u6807\uff0c\u800c \\(w\\) \u5750\u6807\u901a\u5e38\u8ddf\u4e16\u754c\u5750\u6807\u7cfb\u4e2d\u7684 z \u5750\u6807\u6210\u6b63\u6bd4\uff0c\u6240\u4ee5\u53d8\u6362\u5230\u6295\u5f71\u7a7a\u95f4\u4e2d\u4e4b\u540e\uff0c\u5176\u503c\u4f9d\u7136\u662f\u7ebf\u6027\u5206\u5e03\u7684\uff0c\u8fd9\u6837\u65e0\u8bba\u8fdc\u5904\u8fd8\u662f\u8fd1\u5904\u7684\u7269\u4f53\uff0c\u90fd\u6709\u76f8\u540c\u7684\u6df1\u5ea6\u5206\u8fa8\u7387\uff0c\u8fd9\u662f\u5b83\u7684\u4f18\u70b9\uff0c\u5f53\u7136\uff0c\u7f3a\u70b9\u5c31\u662f\u4e0d\u80fd\u7528\u8f83\u9ad8\u7684\u6df1\u5ea6\u5206\u8fa8\u7387\u6765\u8868\u73b0\u8fd1\u5904\u7684\u7269\u4f53\u3002</p> <p>\u4ece\u786c\u4ef6\u5b9e\u73b0\u89d2\u5ea6\u6765\u8bf4\uff0c\u51e0\u4e4e\u6240\u6709\u7684\u786c\u4ef63D\u52a0\u901f\u5361\u90fd\u652f\u6301 z-buffer\uff0c\u800c w-buffer \u7684\u652f\u6301\u6ca1\u6709 z-buffer \u90a3\u4e48\u5e7f\u6cdb\u3002\u53e6\u5916\uff0c\u65e9\u671f\u7684 Direct3D \u7248\u672c\u770b\u8d77\u6765\u4e5f\u4e0d\u652f\u6301 w-buffer\u3002</p>"}, {"location": "theory/CG/rendering/basic/#z-buffer-w-buffer_2", "title": "Z-Buffer \u4e0e W-Buffer \u4e4b\u95f4\u7684\u8f6c\u6362", "text": "<p>\u6839\u636e\u4e0a\u9762\u7684\u77e9\u9635\u53d8\u6362\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u5bfc\u51fa\u5c06 w-buffer \u8f6c\u6362\u6210 z-buffer \u7684\u516c\u5f0f\uff1a</p> \\[ z_{depth}=Q\\cdot\\frac{(w_{depth}-Z_n)}{w_{depth}}=\\frac{Z_f}{Z_f-Z_n}\\cdot\\frac{(w_{depth}-Z_n)}{w_{depth}} \\] <p>\u8fd9\u4e2a\u8f6c\u6362\u516c\u5f0f\u6709\u4ec0\u4e48\u7528\u5904\uff1f\u4e3e\u4e2a\u4f8b\u5b50\uff1a3DS MAX \u4f7f\u7528\u7684\u662f w-buffer\uff0c\u5982\u679c\u4ece 3DS MAX \u4e2d\u5bfc\u51fa\u6df1\u5ea6\u4fe1\u606f\u5230 Direct3D \u4e2d\uff0c\u4f5c\u4e3a\u9884\u6e32\u67d3\u7684\u80cc\u666f\u4f7f\u7528\uff0c\u5c31\u6709\u53ef\u80fd\u7528\u5230\u4e0a\u9762\u8fd9\u4e2a\u8f6c\u6362\u3002\u5f53\u7136\uff0c\u5982\u679c\u5728 D3D \u4e2d\u4f7f\u7528 w-buffer\uff0c\u95ee\u9898\u5c31\u4e0d\u5927\u4e86\uff0c\u4f46\u662f\u5982\u679c\u4f7f\u7528 z-buffer\uff0c\u4e0d\u7ecf\u8fc7\u8fd9\u6837\u7684\u8f6c\u6362\uff0c\u6e32\u67d3\u7ed3\u679c\u5c31\u4f1a\u51fa\u9519\u3002</p>"}, {"location": "theory/CG/rendering/basic/#_13", "title": "\u900f\u89c6\u77eb\u6b63\u63d2\u503c", "text": "<p>\u5982\u4f5c\u4e1a\u4e8c\u4e2d\u6240\u4ecb\u7ecd\u7684\uff0c\u6211\u4eec\u7684\u91cd\u5fc3\u5750\u6807\u5f80\u5f80\u90fd\u662f\u5728\u5c4f\u5e55\u7a7a\u95f4\u4e0b\u6240\u5f97\u5230\u7684\uff0c\u5982\u679c\u76f4\u63a5\u4f7f\u7528\u5c4f\u5e55\u7a7a\u95f4\u4e0b\u7684\u91cd\u5fc3\u5750\u6807\u8fdb\u884c\u63d2\u503c\u4f1a\u9020\u6210\u4e00\u5b9a\u7684\u8bef\u5dee\uff0c\u4e0e\u5728view space\u4e0b\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u90a3\u4e48\u672c\u8282\u5185\u5bb9\u5c31\u4f1a\u5177\u4f53\u4ecb\u7ecd\u5982\u4f55\u77eb\u6b63\u8fd9\u79cd\u8bef\u5dee\uff0c\u5229\u7528\u5c4f\u5e55\u7a7a\u95f4\u4e0b\u7684\u91cd\u5fc3\u5750\u6807\u8fbe\u5230\u6b63\u786e\u7684\u63d2\u503c\u3002</p>"}, {"location": "theory/CG/rendering/basic/#_14", "title": "\u900f\u89c6\u77eb\u6b63\u7684\u63a8\u5bfc", "text": "<p>\u4e3a\u4e86\u8bc1\u660e\u7684\u7b80\u4fbf\u6027\uff0c\u6211\u4eec\u5229\u7528\u6df1\u5ea6\u503c \\(Z\\) \u7684\u7ebf\u6027\u63d2\u503c\u8fdb\u884c\u8bf4\u660e\uff0c\u91cd\u5fc3\u5750\u6807\u63d2\u503c\u53ef\u4ee5\u7c7b\u6bd4\u5f97\u5230\u3002\u8be5\u95ee\u9898\u53ef\u4ee5\u5f88\u7b80\u5355\u5728\u4e0b\u5de6\u56fe\u4e4b\u4e2d\u8868\u73b0\u51fa\u6765\uff0c\u7b80\u5355\u53d9\u8ff0\u4e00\u4e0b\uff0c\u5728\u5c4f\u5e55\u7a7a\u95f4\u8fdb\u884c\u7ebf\u6027\u63d2\u503c\u5f97\u5230\u70b9 \\(c\\) \u7684intensity\u4e3a0.5\uff0c\u7136\u800c\u5bf9\u4e8e\u5728view space\u4e4b\u4e2d\u6b63\u786e\u7684\u63d2\u503c\u7ed3\u679c\uff0c\u53ef\u4ee5\u5f88\u660e\u663e\u770b\u5230 \\(C\\) \u7684intensity\u7edd\u4e0d\u4e3a0.5\u3002\u8fd9\u4e5f\u5c31\u9020\u6210\u4e86\u63d2\u503c\u7684\u8bef\u5dee\uff0c\u5e94\u8be5\u53bb\u77eb\u6b63\uff01</p> \u900f\u89c6\u6295\u5f71\u524d\u540e\u63d2\u503c\u7ed3\u679c\u4e0d\u540c \u7ebf\u6027\u63d2\u503c\u7684\u63a8\u5bfc <p>\u9996\u5148\u5148\u5206\u522b\u5b9a\u4e49\u5c4f\u5e55\u7a7a\u95f4\u7684\u6bd4\u4f8b\u4e3a \\(s\\)\uff0cview space\u4e2d\u4e3a \\(t\\)\uff0c\u5176\u4f59\u7b26\u53f7\u542b\u4e49\u5982\u4e0a\u53f3\u56fe\u6240\u793a\u3002\u4e3a\u4e86\u7b80\u4fbf\u8bc1\u660e\uff0c\u5c06\u70b9\u7684\u5750\u6807\u75282\u7ef4\u8868\u793a\uff0c\u7b2c\u4e00\u7ef4\u4e3a\u56fe\u4e2d\u6240\u793a\u7684 \\(x\\) \u8f74\uff0c\u7b2c\u4e8c\u7ef4\u4e3a \\(z\\) \u8f74\u3002 \u7b80\u800c\u8a00\u4e4b\uff0c\u6211\u4eec\u7684\u76ee\u6807\u5c31\u662f\u5f97\u51fa \\(t\\) \u4e0e \\(s\\) \u7684\u5173\u7cfb\u5f0f\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u6b63\u786e\u7684\u5229\u7528\u5c4f\u5e55\u7a7a\u95f4\u7684\u7cfb\u6570 \\(s\\) \u63d2\u503c\u5230\u6b63\u786e\u7684view space\u7684\u7ed3\u679c\uff0c\u63a8\u5bfc\u8fc7\u7a0b\u5982\u4e0b\u3002</p> <ol> <li>\u7531\u4e0a\u56fe\u6240\u793a\u7684\u6295\u5f71\u6240\u9020\u6210\u7684\u4e09\u89d2\u5f62\u76f8\u4f3c\u6027\u53ef\u4ee5\u8f7b\u6613\u5f97\u51fa\u5982\u4e0b\u51e0\u4e2a\u5f0f\u5b50\uff1a</li> </ol> \\[ \\frac{X_1}{Z_1}=\\frac{u_1}{d}\\quad\\Longrightarrow\\quad X_1=\\frac{u_1}{d}Z    _1 \\\\    \\frac{X_2}{Z_2}=\\frac{u_2}{d}\\quad\\Longrightarrow\\quad X_2=\\frac{u_2}{d}Z    _2 \\\\    \\frac{X_t}{Z_t}=\\frac{u_s}{d}\\quad\\Longrightarrow\\quad Z_t=\\frac{d}{u_s}X_t    \\] <ol> <li>\u5206\u522b\u5229\u7528 screen space \u4ee5\u53ca view space\u7684\u7ebf\u6027\u63d2\u503c\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u51e0\u4e2a\u5f0f\u5b50\uff1a</li> </ol> \\[ u_s=u_1+s\\cdot(u_2-u_1)\\\\    X_t=X_1+t\\cdot(X_2-X_1)\\\\    Z_t=Z_1+t\\cdot(Z_2-Z_1)    \\] <ol> <li>\u8054\u7acb\u4e0a\u5f0f\uff0c\u53ef\u4ee5\u63a8\u51fa \\(t\\) \u4e0e \\(s\\) \u7684\u5173\u7cfb\u5f0f\uff1a</li> </ol> \\[ Z_t=\\frac{d}{u_s}X_t=\\frac{d}{u_1+s\\cdot(u_2-u_1)}(X_1+t\\cdot(X_2-X_1))\\\\    =\\frac{d}{u_1+s\\cdot(u_2-u_1)}(\\frac{u_1}{d}Z    _1+t\\cdot(\\frac{u_2}{d}Z    _2-\\frac{u_1}{d}Z    _1))\\\\    \\Longrightarrow Z_1+t\\cdot(Z_2-Z_1)=\\frac{u_1Z_1+t\\cdot(u_2Z_2-u_1Z_1)}{u_1+s\\cdot(u_2-u_1)}\\\\    \\Longrightarrow t=\\frac{sZ_1}{sZ_1+(1-s)Z_2}    \\] <ol> <li>\u5c06 \\(t\\) \u4e0e \\(s\\) \u7684\u5173\u7cfb\u5f0f\u4ee3\u5165\u5230 \\(Z_t\\) \u7684\u7ebf\u6027\u63d2\u503c\u5f0f\u5b50\u4e2d\uff0c\u53ef\u4ee5\u5f97\u5230\u4e0b\u5f0f\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u6df1\u5ea6\u503c\u7684\u5012\u6570\u662f\u7ebf\u6027\u53d8\u6362\u7684\u3002</li> </ol> \\[ Z_t=Z_1+t\\cdot(Z_2-Z_1)=Z_1+\\frac{sZ_1}{sZ_1+(1-s)Z_2}(Z_2-Z_1) \\\\    \\Longrightarrow \\frac{1}{Z_t}=\\frac{1-s}{Z_1}+\\frac{s}{Z_2}=\\frac{1}{Z_1}+s(\\frac{1}{Z_2}-\\frac{1}{Z_1})    \\] <ol> <li>\u81f3\u6b64\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u5229\u7528\u5c4f\u5e55\u7a7a\u95f4\u4e0b\u7684\u7cfb\u6570\u8fdb\u884c\u6b63\u786e\u5730\u7ebf\u6027\u63d2\u503c\u7684\u516c\u5f0f\u3002\u5bf9\u4e8e\u91cd\u5fc3\u5750\u6807\u63d2\u503c\u6765\u8bf4\uff0c\u6211\u4eec\u53ef\u4ee5\u7c7b\u4f3c\u5730\u63a8\u51fa\uff1a</li> </ol> \\[ \\frac{1}{Z_t}=\\frac{\\alpha}{Z_A}+\\frac{\\beta}{Z_B}+\\frac{\\gamma}{Z_C} \\quad\\Longleftrightarrow\\quad Z_t=\\frac{1}{\\frac{\\alpha}{Z_A}+\\frac{\\beta}{Z_B}+\\frac{\\gamma}{Z_C}}    \\] <ol> <li>\u8fdb\u4e00\u6b65\u5730\uff0c\u5bf9\u4e8e\u6df1\u5ea6\u503c\u4e4b\u5916\u7684\u4efb\u610f\u5c5e\u6027 \\(I\\)\uff08\u6cd5\u7ebf\u5411\u91cf\u3001\u7eb9\u7406\u5750\u6807\u7b49\uff09\u7684\u63d2\u503c\uff0c\u6211\u4eec\u540c\u6837\u5148\u4ee5\u7ebf\u6027\u63d2\u503c\u4e3a\u4f8b\uff0c\u8fdb\u884c\u63a8\u5bfc\uff1a</li> </ol> \\[ I_t=I_1+t\\cdot(I_2-I_1)=I_1+\\frac{sZ_1}{sZ_1+(1-s)Z_2}(I_2-I_1)\\\\    \\Longrightarrow\\quad \\frac{I_t}{Z_t}=(1-s)\\frac{I_1}{Z_1}+s\\frac{I_2}{Z_2}    \\] <p>\u4e0a\u5f0f\u7684\u5316\u7b80\uff1a\u5148\u901a\u5206\uff0c\u7136\u540e\u5206\u5f0f\u4e0a\u4e0b\u540c\u65f6\u9664\u4ee5 \\(Z_1Z_2\\) \u5373\u53ef\u3002</p> <ol> <li>\u7531\u4e0a\u5f0f\u6211\u4eec\u53ef\u4ee5\u5f97\u51fa\uff0c \u5728\u6295\u5f71\u53d8\u6362\u524d\u540e\uff0c\u4efb\u610f\u7684\u5c5e\u6027 \\(I\\) \u4e0e\u6df1\u5ea6\u503c\u7684\u6bd4\u503c \\(\\frac{I}{Z}\\) \u662f\u7ebf\u6027\u53d8\u5316\u7684 \uff0c\u7c7b\u4f3c\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4efb\u610f\u5c5e\u6027\u7684\u91cd\u5fc3\u5750\u6807\u63d2\u503c\u516c\u5f0f\uff1a</li> </ol> \\[ \\frac{I_t}{Z_t}=\\alpha\\frac{I_A}{Z_A}+\\beta\\frac{I_B}{Z_B}+\\gamma\\frac{I_C}{Z_C} \\quad\\Longrightarrow\\quad I_t=\\frac{1}{\\frac{\\alpha}{Z_A}+\\frac{\\beta}{Z_B}+\\frac{\\gamma}{Z_C}}\\cdot(\\alpha\\frac{I_A}{Z_A}+\\beta\\frac{I_B}{Z_B}+\\gamma\\frac{I_C}{Z_C})    \\]"}, {"location": "theory/CG/rendering/basic/#_15", "title": "\u4ee3\u7801\u5b9e\u6218", "text": "<pre><code>// * v[i].w() is the vertex view space depth value z.\n// * w_reciprocal is interpolated view space depth for the current pixel\n// * z_interpolated is depth between zNear and zFar, used for z-buffer\nauto [alpha, beta, gamma] = computeBarycentric2D(x, y, t.v);\nfloat w_reciprocal = 1.0 / (alpha / v[0].w() + beta / v[1].w() + gamma / v[2].w());\nfloat z_interpolated = alpha * v[0].z() / v[0].w() + beta * v[1].z() / v[1].w() + gamma * v[2].z() / v[2].w();\nz_interpolated *= w_reciprocal;\n\n// TODO: Interpolate the attributes:\nauto interpolated_color = interpolate(alpha, beta, gamma, t.color[0], t.color[1], t.color[2], 1 / w_reciprocal);\nauto interpolated_normal = interpolate(alpha, beta, gamma, t.normal[0], t.normal[1], t.normal[2], 1 / w_reciprocal);\nauto interpolated_texcoords = interpolate(alpha, beta, gamma, t.tex_coords[0], t.tex_coords[1], t.tex_coords[2], 1 / w_reciprocal);\nauto interpolated_shadingcoords = interpolate(alpha, beta, gamma, view_pos[0], view_pos[1], view_pos[2], 1 / w_reciprocal);\n\nstatic Eigen::Vector3f interpolate(float alpha, float beta, float gamma, const Eigen::Vector3f&amp; vert1, const Eigen::Vector3f&amp; vert2, const Eigen::Vector3f&amp; vert3, float weight)\n{\n    return (alpha * vert1 + beta * vert2 + gamma * vert3) / weight;\n}\n\nstatic Eigen::Vector2f interpolate(float alpha, float beta, float gamma, const Eigen::Vector2f&amp; vert1, const Eigen::Vector2f&amp; vert2, const Eigen::Vector2f&amp; vert3, float weight)\n{\n    auto u = (alpha * vert1[0] + beta * vert2[0] + gamma * vert3[0]);\n    auto v = (alpha * vert1[1] + beta * vert2[1] + gamma * vert3[1]);\n\n    u /= weight;\n    v /= weight;\n\n    return Eigen::Vector2f(u, v);\n}\n</code></pre>"}, {"location": "theory/CG/rendering/basic/#_16", "title": "\u5c40\u90e8\u5149\u7167\u6a21\u578b", "text": "<p>\u5c40\u90e8\u5149\u7167\u6a21\u578b\u5176\u5b9e\u662f\u6750\u8d28\u6a21\u578b\u7684\u4e00\u7c7b\u3002\u6750\u8d28\u6a21\u578b\u662f\u7528\u6765\u63cf\u8ff0\u7269\u4f53\u8868\u9762\u6027\u8d28\u7684\u6a21\u578b\uff0c\u5305\u62ec\u6750\u6599\u7684\u989c\u8272\u3001\u7eb9\u7406\u3001\u53cd\u5149\u5ea6\u3001\u5149\u6cfd\u5ea6\u3001\u900f\u660e\u5ea6\u7b49\u3002\u4e0d\u540c\u7684\u6750\u8d28\u4f1a\u5bf9\u5165\u5c04\u5149\u7ebf\u4ea7\u751f\u4e0d\u540c\u7684\u53cd\u5e94\uff0c\u4ece\u800c\u5f71\u54cd\u5230\u7269\u4f53\u8868\u9762\u7684\u5149\u7167\u6548\u679c\u3002\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\u5e38\u7528\u7684\u6750\u8d28\u6a21\u578b\u6709\u7ecf\u5178\u7684Lambert\u6a21\u578b\u3001Phong\u6a21\u578b\u3001Blinn-Phong\u6a21\u578b\u7b49\u3002</p>"}, {"location": "theory/CG/rendering/basic/#_17", "title": "\u6cdb\u5149\u6a21\u578b", "text": "<p>\u6cdb\u5149\u6a21\u578b\uff0c\u662f\u6700\u7b80\u5355\u7684\u7ecf\u9a8c\u6a21\u578b\uff0c \u53ea\u8003\u8651\u73af\u5883\u5149\u7684\u5f71\u54cd \uff0c\u4e14\u4e0d\u4f1a\u53bb\u7cbe\u786e\u5730\u63cf\u8ff0\u73af\u5883\u5149\u7684\u5f71\u54cd\uff08\u533a\u522b\u4e8ePBR\u6a21\u578b\uff09\u3002\u6cdb\u5149\u6a21\u578b\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u5982\u4e0b\u3002</p> \\[ L_a=k_aI_a \\] <p>\u5176\u4e2d\uff0c\\(k_a\\) \u4ee3\u8868\u7269\u4f53\u8868\u9762\u5bf9\u73af\u5883\u5149\u7684\u53cd\u5c04\u7387\uff0c\\(I_a\\) \u4ee3\u8868\u5165\u5c04\u73af\u5883\u5149\u7684\u4eae\u5ea6\uff0c\\(L_a\\) \u5b58\u50a8\u7ed3\u679c\uff0c\u5373\u4eba\u773c\u6240\u80fd\u770b\u5230\u4ece\u7269\u4f53\u8868\u9762\u53cd\u5c04\u7684\u73af\u5883\u5149\u7684\u4eae\u5ea6\u3002</p>"}, {"location": "theory/CG/rendering/basic/#lambert", "title": "Lambert \u6a21\u578b", "text": "<p>Lambert\u6a21\u578b\u662f\u4e00\u79cd\u7ecf\u5178\u7684\u6f2b\u53cd\u5c04\u6a21\u578b\uff0c\u5b83\u662f\u6700\u7b80\u5355\u548c\u6700\u5e38\u7528\u7684\u4e00\u4e2a\u6f2b\u53cd\u5c04\u6a21\u578b\u4e4b\u4e00\u3002Lambert \u6a21\u578b\u5728\u6cdb\u5149\u6a21\u578b\u7684\u57fa\u7840\u4e4b\u4e0a\u589e\u52a0\u4e86 \u6f2b\u53cd\u5c04\u9879 \u3002\u6f2b\u53cd\u5c04\u73b0\u8c61\u6307\u5149\u7ebf\u9047\u5230\u7c97\u7cd9\u8868\u9762\u65f6\uff0c\u88ab\u53cd\u5c04\u5230\u4e0d\u540c\u65b9\u5411\u800c\u5f62\u6210\u7684\u73b0\u8c61\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5f53\u5149\u7ebf\u7167\u5c04\u5230\u4e00\u4e2a\u7c97\u7cd9\u8868\u9762\u65f6\uff0c\u5149\u7ebf\u4f1a\u88ab\u6298\u5c04\uff0c\u53cd\u5c04\u548c\u6563\u5c04\u5230\u5404\u4e2a\u65b9\u5411\uff0c\u5f62\u6210\u4e00\u4e2a\u5f25\u6563\u7684\u5149\u8c31\uff0c\u8fd9\u79cd\u53cd\u5c04\u5c31\u88ab\u79f0\u4e3a\u6f2b\u53cd\u5c04\u3002\u6f2b\u53cd\u5c04\u5149\u7ebf\u5728\u773c\u4e2d\u770b\u8d77\u6765\u662f\u5747\u5300\u7684\u5149\u4eae\uff0c\u4ece\u800c\u4f7f\u7269\u4f53\u8868\u9762\u7684\u7ec6\u8282\u548c\u5f62\u72b6\u66f4\u52a0\u6e05\u6670\u53ef\u89c1\u3002</p> \u6f2b\u53cd\u5c04\u73b0\u8c61\u793a\u610f\u56fe <p>Lambert \u6a21\u578b\u5047\u8bbe\u5149\u5728\u649e\u51fb\u7269\u4f53\u8868\u9762\u65f6\u4f1a\u5f62\u6210\u4e00\u4e2a \u5747\u5300\u7684\u4eae\u5ea6 \uff0c\u5176\u4eae\u5ea6 \u4e0e\u5149\u6e90\u548c\u7269\u4f53\u8868\u9762\u4e4b\u95f4\u7684\u89d2\u5ea6\u6210\u6b63\u6bd4 \u3002\u8fd9\u4e2a\u89d2\u5ea6\u662f\u5165\u5c04\u5149\u7ebf\u7684\u53cd\u5411\u548c\u8868\u9762\u6cd5\u5411\u91cf\u4e4b\u95f4\u7684\u5939\u89d2\u3002</p> <p>\u6570\u5b66\u8868\u8fbe\u5f0f\u53ef\u4ee5\u8868\u793a\u4e3a\uff1a</p> \\[ L_d =   k_d \\cdot \\frac{I}{r^2} \\cdot \\max(0,\\cos\\theta) = k_d \\cdot \\frac{I}{r^2} \\cdot \\max(0,\\mathbf{n}\\cdot\\mathbf{l}) \\] <p>\u5176\u4e2d\uff0c\\(L_d\\) \u662f\u8868\u9762\u7684\u8f90\u5c04\u4eae\u5ea6\uff0c\\(I\\) \u662f\u5149\u6e90\u7684\u8f90\u5c04\u5f3a\u5ea6\uff0c\\(k_d\\) \u662f\u8868\u9762\u7684\u53cd\u5c04\u5e38\u6570\uff0c\\(\\cos\\theta\\) \u662f\u5165\u5c04\u5149\u7ebf\u4e0e\u6cd5\u5411\u91cf\u7684\u5939\u89d2\u3002</p> <p>Lambert \u6a21\u578b\u8003\u8651\u4e86\u5149\u7167\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u7684\u4e24\u79cd\u635f\u5931\uff1a</p> <ul> <li>\u5165\u5c04\u89d2\u5ea6\u3002\u5982\u4e0b\u5de6\u56fe\u6240\u793a\uff0c\u53ea\u6709\u5f53\u5165\u5c04\u5149\u7ebf\u4e0e\u5e73\u9762\u5782\u76f4\u7684\u65f6\u5019\u624d\u80fd\u5b8c\u6574\u7684\u63a5\u53d7\u6240\u6709\u5149\u7684\u80fd\u91cf\uff0c\u800c\u5165\u5c04\u89d2\u5ea6\u8d8a\u503e\u659c\u635f\u5931\u7684\u80fd\u91cf\u8d8a\u5927\u3002\u8fd9\u5bf9\u5e94\u4e86\u4e0a\u5f0f\u4e2d\u7684 \\(\\cos\\theta\\) \u9879\u3002</li> <li>\u4f20\u8f93\u8ddd\u79bb\u3002\u5982\u4e0b\u53f3\u56fe\u6240\u793a\uff0c\u56fe\u4e2d\u4e2d\u5fc3\u4e3a\u4e00\u4e2a\u70b9\u5149\u6e90\uff0c\u5149\u7ebf\u5747\u5300\u7684\u5411\u5468\u56f4\u53d1\u5c04\uff0c\u53ef\u4ee5\u60f3\u8c61\u5149\u6e90\u53d1\u5c04\u51fa\u6765\u7684\u80fd\u91cf\u5176\u5b9e\u662f\u4e00\u5b9a\u7684\uff0c\u90a3\u4e48\u5728\u4efb\u610f\u4e24\u4e2a\u5708\u4e0a\u63a5\u53d7\u5230\u7684\u80fd\u91cf\u4e4b\u548c\u76f8\u7b49\u3002\u56e0\u6b64\uff0c\u5149\u7167\u968f\u8ddd\u79bb\u5448\u5e73\u65b9\u8870\u51cf\uff0c\u8fd9\u5bf9\u5e94\u4e86\u4e0a\u5f0f\u4e2d\u7684 \\(\\frac{I}{r^2}\\) \u9879\u3002</li> </ul> \u5165\u5c04\u89d2\u5ea6\u9020\u6210\u7684\u8868\u9762\u63a5\u6536\u5230\u80fd\u91cf\u635f\u5931 \u5149\u6e90\u4e0e\u7167\u5c04\u70b9\u7684\u8ddd\u79bb\u9020\u6210\u7684\u80fd\u91cf\u635f\u5931 <p>\u8be5\u6a21\u578b\u5047\u8bbe\u7269\u4f53\u8868\u9762\u662f\u5b8c\u5168\u54d1\u9762\uff0c\u5e76\u5ffd\u7565\u4e86\u8868\u9762\u6750\u6599\u7684\u53cd\u5c04\u7279\u6027\u3002\u867d\u7136\u8fd9\u4e2a\u6a21\u578b\u975e\u5e38\u7b80\u5355\uff0c\u4f46\u5b83\u5728\u8bb8\u591a\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u548c\u6e32\u67d3\u6280\u672f\u4e2d\u4f7f\u7528\u5e7f\u6cdb\uff0c\u56e0\u4e3a\u5b83\u53ef\u4ee5\u65b9\u4fbf\u5730\u8ba1\u7b97\uff0c\u800c\u4e14\u6548\u679c\u4e5f\u8fd8\u4e0d\u9519\u3002</p>"}, {"location": "theory/CG/rendering/basic/#phong", "title": "Phong \u6a21\u578b", "text": "<p>Phong \u6a21\u578b\u5728 Lambert \u6f2b\u53cd\u5c04\u6a21\u578b\u7684\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0\u4e86\u9ad8\u5149\uff08specular\uff09\u9879\uff0c\u53ef\u4ee5\u8868\u73b0\u826f\u597d\u7684\u7c7b\u955c\u9762\u53cd\u5c04\u73b0\u8c61\u3002\u5176\u6570\u5b66\u8868\u793a\u5f0f\u5982\u4e0b\uff1a</p> \\[ L_s=k_s\\cdot\\frac{I}{r^2}\\cdot\\max(0,\\cos\\alpha)^p=k_s\\cdot\\frac{I}{r^2}\\cdot\\max(0,\\mathbf{R}\\cdot\\mathbf{v})^p \\] <p>\u5176\u4e2d \\(k_s\\) \u4e3a\u955c\u9762\u53cd\u5c04\u7cfb\u6570\uff0c\\(I\\) \u4e3a\u5165\u5c04\u5149\u5f3a\uff0c\\(r^2\\) \u4e3a\u5149\u6e90\u5230\u5165\u5c04\u70b9\u8ddd\u79bb\uff0c\\(\\alpha\\) \u4e3a\u53cd\u5c04\u5411\u91cf \\(\\mathbf{R}\\) \u4e0e\u89c2\u5bdf\u5411\u91cf \\(\\mathbf{v}\\) \u7684\u5939\u89d2\uff0c\u6ce8\u610f\u8fd9\u91cc\u5728 \\(\\max(\\cdot)\\) \u5254\u9664\u5927\u4e8e90\u00b0\u7684\u5149\u4e4b\u540e\uff0cPhong\u6a21\u578b\u8fd8\u6dfb\u52a0\u4e86\u6307\u6570 \\(p\\) \uff0c\u4ee5\u63a7\u5236\u9ad8\u5149\u7684\u8870\u51cf\u901f\u5ea6\uff0c\u5982\u4e0b\u53f3\u56fe\u6240\u793a\u3002</p> Phong \u6a21\u578b\u793a\u610f\u56fe \u901a\u8fc7\u6307\u6570\u9879\u63a7\u5236\u8870\u51cf\u901f\u5ea6 <p>\u4e0b\u9762\u63a8\u5bfc\u4e00\u4e0bPhong \u6a21\u578b\u4e2d\u7528\u5230\u7684\u53cd\u5c04\u5411\u91cf \\(\\mathbf{R}\\) \u7684\u8ba1\u7b97\u5f0f\u3002\u5982\u4e0a\u5de6\u56fe\u6240\u793a\uff0c\u6cd5\u5411\u91cf \\(\\mathbf{n}\\) \u3001\u5165\u5c04\u5411\u91cf \\(\\mathbf{l}\\) \u3001\u53cd\u5c04\u5411\u91cf \\(\\mathbf{R}\\) \u4e0e \u89c2\u5bdf\u5411\u91cf \\(\\mathbf{v}\\) \u5747\u4e3a\u5355\u4f4d\u5411\u91cf\u3002\u6839\u636e\u7b49\u8170\u4e09\u89d2\u5f62\u7684\u6027\u8d28\u7b49\u51e0\u4f55\u539f\u7406\uff0c\u6709\uff1a</p> \\[ \\mathbf{R}=\\vec{OA}-\\mathbf{l}=2\\cdot\\operatorname{Proj}_\\mathbf{n}\\mathbf{l}-\\mathbf{l}=2\\cdot\\frac{\\mathbf{l}\\cdot\\mathbf{n}}{||\\mathbf{n}||^2}\\cdot\\mathbf{n}-\\mathbf{l}\\\\ \\Longrightarrow\\quad \\mathbf{R}=2(\\mathbf{l}\\cdot\\mathbf{n})\\mathbf{n}-\\mathbf{l} \\]"}, {"location": "theory/CG/rendering/basic/#blinn-phong", "title": "Blinn-Phong \u6a21\u578b", "text": "<p>Phong \u6a21\u578b\u4e0d\u4ec5\u5bf9\u771f\u5b9e\u5149\u7167\u6709\u5f88\u597d\u7684\u8fd1\u4f3c\uff0c\u800c\u4e14\u6027\u80fd\u4e5f\u5f88\u9ad8\u3002\u4f46\u662f\u5b83\u7684\u955c\u9762\u53cd\u5c04\u4f1a\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b\u51fa\u73b0\u95ee\u9898\uff0c\u7279\u522b\u662f\u7269\u4f53\u53cd\u5149\u5ea6\u5f88\u4f4e\u65f6\uff0c\u4f1a\u5bfc\u81f4\u5927\u7247\uff08\u7c97\u7cd9\u7684\uff09\u9ad8\u5149\u533a\u57df\u3002\u5982\u4e0b\u5de6\u56fe\u6240\u793a\uff0cPhong \u6a21\u578b\u7684\u6e32\u67d3\u7ed3\u679c\u5728\u955c\u9762\u9ad8\u5149\u533a\u57df\u7684\u8fb9\u7f18\u51fa\u73b0\u4e86\u4e00\u9053\u5f88\u660e\u663e\u7684\u65ad\u5c42\u3002\u51fa\u73b0\u8fd9\u4e2a\u95ee\u9898\u7684\u539f\u56e0\u662f\u89c2\u5bdf\u5411\u91cf\u548c\u53cd\u5c04\u5411\u91cf\u95f4\u7684\u5939\u89d2\u5927\u4e8e90\u00b0\u65f6\uff0c\u70b9\u79ef\u7684\u7ed3\u679c\u4e3a\u8d1f\u6570\uff0c\u955c\u9762\u5149\u5206\u91cf\u4f1a\u53d8\u4e3a0\uff0c\u4e5f\u5c31\u662f\u4e0b\u53f3\u56fe\u4e2d\u7684\u60c5\u51b5\u3002</p> \u955c\u9762\u9ad8\u5149\u533a\u57df\u7684\u8fb9\u7f18\u51fa\u73b0\u65ad\u5c42 \u89c2\u5bdf\u5411\u91cf\u548c\u53cd\u5c04\u5411\u91cf\u95f4\u7684\u5939\u89d2\u5927\u4e8e90\u5ea6 <p>\u8fd9\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u4e0d\u662f\u4ec0\u4e48\u95ee\u9898\uff0c\u56e0\u4e3a\u89c2\u5bdf\u65b9\u5411\u79bb\u53cd\u5c04\u65b9\u5411\u90fd\u975e\u5e38\u8fdc\u3002\u7136\u800c\uff0c\u5f53\u7269\u4f53\u7684\u53cd\u5149\u5ea6\u975e\u5e38\u5c0f\u65f6\uff0c\u5b83\u4ea7\u751f\u7684\u955c\u9762\u9ad8\u5149\u534a\u5f84\u8db3\u4ee5\u8ba9\u8fd9\u4e9b\u76f8\u53cd\u65b9\u5411\u7684\u5149\u7ebf\u5bf9\u4eae\u5ea6\u4ea7\u751f\u8db3\u591f\u5927\u7684\u5f71\u54cd\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5c31\u4e0d\u80fd\u5ffd\u7565\u5b83\u4eec\u5bf9\u955c\u9762\u5149\u5206\u91cf\u7684\u8d21\u732e\u4e86\u3002</p> <p>1977\u5e74\uff0cJames F. Blinn\u5728\u51af\u6c0f\u7740\u8272\u6a21\u578b\u4e0a\u52a0\u4ee5\u62d3\u5c55\uff0c\u5f15\u5165\u4e86Blinn-Phong\u7740\u8272\u6a21\u578b\u3002Blinn-Phong\u6a21\u578b\u4e0e\u51af\u6c0f\u6a21\u578b\u975e\u5e38\u76f8\u4f3c\uff0c\u4f46\u662f\u5b83\u5bf9\u955c\u9762\u5149\u6a21\u578b\u7684\u5904\u7406\u4e0a\u6709\u4e00\u4e9b\u4e0d\u540c\uff0c\u8ba9\u6211\u4eec\u80fd\u591f\u89e3\u51b3\u4e4b\u524d\u63d0\u5230\u7684\u95ee\u9898\u3002Blinn-Phong\u6a21\u578b\u4e0d\u518d\u4f9d\u8d56\u4e8e\u53cd\u5c04\u5411\u91cf\uff0c\u800c\u662f\u91c7\u7528\u4e86\u6240\u8c13\u7684 \u534a\u7a0b\u5411\u91cf(Halfway Vector) \uff0c\u5373\u5149\u7ebf\u4e0e\u89c6\u7ebf\u5939\u89d2\u4e00\u534a\u65b9\u5411\u4e0a\u7684\u4e00\u4e2a\u5355\u4f4d\u5411\u91cf\u3002\u5f53\u534a\u7a0b\u5411\u91cf\u4e0e\u6cd5\u7ebf\u5411\u91cf\u8d8a\u63a5\u8fd1\u65f6\uff0c\u955c\u9762\u5149\u5206\u91cf\u5c31\u8d8a\u5927\u3002</p> \u65ad\u5c42\u73b0\u8c61\u5f97\u5230\u6539\u5584 \u4f7f\u7528\u534a\u7a0b\u5411\u91cf\u4e0e\u6cd5\u5411\u91cf\u5939\u89d2 <p>\u5f53\u89c6\u7ebf\u6b63\u597d\u4e0e\uff08\u73b0\u5728\u4e0d\u9700\u8981\u7684\uff09\u53cd\u5c04\u5411\u91cf\u5bf9\u9f50\u65f6\uff0c\u534a\u7a0b\u5411\u91cf\u5c31\u4f1a\u4e0e\u6cd5\u7ebf\u5b8c\u7f8e\u5951\u5408\u3002\u6240\u4ee5\u5f53\u89c2\u5bdf\u8005\u89c6\u7ebf\u8d8a\u63a5\u8fd1\u4e8e\u539f\u672c\u53cd\u5c04\u5149\u7ebf\u7684\u65b9\u5411\u65f6\uff0c\u955c\u9762\u9ad8\u5149\u5c31\u4f1a\u8d8a\u5f3a\u3002\u73b0\u5728\uff0c\u4e0d\u8bba\u89c2\u5bdf\u8005\u5411\u54ea\u4e2a\u65b9\u5411\u770b\uff0c\u534a\u7a0b\u5411\u91cf\u4e0e\u8868\u9762\u6cd5\u7ebf\u4e4b\u95f4\u7684\u5939\u89d2\u90fd\u4e0d\u4f1a\u8d85\u8fc790\u5ea6\uff08\u9664\u975e\u5149\u6e90\u5728\u8868\u9762\u4ee5\u4e0b\uff09\u3002\u5b83\u4ea7\u751f\u7684\u6548\u679c\u4f1a\u4e0e Phong \u6a21\u578b\u6709\u4e9b\u8bb8\u4e0d\u540c\uff0c\u4f46\u662f\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u770b\u8d77\u6765\u4f1a\u66f4\u81ea\u7136\u4e00\u70b9\uff0c\u7279\u522b\u662f\u4f4e\u9ad8\u5149\u7684\u533a\u57df\u3002Blinn-Phong \u7740\u8272\u6a21\u578b\u6b63\u662f\u65e9\u671f\u56fa\u5b9a\u6e32\u67d3\u7ba1\u7ebf\u65f6\u4ee3\u65f6OpenGL\u6240\u91c7\u7528\u7684\u5149\u7167\u6a21\u578b\uff0c\u5176\u6570\u5b66\u8868\u8fbe\u5f0f\u5982\u4e0b\u3002</p> \\[ L_s=k_s\\cdot\\frac{I}{r^2}\\cdot\\max(0,\\mathbf{n}\\cdot\\mathbf{h})^p,\\quad \\mathbf{h}=\\frac{\\mathbf{v}+\\mathbf{l}}{||\\mathbf{v}+\\mathbf{l}||} \\] <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u534a\u7a0b\u5411\u91cf\u4e0e\u8868\u9762\u6cd5\u7ebf\u7684\u5939\u89d2\u901a\u5e38\u4f1a\u5c0f\u4e8e\u89c2\u5bdf\u4e0e\u53cd\u5c04\u5411\u91cf\u7684\u5939\u89d2\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u60f3\u83b7\u5f97\u548c\u51af\u6c0f\u7740\u8272\u7c7b\u4f3c\u7684\u6548\u679c\uff0c\u5c31\u5fc5\u987b\u5728\u4f7f\u7528 Blinn-Phong \u6a21\u578b\u65f6\u5c06\u955c\u9762\u53cd\u5149\u5ea6\u8bbe\u7f6e\u66f4\u9ad8\u4e00\u70b9\u3002\u901a\u5e38\u6211\u4eec\u4f1a\u9009\u62e9\u51af\u6c0f\u7740\u8272\u65f6\u53cd\u5149\u5ea6\u5206\u91cf\u76842\u52304\u500d\u3002\u53e6\u5916\uff0cBlinn-Phong \u6a21\u578b\u7684\u8ba1\u7b97\u590d\u6742\u5ea6\u4e5f\u4f4e\u4e8e Phong \u6a21\u578b\u3002</p>"}, {"location": "theory/CG/rendering/basic/#_18", "title": "\u5c40\u90e8\u5149\u7167\u6a21\u578b\u603b\u7ed3", "text": "<ul> <li>\u6cdb\u5149\u6a21\u578b </li> </ul> \\[ L_a=k_aI_a \\] <ul> <li>Lambert \u6a21\u578b </li> </ul> \\[ L_r=k_aI_a+k_d\\cdot\\frac{I}{r^2}\\cdot\\max(0,\\mathbf{n}\\cdot\\mathbf{l}) \\] <ul> <li>Phong \u6a21\u578b </li> </ul> \\[ L_r=k_aI_a+k_d\\cdot\\frac{I}{r^2}\\cdot\\max(0,\\mathbf{n}\\cdot\\mathbf{l})+k_s\\cdot\\frac{I}{r^2}\\cdot\\max(0,\\mathbf{R}\\cdot\\mathbf{v})^p,\\quad \\mathbf{R}=2(\\mathbf{l}\\cdot\\mathbf{n})\\mathbf{n}-\\mathbf{l}   \\] <ul> <li>Blinn-Phong \u6a21\u578b </li> </ul> \\[ L_r=k_aI_a+k_d\\cdot\\frac{I}{r^2}\\cdot\\max(0,\\mathbf{n}\\cdot\\mathbf{l})+k_s\\cdot\\frac{I}{r^2}\\cdot\\max(0,\\mathbf{n}\\cdot\\mathbf{h})^p,\\quad \\mathbf{h}=\\frac{\\mathbf{v}+\\mathbf{l}}{||\\mathbf{v}+\\mathbf{l}||}   \\]"}, {"location": "theory/CG/rendering/basic/#_19", "title": "\u7740\u8272\u65b9\u6cd5", "text": "<p>\u5728\u524d\u6587\u4e2d\uff0c\u5df2\u7ecf\u4ecb\u7ecd\u4e86\u5c40\u90e8\u5149\u7167\u6a21\u578b\u7684\u57fa\u672c\u539f\u7406\uff0c\u5176\u4e2d\u5229\u7528\u4e86\u5165\u5c04\u5411\u91cf\u3001\u6cd5\u7ebf\u5411\u91cf\u4ee5\u53ca\u89c2\u5bdf\u5411\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\u6765\u5efa\u6a21\u5149\u7ebf\u7684\u53cd\u5c04\u7279\u6027\u3002\u7136\u800c\uff0c\u5e76\u672a\u660e\u786e\u6307\u51fa\u6cd5\u7ebf\u5411\u91cf\u662f\u4e09\u89d2\u5f62\u9762\u7684\u6cd5\u7ebf\u5411\u91cf\u8fd8\u662f\u4e09\u89d2\u5f62\u9876\u70b9\u7684\u6cd5\u7ebf\u5411\u91cf\u3002\u56e0\u6b64\uff0c\u8fd9\u5f15\u51fa\u4e86\u672c\u8282\u7684\u4e3b\u9898\u2014\u2014\u7740\u8272\u9891\u7387\uff0c\u5305\u62ec\u9762\u7740\u8272\u3001\u9876\u70b9\u7740\u8272\u4e0e\u50cf\u7d20\u7740\u8272\u3002\u5206\u522b\u5bf9\u5e94\u4e86\u4e09\u79cd\u4e0d\u540c\u7684\u7740\u8272\u65b9\u6cd5\uff0cFlat Shading\u3001Gouraud Shading \u4e0e Phong Shading\u3002</p>"}, {"location": "theory/CG/rendering/basic/#flat-shading", "title": "Flat Shading / \u9762\u7740\u8272", "text": "<p>Flat Shading \u662f\u4e00\u4e2a\u57fa\u672c\u7684\u7740\u8272\u6280\u672f\uff0c\u5b83 \u4f7f\u7528\u591a\u8fb9\u5f62\u7f51\u683c\u8868\u9762\u7684\u6cd5\u5411\u91cf \u6765\u786e\u5b9a\u6bcf\u4e2a\u50cf\u7d20\u7684\u989c\u8272\uff0c\u5e76\u4e14 \u8ba4\u4e3a\u6574\u4e2a\u591a\u8fb9\u5f62\u8868\u9762\u90fd\u662f\u540c\u6837\u7684\u989c\u8272 \u3002\u8fd9\u79cd\u65b9\u6cd5\u7b80\u5355\u5feb\u901f\uff0c\u4f46\u662f\u5176\u51e0\u4f55\u8868\u73b0\u5f88\u7b80\u964b\uff0c\u8868\u9762\u770b\u4e0a\u53bb\u5f88\u5e73\u6ed1\uff0c\u7f3a\u4e4f\u771f\u5b9e\u611f\u3002</p>"}, {"location": "theory/CG/rendering/basic/#gouraud-shading", "title": "Gouraud Shading / \u9876\u70b9\u7740\u8272", "text": "<p>Gouraud Shading \u662f\u4e00\u79cd\u4ece\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u5f00\u59cb\u8ba1\u7b97\u7684\u65b9\u6cd5\u3002\u5b83\u901a\u8fc7 \u5728\u591a\u8fb9\u5f62\u7684\u6bcf\u4e2a\u9876\u70b9\u5904\u786e\u5b9a\u4e00\u4e2a\u6cd5\u5411\u91cf \u7528\u4e8e\u7740\u8272\uff0c\u5e76\u5728 \u591a\u8fb9\u5f62\u5185\u63d2\u503c\u989c\u8272 \uff0c\u5f97\u5230\u6bcf\u4e2a\u50cf\u7d20\u7684\u989c\u8272\u3002\u8fd9\u79cd\u65b9\u6cd5\u6bd4 Flat Shading \u66f4\u52a0\u903c\u771f\uff0c\u80fd\u591f\u5448\u73b0\u51fa\u8868\u9762\u7eb9\u7406\u7684\u53d8\u5316\u548c\u660e\u6697\u5bf9\u6bd4\uff0c\u4f46\u662f\u5728\u8868\u9762\u51fa\u73b0\u9510\u5229\u8fb9\u7f18\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u5c31\u4f1a\u5931\u771f\u3002</p> <p>\u5177\u4f53\u5730\uff0cGouraud Shading \u9700\u8981\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ul> <li> <p>\u8ba1\u7b97\u591a\u8fb9\u5f62\u6bcf\u4e2a\u9876\u70b9\u7684\u6cd5\u5411\u91cf\u3002\u9876\u70b9\u6cd5\u5411\u91cf\u7684\u8ba1\u7b97\u4e00\u822c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a</p> </li> <li> <p>\u5982\u679c\u591a\u8fb9\u5f62\u7684\u51e0\u4f55\u8868\u8fbe\u5f0f\u5df2\u77e5\uff08\u5982\u5706\u5f62\uff09\uff0c\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u6839\u636e\u516c\u5f0f\u8ba1\u7b97\u9876\u70b9\u6cd5\u5411\u91cf\u3002</p> </li> <li> <p>\u5982\u679c\u4ec5\u77e5\u9053\u591a\u8fb9\u5f62\u8868\u9762\u7684\u6cd5\u5411\u91cf\uff0c\u90a3\u4e48\u53ef\u4ee5\u5c06\u6240\u6709\u5171\u4eab\u67d0\u9876\u70b9\u7684\u8868\u9762\u7684\u6cd5\u5411\u91cf\u7684\u5747\u503c\u8fd1\u4f3c\u4f5c\u4e3a\u8be5\u9876\u70b9\u7684\u6cd5\u5411\u91cf\uff1a</p> </li> </ul> \\[ \\mathbf{N_v}=\\frac{\\sum_i\\mathbf{N_i}}{||\\sum_i\\mathbf{N_i}||}     \\] <ul> <li>\u8ba1\u7b97\u591a\u8fb9\u5f62\u5185\u4efb\u4e00\u70b9\u7684\u989c\u8272\u3002Gouraud Shading \u4ec5\u5bf9\u591a\u8fb9\u5f62\u7684\u9876\u70b9\u8fdb\u884c\u7740\u8272\u8ba1\u7b97\uff0c\u591a\u8fb9\u5f62\u5185\u90e8\u7684\u989c\u8272\u503c\u901a\u8fc7\u4f7f\u7528\u91cd\u5fc3\u5750\u6807\u63d2\u503c\u5f97\u5230\u3002\uff08\u91cd\u5fc3\u63d2\u503c\u8be6\u7ec6\u53ef\u770b\u4e4b\u524d\u7684\u7b14\u8bb0\u3002\uff09</li> </ul> \u51e0\u4f55\u8868\u8fbe\u5f0f\u5df2\u77e5\u65f6\u53ef\u76f4\u63a5\u6c42\u89e3 \u8868\u8fbe\u5f0f\u672a\u77e5\u65f6\u53ef\u8fd1\u4f3c\u8ba1\u7b97"}, {"location": "theory/CG/rendering/basic/#phong-shading", "title": "Phong Shading / \u50cf\u7d20\u7740\u8272", "text": "<p>Phong Shading \u662f Gouraud Shading \u7684\u6539\u8fdb\u7248\uff0c\u5177\u6709\u66f4\u9ad8\u7684\u8ba1\u7b97\u6210\u672c\u3002 Phong Shading \u5229\u7528\u6bcf\u4e2a\u50cf\u7d20\u7684\u8868\u9762\u6cd5\u7ebf\u548c\u6bcf\u4e2a\u50cf\u7d20\u7684\u6750\u8d28\u5c5e\u6027\u8ba1\u7b97\u5149\u7167 \u3002\u4f7f\u7528\u4e00\u7cfb\u5217\u590d\u6742\u7684\u7b97\u6cd5\uff0cPhong Shading \u80fd\u591f\u521b\u5efa\u5c04\u7ebf\u5728\u4ea4\u6c47\u70b9\u5904\u53cd\u5c04\u3001\u6298\u5c04\u7b49\u7269\u7406\u73b0\u8c61\uff0c\u4f7f\u5f97\u8868\u9762\u770b\u8d77\u6765\u66f4\u52a0\u771f\u5b9e\u3001\u66f4\u52a0\u5149\u6ed1\u3002Phong Shading \u4e3b\u8981\u8fd0\u7528\u4e8e\u6e32\u67d3\u771f\u5b9e\u7269\u4f53\u65f6\u7684\u5149\u7167\u5904\u7406\uff0c\u662f\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e2d\u6bd4\u8f83\u6d41\u884c\u7684\u8868\u9762\u7740\u8272\u6a21\u578b\u4e4b\u4e00\u3002</p> <p>\u4e0e Gouraud Shading \u7684\u5728\u5b9e\u73b0\u4e0a\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0cPhong Shading \u9700\u8981\u901a\u8fc7\u91cd\u5fc3\u5750\u6807\u63d2\u503c\u8ba1\u7b97\u6bcf\u4e2a\u50cf\u7d20\u7684\u6cd5\u5411\u91cf\u4e0e\u6750\u8d28\u5c5e\u6027\uff0c\u5bf9\u6bcf\u4e2a\u50cf\u7d20\u8fdb\u884c\u5355\u72ec\u7684\u7740\u8272\u8ba1\u7b97\u3002\u800c Gouraud Shading \u53ea\u662f\u5bf9\u6bcf\u4e2a\u9876\u70b9\u8fdb\u884c\u7740\u8272\uff0c\u7136\u540e\u901a\u8fc7\u91cd\u5fc3\u5750\u6807\u63d2\u503c\u8ba1\u7b97\u6bcf\u4e2a\u50cf\u7d20\u7684\u503c\u3002</p>"}, {"location": "theory/CG/rendering/basic/#_20", "title": "\u4e0d\u540c\u7740\u8272\u65b9\u6cd5\u5bf9\u6bd4", "text": "<p>Phong Shading \u548c Gouraud Shading \u90fd\u662f\u6e32\u67d3\u6280\u672f\u4e2d\u7684\u5e73\u6ed1\u7740\u8272\u7b97\u6cd5\uff0c\u4e24\u8005\u5404\u6709\u4f18\u52a3\uff1a</p> <p>Gouraud Shading \u7684\u7f3a\u70b9\uff1a</p> <ol> <li>\u6cd5\u5411\u91cf\u63d2\u503c\u7cbe\u5ea6\u8f83\u4f4e\uff1a\u5728 Gouraud Shading \u4e2d\uff0c\u6cd5\u5411\u91cf\u662f\u5728\u6bcf\u4e2a\u9762\u4e0a\u8ba1\u7b97\u7684\uff0c\u5e76\u4e14\u6bcf\u4e2a\u9762\u4e0a\u7684\u6cd5\u5411\u91cf\u5728\u5171\u4eab\u7684\u9876\u70b9\u5904\u88ab\u63d2\u503c\u3002\u8fd9\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u8868\u9762\u7ec6\u8282\u4e22\u5931\uff0c\u5e76\u4e14\u5bf9\u66f4\u590d\u6742\u7684\u7269\u4f53\u6765\u8bf4\uff0c\u63d2\u503c\u53ef\u4ee5\u5bfc\u81f4\u8868\u9762\u7ec6\u8282\u53d8\u5f97\u66f4\u52a0\u5e73\u6ed1\uff0c\u6548\u679c\u53ef\u80fd\u4e0d\u591f\u771f\u5b9e\u3002</li> <li>\u955c\u9762\u53cd\u5c04\u65b9\u5411\u4e0d\u8db3\uff1a\u7531\u4e8e\u5404\u79cd\u539f\u56e0\uff0cGouraud Shading \u901a\u5e38\u4e0d\u80fd\u4ea7\u751f\u975e\u5e38\u597d\u7684\u955c\u9762\u53cd\u5c04\u6548\u679c\uff0c\u7531\u4e8e\u6cd5\u5411\u91cf\u7684\u63d2\u503c\u53ef\u80fd\u5bfc\u81f4\u955c\u9762\u53cd\u5c04\u6548\u679c\u770b\u4e0a\u53bb\u4e0d\u591f\u81ea\u7136\u3002</li> <li>\u4e0d\u591f\u771f\u5b9e\uff1a\u7531\u4e8e Gouraud Shading \u5728\u9876\u70b9\u4e0a\u8ba1\u7b97\u5149\u7167\u5e76\u63d2\u503c\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u7269\u4f53\u8868\u9762\u770b\u8d77\u6765\u6709\u660e\u663e\u7684\u989c\u8272\u5206\u5c42\uff0c\u800c\u4e14\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u989c\u8272\u7684\u53d8\u5316\u53ef\u80fd\u4e0d\u591f\u5e73\u6ed1\u548c\u81ea\u7136\u3002</li> </ol> <p>Phong Shading \u7684\u4f18\u52bf\u5305\u62ec\uff1a</p> <ol> <li>\u51c6\u786e\u6027\u66f4\u9ad8\uff1aPhong Shading \u8ba1\u7b97\u6bcf\u4e2a\u50cf\u7d20\u989c\u8272\u7684\u65b9\u5f0f\u66f4\u52a0\u51c6\u786e\uff0c\u56e0\u4e3a\u5b83\u662f\u57fa\u4e8e\u6bcf\u4e2a\u50cf\u7d20\u6cd5\u7ebf\u7684\u63d2\u503c\u6765\u8ba1\u7b97\u5149\u7167\u3002\u8fd9\u4f7f\u5f97\u8fd9\u79cd\u6280\u672f\u5728\u5904\u7406\u6709\u66f2\u9762\u7684\u7269\u4f53\u65f6\u6548\u679c\u66f4\u597d\u3002</li> <li>\u53ef\u6269\u5c55\u6027\uff1aPhong Shading \u5bb9\u6613\u6269\u5c55\u6210\u66f4\u9ad8\u6548\u7684\u7b97\u6cd5\u6765\u5904\u7406\u5149\u7167\u6548\u679c\uff0c\u4f8b\u5982\u5728\u4e0d\u540c\u9636\u6bb5\u8ba1\u7b97\u5149\u7167\u7684\u7ebf\u7a0b\u5316\u6216\u91c7\u7528 GPU \u52a0\u901f\u6e32\u67d3\u3002</li> <li>\u66f4\u597d\u7684\u53cd\u5c04\u6548\u679c\uff1aPhong Shading \u53ef\u4ee5\u4ea7\u751f\u66f4\u597d\u7684\u955c\u9762\u53cd\u5c04\u6548\u679c\uff0c\u56e0\u4e3a\u5b83\u901a\u8fc7\u5bf9\u6cd5\u7ebf\u5411\u91cf\u8fdb\u884c\u63d2\u503c\u6765\u8ba1\u7b97\u6bcf\u4e2a\u50cf\u7d20\u7684\u53cd\u5c04\u65b9\u5411\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u4f7f\u7528\u9876\u70b9\u6cd5\u7ebf\u3002</li> </ol> <p>Phong Shading \u7684\u52a3\u52bf\u5305\u62ec\uff1a</p> <ol> <li>\u8ba1\u7b97\u6210\u672c\u9ad8\uff1a\u76f8\u5bf9\u4e8e Gouraud Shading\uff0cPhong Shading \u7684\u8ba1\u7b97\u590d\u6742\u5ea6\u66f4\u9ad8\u3002\u5b83\u9700\u8981\u8ba1\u7b97\u6bcf\u4e2a\u50cf\u7d20\u7684\u6cd5\u7ebf\u5411\u91cf\uff0c\u7136\u540e\u8fdb\u884c\u63d2\u503c\uff0c\u56e0\u6b64\u5b83\u9700\u8981\u66f4\u591a\u7684\u8ba1\u7b97\u8d44\u6e90\u3002</li> <li>\u8fb9\u7f18\u8fc7\u5ea6\u5e73\u6ed1\uff1a\u7531\u4e8e Phong Shading \u662f\u5728\u6bcf\u4e2a\u50cf\u7d20\u4e0a\u8ba1\u7b97\u5149\u7167\u7684\uff0c\u56e0\u6b64\u5b83\u53ef\u80fd\u4f1a\u8fc7\u5ea6\u5e73\u6ed1\u8fb9\u7f18\uff0c\u5bfc\u81f4\u7269\u4f53\u5916\u89c2\u4e0d\u591f\u81ea\u7136\u3002</li> </ol> <p></p> <p>\u6709\u4e00\u70b9\u7684\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u91cc\u6240\u6709\u7684\u8336\u58f6\u6240\u4f7f\u7528\u7684\u90fd\u662f\u4e00\u4e2a\u4f4e\u7cbe\u5ea6\u6a21\u578b\uff0c\u8fd9\u70b9\u53ef\u4ee5\u4eceFlat Shading\u7684\u7ed3\u679c\u53ef\u4ee5\u770b\u51fa\uff0c\u9762\u7247\u662f\u6709\u9650\u7684\u3002\u968f\u7740\u6a21\u578b\u7cbe\u5ea6\u7684\u63d0\u5347\uff0c\u5404\u79cd\u7740\u8272\u65b9\u6cd5\u7684\u5b9e\u9645\u8868\u73b0\u4e5f\u4f1a\u6709\u6240\u4e0d\u540c\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p>"}, {"location": "theory/CG/rendering/basic/#mipmap", "title": "\u7eb9\u7406\u6620\u5c04\u4e0eMipmap\u6280\u672f", "text": ""}, {"location": "theory/CG/rendering/basic/#_21", "title": "\u53c2\u8003\u94fe\u63a5", "text": "<p>\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u516d\uff1a\u900f\u89c6\u77eb\u6b63\u63d2\u503c\u548c\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u603b\u7ed3 - \u77e5\u4e4e (zhihu.com)</p> <p>\u8be6\u7ec6\u4ecb\u7ecdZ-Buffer\u4e0eW-Buffer-\u963f\u91cc\u4e91\u5f00\u53d1\u8005\u793e\u533a (aliyun.com)</p> <p>\u4f5c\u4e1a3 interpolated_shadingcoords \u2013 \u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u4e0e\u6df7\u5408\u73b0\u5b9e\u5728\u7ebf\u5e73\u53f0 (games-cn.org)</p> <p>\u300aGAMES101\u300b\u4f5c\u4e1a\u6846\u67b6\u95ee\u9898\u8be6\u89e3 - \u77e5\u4e4e (zhihu.com)</p> <p> \u201c\u900f\u89c6\u9664\u6cd5\u201d \u2014\u2014 \u9f50\u6b21\u5750\u6807\u548c\u6295\u5f71_\u6851\u676593\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u5b59\u5c0f\u78ca - \u77e5\u4e4e (zhihu.com)</p> <p>\u9ad8\u7ea7\u5149\u7167 - LearnOpenGL CN (learnopengl-cn.github.io)</p> <p>Direct3D\u56fa\u5b9a\u6e32\u67d3\u6d41\u6c34\u7ebf\u5206\u6790\u4e0e\u603b\u7ed3_\u8b66\u9192\u4e0e\u97ad\u7b56\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u7070\u5ea6\u56fe\u3001\u9ad8\u5ea6\u56fe\u548c\u6cd5\u7ebf\u8d34\u56fe \u4ecb\u7ecd\u53ca\u539f\u7406_\u9ad8\u5ea6\u56fe \u539f\u7406_\u8b66\u9192\u4e0e\u97ad\u7b56\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p> <p>\u2b50  \u5207\u7ebf\u7a7a\u95f4\uff08Tangent Space\uff09\u6cd5\u7ebf\u6620\u5c04\uff08Normal Mapping\uff09_\u8b66\u9192\u4e0e\u97ad\u7b56\u7684\u535a\u5ba2-CSDN\u535a\u5ba2</p>"}, {"location": "theory/CS/", "title": "\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6", "text": ""}, {"location": "theory/CS/basic/cn/", "title": "\u8ba1\u7b97\u673a\u7f51\u7edc", "text": "<p>\u8be5\u90e8\u5206\u7684\u535a\u5ba2\u4e2d\u4f7f\u7528\u4e86gitee\u7684\u56fe\u7247\u5916\u94fe\uff0c\u7531\u4e8egitee\u7684\u76f8\u5173\u9650\u5236\uff0c\u65e0\u6cd5\u5728\u6b64\u5904\u6b63\u5e38\u663e\u793a\u3002\u8bf7\u70b9\u51fb\u4ee5\u4e0b\u5bf9\u5e94\u6258\u7ba1\u5728gitee\u4e0a\u7684\u535a\u5ba2\u94fe\u63a5\u8fdb\u884c\u8bbf\u95ee\u3002</p> <p>\u300c\u8ba1\u7f51\u300d01-\u8ba1\u7b97\u673a\u7f51\u7edc\u6982\u8ff0 | Hi~ Call me FUJI! (gitee.io)</p> <p>\u300c\u8ba1\u7f51\u300d02-\u7269\u7406\u5c42 | Hi~ Call me FUJI! (gitee.io)</p> <p>\u300c\u8ba1\u7f51\u300d03-\u6570\u636e\u94fe\u8def\u5c42 | Hi~ Call me FUJI! (gitee.io)</p> <p>\u300c\u8ba1\u7f51\u300d04-\u7f51\u7edc\u5c42 | Hi~ Call me FUJI! (gitee.io)</p> <p>\u300c\u8ba1\u7f51\u300d05-\u4f20\u8f93\u5c42 | Hi~ Call me FUJI! (gitee.io)</p> <p>\u300c\u8ba1\u7f51\u300d06-\u5e94\u7528\u5c42 | Hi~ Call me FUJI! (gitee.io)</p>"}, {"location": "theory/CS/basic/cs/", "title": "\u8ba1\u7b97\u673a\u7ec4\u6210", "text": "<p>\u8be5\u90e8\u5206\u7684\u535a\u5ba2\u4e2d\u4f7f\u7528\u4e86gitee\u7684\u56fe\u7247\u5916\u94fe\uff0c\u7531\u4e8egitee\u7684\u76f8\u5173\u9650\u5236\uff0c\u65e0\u6cd5\u5728\u6b64\u5904\u6b63\u5e38\u663e\u793a\u3002\u8bf7\u70b9\u51fb\u4ee5\u4e0b\u5bf9\u5e94\u6258\u7ba1\u5728gitee\u4e0a\u7684\u535a\u5ba2\u94fe\u63a5\u8fdb\u884c\u8bbf\u95ee\u3002</p> <p>\u300c\u8ba1\u7ec4\u300d01-\u8ba1\u7b97\u673a\u7ec4\u6210\u6982\u8ff0 | Hi~ Call me FUJI! (gitee.io)</p> <p>\u300c\u8ba1\u7ec4\u300d02-\u6570\u636e\u7684\u8868\u793a\u548c\u8fd0\u7b97 | Hi~ Call me FUJI! (gitee.io)</p> <p>\u300c\u8ba1\u7ec4\u300d03-\u5b58\u50a8\u5668\u7684\u5c42\u6b21\u7ed3\u6784 | Hi~ Call me FUJI! (gitee.io)</p> <p>\u300c\u8ba1\u7ec4\u300d04-MIPS\u6307\u4ee4\u7cfb\u7edf\u53ca\u6c47\u7f16\u8bed\u8a00 | Hi~ Call me FUJI! (gitee.io)</p> <p>\u300c\u8ba1\u7ec4\u300d05-MIPS\u5904\u7406\u5668 | Hi~ Call me FUJI! (gitee.io)</p> <p>\u300c\u8ba1\u7ec4\u300d06-\u603b\u7ebf\u4e0e\u8f93\u5165\u8f93\u51fa\u7cfb\u7edf | Hi~ Call me FUJI! (gitee.io)</p>"}, {"location": "theory/CS/basic/os/", "title": "\u64cd\u4f5c\u7cfb\u7edf", "text": "<p>\u8be5\u90e8\u5206\u7684\u535a\u5ba2\u4e2d\u4f7f\u7528\u4e86gitee\u7684\u56fe\u7247\u5916\u94fe\uff0c\u7531\u4e8egitee\u7684\u76f8\u5173\u9650\u5236\uff0c\u65e0\u6cd5\u5728\u6b64\u5904\u6b63\u5e38\u663e\u793a\u3002\u8bf7\u70b9\u51fb\u4ee5\u4e0b\u5bf9\u5e94\u6258\u7ba1\u5728gitee\u4e0a\u7684\u535a\u5ba2\u94fe\u63a5\u8fdb\u884c\u8bbf\u95ee\u3002</p> <p>\u300c\u64cd\u4f5c\u7cfb\u7edf\u300d01-\u64cd\u4f5c\u7cfb\u7edf\u6982\u8ff0 | Hi~ Call me FUJI! (gitee.io)</p> <p>\u300c\u64cd\u4f5c\u7cfb\u7edf\u300d02-\u8fdb\u7a0b\u7ba1\u7406 | Hi~ Call me FUJI! (gitee.io)</p> <p>\u300c\u64cd\u4f5c\u7cfb\u7edf\u300d03-\u5185\u5b58\u7ba1\u7406 | Hi~ Call me FUJI! (gitee.io)</p> <p>\u300c\u64cd\u4f5c\u7cfb\u7edf\u300d04-\u8bbe\u5907\u7ba1\u7406 | Hi~ Call me FUJI! (gitee.io)</p> <p>\u300c\u64cd\u4f5c\u7cfb\u7edf\u300d05-\u6587\u4ef6\u7cfb\u7edf | Hi~ Call me FUJI! (gitee.io)</p>"}, {"location": "theory/CS/basic/summary/01_basic_summary/", "title": "\u8ba1\u7b97\u673a\u57fa\u7840\u603b\u7ed3", "text": "<p>\u8be5\u90e8\u5206\u7684\u535a\u5ba2\u4e2d\u4f7f\u7528\u4e86gitee\u7684\u56fe\u7247\u5916\u94fe\uff0c\u7531\u4e8egitee\u7684\u76f8\u5173\u9650\u5236\uff0c\u65e0\u6cd5\u5728\u6b64\u5904\u6b63\u5e38\u663e\u793a\u3002\u8bf7\u70b9\u51fb\u4ee5\u4e0b\u5bf9\u5e94\u6258\u7ba1\u5728gitee\u4e0a\u7684\u535a\u5ba2\u94fe\u63a5\u8fdb\u884c\u8bbf\u95ee\u3002</p> <p>\u300c\u7814\u7a76\u751f\u8003\u8bd5\u300d\u673a\u8bd5\u7b14\u8bb0 | Hi~ Call me FUJI! (gitee.io)</p> <p>\u300c\u7814\u7a76\u751f\u8003\u8bd5\u300d\u8003\u540e\u590d\u76d8 | Hi~ Call me FUJI! (gitee.io)</p> <p>\u300c\u7814\u7a76\u751f\u8003\u8bd5\u300d\u91cd\u70b9\u6c47\u603b\u7bc7 | Hi~ Call me FUJI! (gitee.io)</p>"}, {"location": "theory/CS/others/", "title": "\u5176\u4ed6\u76f8\u5173\u57fa\u7840\u8bfe\u7a0b", "text": ""}, {"location": "theory/CS/others/mathematical_modeling/", "title": "\u6570\u5b66\u5efa\u6a21\u8bfe\u7a0b", "text": "<p>\u8be5\u90e8\u5206\u7684\u535a\u5ba2\u4e2d\u4f7f\u7528\u4e86cnblog\u7684\u56fe\u7247\u5916\u94fe\uff0c\u7531\u4e8ecnblog\u7684\u76f8\u5173\u9650\u5236\uff0c\u65e0\u6cd5\u5728\u6b64\u5904\u6b63\u5e38\u663e\u793a\u3002\u8bf7\u70b9\u51fb\u4ee5\u4e0b\u5bf9\u5e94\u6258\u7ba1\u5728cnblog\u4e0a\u7684\u535a\u5ba2\u94fe\u63a5\u8fdb\u884c\u8bbf\u95ee\u3002</p> <p>BUAA_2019_\u6570\u5b66\u5efa\u6a21_\u671f\u672b\u590d\u4e60\u63d0\u7eb2 - FUJI_W - \u535a\u5ba2\u56ed (cnblogs.com)</p>"}, {"location": "theory/CS/others/matlab/", "title": "matlab\u8bfe\u7a0b", "text": "<p>\u8be5\u90e8\u5206\u7684\u535a\u5ba2\u4e2d\u4f7f\u7528\u4e86cnblog\u7684\u56fe\u7247\u5916\u94fe\uff0c\u7531\u4e8ecnblog\u7684\u76f8\u5173\u9650\u5236\uff0c\u65e0\u6cd5\u5728\u6b64\u5904\u6b63\u5e38\u663e\u793a\u3002\u8bf7\u70b9\u51fb\u4ee5\u4e0b\u5bf9\u5e94\u6258\u7ba1\u5728cnblog\u4e0a\u7684\u535a\u5ba2\u94fe\u63a5\u8fdb\u884c\u8bbf\u95ee\u3002</p> <p>BUAA_2019_MATLAB\u57fa\u7840\u4e0e\u5e94\u7528_\u671f\u672b\u590d\u4e60\u7eb2\u8981 - FUJI_W - \u535a\u5ba2\u56ed (cnblogs.com)</p>"}, {"location": "theory/CS/software/", "title": "\u8f6f\u4ef6\u5f00\u53d1\u57fa\u7840", "text": ""}, {"location": "theory/CS/software/oo/", "title": "\u9762\u5411\u5bf9\u8c61", "text": "<p>\u8be5\u90e8\u5206\u7684\u535a\u5ba2\u4e2d\u4f7f\u7528\u4e86cnblog\u7684\u56fe\u7247\u5916\u94fe\uff0c\u7531\u4e8ecnblog\u7684\u76f8\u5173\u9650\u5236\uff0c\u65e0\u6cd5\u5728\u6b64\u5904\u6b63\u5e38\u663e\u793a\u3002\u8bf7\u70b9\u51fb\u4ee5\u4e0b\u5bf9\u5e94\u6258\u7ba1\u5728cnblog\u4e0a\u7684\u535a\u5ba2\u94fe\u63a5\u8fdb\u884c\u8bbf\u95ee\u3002</p> <p>OO_BLOG1_\u7b80\u5355\u8868\u8fbe\u5f0f\u6c42\u5bfc\u95ee\u9898\u603b\u7ed3 - FUJI_W - \u535a\u5ba2\u56ed (cnblogs.com)</p> <p>OO_BLOG2_\u591a\u7ebf\u7a0b\u7535\u68af\u6a21\u62df - FUJI_W - \u535a\u5ba2\u56ed (cnblogs.com)</p> <p>OO_BLOG3_\u89c4\u683c\u5316\u8bbe\u8ba1\uff08JML\u5b66\u4e60\uff09 - FUJI_W - \u535a\u5ba2\u56ed (cnblogs.com)</p> <p>OO_BLOG4_UML\u7cfb\u5217\u5b66\u4e60 - FUJI_W - \u535a\u5ba2\u56ed (cnblogs.com)</p>"}, {"location": "theory/CS/software/software/", "title": "\u8f6f\u4ef6\u5de5\u7a0b", "text": "<p>\u8be5\u90e8\u5206\u7684\u535a\u5ba2\u4e2d\u4f7f\u7528\u4e86cnblog\u7684\u56fe\u7247\u5916\u94fe\uff0c\u7531\u4e8ecnblog\u7684\u76f8\u5173\u9650\u5236\uff0c\u65e0\u6cd5\u5728\u6b64\u5904\u6b63\u5e38\u663e\u793a\u3002\u8bf7\u70b9\u51fb\u4ee5\u4e0b\u5bf9\u5e94\u6258\u7ba1\u5728cnblog\u4e0a\u7684\u535a\u5ba2\u94fe\u63a5\u8fdb\u884c\u8bbf\u95ee\u3002</p> <p>\u8f6f\u4ef6\u5de5\u7a0b\u57fa\u7840 \u7b2c1\u6b21\u4e2a\u4eba\u4f5c\u4e1a - FUJI_W - \u535a\u5ba2\u56ed (cnblogs.com)</p> <p>\u8f6f\u4ef6\u5de5\u7a0b\u57fa\u7840 \u7b2c2\u6b21\u4e2a\u4eba\u4f5c\u4e1a - FUJI_W - \u535a\u5ba2\u56ed (cnblogs.com)</p> <p>\u8f6f\u4ef6\u5de5\u7a0b\u57fa\u7840 \u7b2c3\u6b21\u4e2a\u4eba\u4f5c\u4e1a - FUJI_W - \u535a\u5ba2\u56ed (cnblogs.com)</p> <p>\u8f6f\u4ef6\u5de5\u7a0b\u57fa\u7840 \u7ed3\u5bf9\u9879\u76ee\u4f5c\u4e1a - FUJI_W - \u535a\u5ba2\u56ed (cnblogs.com)</p> <p>\u8f6f\u4ef6\u5de5\u7a0b\u57fa\u7840 \u56e2\u961f\u4f5c\u4e1a - FUJI_W - \u535a\u5ba2\u56ed (cnblogs.com)</p> <p>\u8f6f\u4ef6\u5de5\u7a0b\u57fa\u7840 \u5fae\u8f6fOCR-Form-Tools\u4f53\u9a8c - FUJI_W - \u535a\u5ba2\u56ed (cnblogs.com)</p>"}, {"location": "theory/CV/3d_vision/stereo/", "title": "\u300c\u8ba1\u7b97\u673a\u89c6\u89c9\u300d\u53cc\u76ee\u89c6\u89c9", "text": ""}, {"location": "theory/CV/3d_vision/stereo/#_1", "title": "\u57fa\u672c\u539f\u7406", "text": ""}, {"location": "theory/CV/3d_vision/stereo/#_2", "title": "\u53cc\u76ee\u6df1\u5ea6\u76f8\u673a\u57fa\u672c\u539f\u7406", "text": "<p>\u4e0b\u56fe\u4ece\u7269\u7406\u539f\u7406\u4e0a\u5c55\u793a\u4e86\u4e3a\u4ec0\u4e48\u5355\u76ee\u76f8\u673a\u4e0d\u80fd\u6d4b\u91cf\u6df1\u5ea6\u503c\u800c\u53cc\u76ee\u53ef\u4ee5\u3002\u6211\u4eec\u770b\u5230\u7ea2\u8272\u7ebf\u6761\u4e0a\u4e09\u4e2a\u4e0d\u540c\u8fdc\u8fd1\u7684\u9ed1\u8272\u7684\u70b9\u5728\u4e0b\u65b9\u76f8\u673a\u4e0a\u6295\u5f71\u5728\u540c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u56e0\u6b64\u5355\u76ee\u76f8\u673a\u65e0\u6cd5\u5206\u8fa8\u6210\u7684\u50cf\u5230\u5e95\u662f\u8fdc\u7684\u90a3\u4e2a\u70b9\u8fd8\u662f\u8fd1\u7684\u90a3\u4e2a\u70b9\uff0c\u4f46\u662f\u5b83\u4eec\u5728\u4e0a\u65b9\u76f8\u673a\u7684\u6295\u5f71\u5374\u4f4d\u4e8e\u4e09\u4e2a\u4e0d\u540c\u4f4d\u7f6e\uff0c\u56e0\u6b64\u901a\u8fc7\u4e24\u4e2a\u76f8\u673a\u7684\u89c2\u5bdf\u53ef\u4ee5\u786e\u5b9a\u5230\u5e95\u662f\u54ea\u4e00\u4e2a\u70b9\u3002</p> <p></p>"}, {"location": "theory/CV/3d_vision/stereo/#_3", "title": "\u53cc\u76ee\u6df1\u5ea6\u76f8\u673a\u57fa\u672c\u6d41\u7a0b", "text": "<ol> <li> <p>\u9996\u5148\u9700\u8981\u5bf9\u53cc\u76ee\u76f8\u673a\u8fdb\u884c\u6807\u5b9a\uff0c\u5f97\u5230\u4e24\u4e2a\u76f8\u673a\u7684\u5185\u5916\u53c2\u6570\u3001\u5355\u5e94\u77e9\u9635\uff1b</p> </li> <li> <p>\u6839\u636e\u6807\u5b9a\u7ed3\u679c\u5bf9\u539f\u59cb\u56fe\u50cf\u6821\u6b63\uff0c\u6821\u6b63\u540e\u7684\u4e24\u5f20\u56fe\u50cf\u4f4d\u4e8e\u540c\u4e00\u5e73\u9762\u4e14\u4e92\u76f8\u5e73\u884c\uff1b</p> </li> <li>\u5bf9\u6821\u6b63\u540e\u7684\u4e24\u5f20\u56fe\u50cf\u8fdb\u884c\u50cf\u7d20\u70b9\u5339\u914d\uff1b</li> <li>\u6839\u636e\u5339\u914d\u7ed3\u679c\u8ba1\u7b97\u6bcf\u4e2a\u50cf\u7d20\u7684\u6df1\u5ea6\uff0c\u4ece\u800c\u83b7\u5f97\u6df1\u5ea6\u56fe\u3002</li> </ol>"}, {"location": "theory/CV/3d_vision/stereo/#_4", "title": "\u8be6\u7ec6\u539f\u7406", "text": ""}, {"location": "theory/CV/3d_vision/stereo/#_5", "title": "\u7406\u60f3\u53cc\u76ee\u76f8\u673a\u6a21\u578b", "text": "<p>\u7406\u60f3\u6a21\u578b\uff1a\u2460 \u5de6\u53f3\u4e24\u4e2a\u76f8\u673a\u4f4d\u4e8e\u540c\u4e00\u5e73\u9762\uff08\u5149\u8f74\u5e73\u884c\uff09\uff1b\u2461 \u5de6\u53f3\u76f8\u673a\u53c2\u6570\uff08\u5982\u7126\u8ddd \\(f\\) \u7b49\uff09\u4e00\u81f4\u3002\u63a8\u5bfc\u5982\u4e0b\u56fe\u6240\u793a\u3002</p> <p></p> <p>\u6839\u636e\u4ee5\u4e0a\u63a8\u5bfc\uff0c\u5f97\u5230\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u4e00\u70b9 \\(P\\) \u7684\u6df1\u5ea6\u4e3a \\(z=f*b/d\\) \uff0c\u53ef\u4ee5\u53d1\u73b0\u5982\u679c\u8981\u8ba1\u7b97\u6df1\u5ea6 \\(z\\)\uff0c\u5fc5\u987b\u8981\u77e5\u9053\uff1a</p> <ol> <li>\u76f8\u673a\u7126\u8ddd \\(f\\) \u548c \u5de6\u53f3\u76f8\u673a\u57fa\u7ebf \\(b\\)  \u2014\u2014 \u53ef\u901a\u8fc7\u5148\u9a8c\u4fe1\u606f\u6216\u76f8\u673a\u6807\u5b9a\u5f97\u5230\uff1b</li> <li>\u89c6\u5dee \\(d\\) \u2014\u2014 \u9700\u8981\u77e5\u9053\u5de6\u76f8\u673a\u7684\u4efb\u4e00\u50cf\u7d20\u70b9 \\((xl, yl)\\) \u548c\u53f3\u76f8\u673a\u4e2d\u5bf9\u5e94\u70b9 \\((xr, yr)\\) \u7684\u5bf9\u5e94\u5173\u7cfb\u3002</li> </ol>"}, {"location": "theory/CV/3d_vision/stereo/#_6", "title": "\u6781\u7ebf\u7ea6\u675f\u5b9a\u7406", "text": "<p>\u95ee\uff1a\u5bf9\u4e8e\u5de6\u56fe\u4e2d\u7684\u4e00\u4e2a\u50cf\u7d20\u70b9\uff0c\u5982\u4f55\u786e\u5b9a\u8be5\u70b9\u5728\u53f3\u56fe\u4e2d\u7684\u4f4d\u7f6e\uff1f\u662f\u4e0d\u662f\u9700\u8981\u6211\u4eec\u5728\u6574\u4e2a\u56fe\u50cf\u4e2d\u5730\u6bef\u5f0f\u641c\u7d22\u4e00\u4e2a\u4e2a\u5339\u914d\uff1f</p> <p>\u7b54\uff1a\u4e0d\u9700\u8981\u3002\u6839\u636e \u6781\u7ebf\u7ea6\u675f \uff0c\u53ef\u4ee5\u6781\u5927\u5730\u7f29\u5c0f\u5339\u914d\u8303\u56f4\u3002</p>"}, {"location": "theory/CV/3d_vision/stereo/#_7", "title": "\u6781\u5e73\u9762\u4e0e\u6781\u7ebf", "text": "<p>\u5982\u4e0b\u56fe\u6240\u793a\uff0cC1\uff0cC2\u662f\u4e24\u4e2a\u76f8\u673a\uff0cP\u662f\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u70b9\uff0cP\u548c\u4e24\u4e2a\u76f8\u673a\u4e2d\u5fc3\u70b9C1\u3001C2\u5f62\u6210\u4e86\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u5e73\u9762PC1C2\uff0c\u79f0\u4e3a \u6781\u5e73\u9762 \uff08Epipolar plane\uff09\u3002\u6781\u5e73\u9762\u548c\u4e24\u5e45\u56fe\u50cf\u76f8\u4ea4\u4e8e\u4e24\u6761\u76f4\u7ebf\uff0c\u8fd9\u4e24\u6761\u76f4\u7ebf\u79f0\u4e3a \u6781\u7ebf \uff08Epipolar line\uff09\u3002</p> <p></p>"}, {"location": "theory/CV/3d_vision/stereo/#_8", "title": "\u6781\u7ebf\u7ea6\u675f\u5b9a\u7406", "text": "<p>\u5982\u4e0a\u56fe\u6240\u793a\uff0c\u5047\u8bbeP\u5728\u76f8\u673aC1\u4e2d\u7684\u6210\u50cf\u70b9\u662fP1\uff0c\u5728\u76f8\u673aC2\u4e2d\u7684\u6210\u50cf\u70b9\u662fP2\uff0c\u4f46\u662fP\u7684\u4f4d\u7f6e\u4e8b\u5148\u662f\u672a\u77e5\u7684\u3002\u5bf9\u4e8e\u5de6\u56fe\u7684P1\u70b9\uff0c\u6211\u4eec\u5e0c\u671b\u627e\u5230\u5b83\u5728\u53f3\u56fe\u4e2d\u5bf9\u5e94\u7684P2\u70b9\u3002 \u6781\u7ebf\u7ea6\u675f\uff08Epipolar Constraint\uff09 \u662f\u6307\uff1a \u5f53\u540c\u4e00\u4e2a\u7a7a\u95f4\u70b9P\u5728\u4e24\u5e45\u56fe\u50cf\u4e0a\u5206\u522b\u6210\u50cf\u65f6\uff0c\u5df2\u77e5\u5de6\u56fe\u6295\u5f71\u70b9P1\uff0c\u90a3\u4e48\u5bf9\u5e94\u53f3\u56fe\u6295\u5f71\u70b9P2\u4e00\u5b9a\u5728\u76f8\u5bf9\u4e8eP1\u70b9\u7684\u6781\u7ebf\u4e0a \u3002\u6839\u636e\u6781\u7ebf\u7ea6\u675f\u7684\u89c4\u5f8b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6cbf\u7740\u6781\u7ebf\u641c\u7d22\u5c31\u4e00\u5b9a\u53ef\u4ee5\u627e\u5230\u548cP1\u7684\u5bf9\u5e94\u70b9P2\u3002</p>"}, {"location": "theory/CV/3d_vision/stereo/#_9", "title": "\u6781\u7ebf\u7684\u83b7\u53d6", "text": "<p>\u5df2\u77e5P1\u70b9\uff0c\u53ef\u4ee5\u786e\u5b9a\u5e73\u9762P1C1C2\uff0c\u6613\u77e5\u8be5\u5e73\u9762\u4e0e\u6781\u5e73\u9762PC1C2\u91cd\u5408\uff1b\u8ba1\u7b97\u5e73\u9762P1C1C2\u4e0e\u53f3\u76f8\u673a\u56fe\u50cf\u7684\u4ea4\u7ebf\uff0c\u5373\u4e3a\u76f8\u5bf9\u4e8eP1\u7684\u6781\u7ebf\u3002</p>"}, {"location": "theory/CV/3d_vision/stereo/#_10", "title": "\u56fe\u50cf\u77eb\u6b63", "text": ""}, {"location": "theory/CV/3d_vision/stereo/#_11", "title": "\u975e\u7406\u60f3\u60c5\u51b5", "text": "<p>\u4e0a\u8ff0\u8fc7\u7a0b\u8003\u8651\u7684\u60c5\u51b5\uff08\u4e24\u76f8\u673a\u5171\u9762\u4e14\u5149\u8f74\u5e73\u884c\u3001\u53c2\u6570\u76f8\u540c\uff09\u975e\u5e38\u7406\u60f3\uff0c\u4f46\u5982\u679c\u76f8\u673aC1\uff0cC2\u4e0d\u662f\u5728\u540c\u4e00\u76f4\u7ebf\u4e0a\u600e\u4e48\u529e\uff1f\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u79cd\u60c5\u51b5\u975e\u5e38\u5e38\u89c1\uff0c\u56e0\u4e3a\u6709\u4e9b\u573a\u666f\u4e0b\u4e24\u4e2a\u76f8\u673a\u9700\u8981\u72ec\u7acb\u56fa\u5b9a\uff0c\u5f88\u96be\u4fdd\u8bc1\u5149\u5fc3C1\uff0cC2\u5b8c\u5168\u6c34\u5e73\uff0c\u5373\u4f7f\u662f\u56fa\u5b9a\u5728\u540c\u4e00\u4e2a\u57fa\u677f\u4e0a\u4e5f\u4f1a\u56e0\u4e3a\u88c5\u914d\u7684\u539f\u56e0\u5bfc\u81f4\u5149\u5fc3\u4e0d\u5b8c\u5168\u6c34\u5e73\u3002\u5982\u4e0b\u56fea\u6240\u793a\uff0c\u5f53\u4e24\u4e2a\u76f8\u673a\u7684\u6781\u7ebf\u4e0d\u5e73\u884c\u4e14\u4e0d\u5171\u9762\u65f6\uff0c\u6839\u636e\u7406\u60f3\u6a21\u578b\u63a8\u5bfc\u7684\u516c\u5f0f\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\u3002\u800c\u4e14\u5728\u975e\u7406\u60f3\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u4e0b\u56feb\u4e2d\u7684\u6240\u793a\uff0c\u5de6\u56fe\u4e2d\u4efb\u4e00\u70b9\u5bf9\u5e94\u5230\u53f3\u56fe\u7684\u6781\u7ebf\u4e3a\u659c\u7ebf\uff0c\u6b64\u65f6\u9010\u70b9\u641c\u7d22\u7684\u6548\u7387\u975e\u5e38\u4f4e\u3002</p> \u56fea\uff1a\u975e\u7406\u60f3\u60c5\u51b5\u76f8\u673a\u6a21\u578b\u793a\u610f\u56fe \u56feb\uff1a\u5de6\u56fe\u4e2d\u4e09\u4e2a\u70b9\uff08\u5341\u5b57\u6807\u5fd7\uff09\u5728\u53f3\u56fe\u4e2d\u5bf9\u5e94\u7684\u6781\u7ebf\u662f\u53f3\u56fe\u4e2d\u7684\u4e09\u6761\u767d\u8272\u76f4\u7ebf"}, {"location": "theory/CV/3d_vision/stereo/#_12", "title": "\u56fe\u50cf\u77eb\u6b63", "text": "<p>\u5bf9\u4e8e\u975e\u7406\u60f3\u60c5\u51b5\u4e0b\uff08\u4e5f\u5373\u4e00\u822c\u60c5\u51b5\u4e0b\uff09\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7 \u56fe\u50cf\u77eb\u6b63\uff08Image Rectification\uff09 \u5c06\u56fe\u50cf\u8f6c\u5316\u4e3a\u7406\u60f3\u6a21\u578b\u3002\u56fe\u50cf\u77eb\u6b63\u662f\u901a\u8fc7\u5206\u522b\u5bf9\u4e24\u5f20\u56fe\u7247\u7528 \u5355\u5e94\u77e9\u9635\uff08homography matrix\uff09 \u53d8\u6362\uff08\u53ef\u4ee5\u901a\u8fc7 \u6807\u5b9a \u83b7\u5f97\uff09\u5f97\u5230\u7684\uff0c\u76ee\u7684\u5c31\u662f\u628a\u4e24\u4e2a\u4e0d\u540c\u65b9\u5411\u7684\u56fe\u50cf\u5e73\u9762\uff08\u56fea\u4e2d\u7070\u8272\u5e73\u9762\uff09\u91cd\u65b0\u6295\u5f71\u5230\u540c\u4e00\u4e2a\u5e73\u9762\u4e14\u5149\u8f74\u4e92\u76f8\u5e73\u884c\uff08\u56fea\u4e2d\u9ec4\u8272\u5e73\u9762\uff09\uff0c\u4e24\u4e2a\u76f8\u673a\u7684\u6781\u7ebf\u4e5f\u53d8\u6210\u6c34\u5e73\u7684\u3002\u5982\u56feb\u6240\u793a\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u4e09\u4e2a\u70b9\u5bf9\u5e94\u7684\u89c6\u5dee\u662f\u4e0d\u540c\u7684\uff0c\u8d8a\u8fdc\u7684\u7269\u4f53\u89c6\u5dee\u8d8a\u5c0f\uff0c\u8d8a\u8fd1\u7684\u7269\u4f53\u89c6\u5dee\u8d8a\u5927\uff0c\u8fd9\u548c\u6211\u4eec\u7684\u5e38\u8bc6\u662f\u4e00\u81f4\u7684\u3002</p> \u56fea\uff1a\u56fe\u50cf\u77eb\u6b63\u793a\u610f\u56fe \u56feb\uff1a\u56fe\u50cf\u77eb\u6b63\u540e\u7684\u7ed3\u679c\u793a\u610f\u56fe\uff1b\u7ea2\u8272\u53cc\u7bad\u5934\u7ebf\u6bb5\u662f\u5bf9\u5e94\u70b9\u7684\u89c6\u5dee"}, {"location": "theory/CV/3d_vision/stereo/#_13", "title": "\u76f8\u673a\u6807\u5b9a", "text": ""}, {"location": "theory/CV/3d_vision/stereo/#_14", "title": "\u76f8\u5173\u5750\u6807\u7cfb", "text": "<p>\u7269\u4f53\u7684\u4e09\u7ef4\u4fe1\u606f\u90fd\u662f\u901a\u8fc7\u4e8c\u7ef4\u56fe\u50cf\u63a8\u5bfc\u800c\u6765\u7684\u3002\u8981\u60f3\u660e\u786e\u7269\u4f53\u5728\u4e09\u7ef4\u7a7a\u95f4\u7684\u5177\u4f53\u4f4d\u7f6e\uff0c\u9664\u4e86\u56fe\u50cf\u7684\u4fe1\u606f\uff0c\u8fd8\u9700\u77e5\u9053\u76f8\u673a\u7684\u5177\u4f53\u53c2\u6570\u3002 \u76f8\u673a\u53c2\u6570\u7684\u786e\u5b9a\u8fc7\u7a0b \u5c31\u53eb\u505a \u76f8\u673a\u7684\u6807\u5b9a \u3002\u5728\u53cc\u76ee\u89c6\u89c9\u7cfb\u7edf\u4e2d\uff0c\u9664\u4e86 \u5bf9\u6bcf\u4e2a\u76f8\u673a\u8fdb\u884c\u6807\u5b9a\u5916 \uff0c \u8fd8\u9700\u8981\u77e5\u9053\u76f8\u673a\u95f4\u7684\u76f8\u4e92\u5173\u7cfb\u4ee5\u53ca\u76f8\u673a\u4e0e\u5f85\u6d4b\u7269\u4f53\u7684\u5750\u6807\u5173\u7cfb \uff0c\u8fd9\u4e00\u8fc7\u7a0b\u53eb\u505a \u7cfb\u7edf\u7684\u6807\u5b9a \u3002</p> <p>\u4ece\u56fe\u50cf\u4e0a\u7684\u7269\u4f53\u5230\u4e09\u7ef4\u7a7a\u95f4\u4e0a\u7684\u7269\u4f53\u7684\u6620\u5c04\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u662f\u5750\u6807\u7cfb\u7684\u53d8\u6362\u3002 \u56fe\u50cf \u4e0a\u7684\u67d0\u4e00\u70b9\uff0c\u7ecf\u8fc7\u7269\u7406\u5173\u7cfb\u7684\u8f6c\u6362\u53ef\u4ee5\u5f97\u5230\u73b0\u5b9e\u7684\u7269\u7406\u5750\u6807\uff0c\u7136\u540e\u5c06\u56fe\u50cf\u5e73\u9762\u6620\u5c04\u6210 \u76f8\u673a\u5750\u6807\u7cfb \u7684\u67d0\u4e00\u5e73\u9762\uff0c\u5f97\u5230\u8be5\u70b9\u5728\u76f8\u673a\u5750\u6807\u7cfb\u7684\u5750\u6807\uff0c\u6700\u540e\u901a\u8fc7\u76f8\u673a\u5750\u6807\u7cfb\u4e0e \u4e16\u754c\u5750\u6807\u7cfb \u7684\u65cb\u8f6c\u5e73\u79fb\u53d8\u6362\u5c31\u53ef\u4ee5\u786e\u5b9a\u8be5\u70b9\u7684\u5b9e\u9645\u4e09\u7ef4\u5750\u6807\u4e86\u3002\u6240\u4ee5\u8981\u60f3\u786e\u5b9a\u70b9\u7684\u4e09\u7ef4\u5750\u6807\uff0c\u9996\u5148\u8981\u4e86\u89e3\u8fd9\u56db\u4e2a\u5750\u6807\u7cfb\u3002</p> <p></p>"}, {"location": "theory/CV/3d_vision/stereo/#_15", "title": "\u50cf\u7d20\u5750\u6807\u7cfb", "text": "<p>\u5728\u6570\u5b57\u56fe\u50cf\u4e2d\uff0c\u4e00\u5e45\u56fe\u50cf\u5c31\u662f\u4e00\u4e2a \\(M\\) \u884c \\(N\\) \u5217\u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u6570\u503c\u5c31\u662f\u8be5\u70b9\u7684\u4eae\u5ea6\u3002\u5728\u56fe\u50cf\u7684\u5de6\u4e0a\u89d2\u5efa\u7acb\u76f4\u89d2\u5750\u6807\u7cfb \\(u\\)\u3001\\(v\\)\uff0c \u6bcf\u4e00\u50cf\u7d20\u7684\u5750\u6807 \\((u, v)\\) \u5c31\u662f\u8be5\u50cf\u7d20\u5728\u6570\u7ec4\u4e2d\u7684\u884c\u548c\u5217\u3002\u4ee5\u50cf\u7d20\u4f5c\u4e3a\u5355\u4f4d\u7684\u5750\u6807\u7cfb\u5c31\u53eb\u505a\u50cf\u7d20\u5750\u6807\u7cfb\u3002</p>"}, {"location": "theory/CV/3d_vision/stereo/#_16", "title": "\u56fe\u50cf\u5750\u6807\u7cfb", "text": "<p>\u8981\u60f3\u77e5\u9053\u7269\u4f53\u5728\u4e09\u7ef4\u7a7a\u95f4\u7684\u5177\u4f53\u4f4d\u7f6e\uff0c\u5c31\u9700\u8981\u5efa\u7acb\u4e0e\u5b9e\u9645\u7269\u7406\u5355\u4f4d\u76f8\u5173\u7684\u5750\u6807\u7cfb\uff0c\u8fd9\u6837\u7684\u5750\u6807\u7cfb\u53eb\u505a\u56fe\u50cf\u5750\u6807\u7cfb\uff0c\u8be5\u5750\u6807\u7cfb\u4ee5\u56fe\u50cf\u5185\u67d0\u4e00\u70b9\u4f5c\u4e3a\u5750\u6807\u539f\u70b9\uff0c\u5176 \\(x\\) \u8f74\u548c \\(y\\) \u8f74\u5206\u522b\u4e0e\u50cf\u7d20\u5750\u6807\u7cfb\u7684 \\(u\\) \u8f74\uff0c\\(v\\) \u8f74\u5e73\u884c\u3002\u56fe\u50cf\u4e0a\u4efb\u610f\u4e00\u4e2a\u50cf\u7d20\u5728\u4e24\u4e2a\u5750\u6807\u7cfb\u7684\u6620\u5c04\u5173\u7cfb\u4e3a\uff1a</p> \\[ \\begin{cases} u=\\frac{x}{dx}+u_0 \\\\ v=\\frac{y}{dy}+v_0 \\end{cases} \\] <p>\u5176\u4e2d\uff0c \u5355\u4e2a\u50cf\u7d20\u5728 \\(x\\) \u8f74\u548c \\(y\\) \u8f74\u7684\u5b9e\u9645\u7269\u7406\u8ddd\u79bb\u4e3a \\(dx\\) \u548c \\(dy\\) \uff0c\u5c06\u4e0a\u5f0f\u8f6c\u6362\u6210\u9f50\u6b21\u65b9\u7a0b\u5f0f\u4e3a\uff1a</p> \\[ \\left[ \\begin{matrix}     u \\\\ v \\\\ 1 \\end{matrix} \\right] = \\left[ \\begin{matrix}     \\frac{1}{dx} &amp; 0 &amp; u_0 \\\\     0 &amp; \\frac{1}{dy} &amp; v_0 \\\\     0 &amp; 0 &amp; 1 \\end{matrix} \\right] \\left[ \\begin{matrix}     x \\\\ y \\\\ 1 \\end{matrix} \\right] \\]"}, {"location": "theory/CV/3d_vision/stereo/#_17", "title": "\u76f8\u673a\u5750\u6807\u7cfb", "text": "<p>\u56fe\u50cf\u5750\u6807\u7cfb\u867d\u5efa\u7acb\u8d77\u56fe\u50cf\u4e0e\u73b0\u5b9e\u4e16\u754c\u7684\u7269\u7406\u5173\u7cfb\uff0c\u4f46\u8fd9\u53ea\u662f\u4e8c\u7ef4\u5173\u7cfb\uff0c\u56e0\u6b64\uff0c\u9700\u8981\u5efa\u7acb\u4e0e\u4e09\u7ef4\u4e16\u754c\u76f8\u5173\u7684\u76f8\u673a\u5750\u6807\u7cfb\u3002\u56fe\u50cf\u5750\u6807\u7cfb\u662f\u76f8\u673a\u5750\u6807\u7cfb\u7684\u67d0\u4e00\u5e73\u9762\uff0c\u76f8\u673a\u5750\u6807\u7cfb\u7684 \\(x\\) \u8f74\u548c \\(y\\) \u8f74\u4e0e\u56fe\u50cf\u5750\u6807\u7cfb\u5bf9\u5e94\u8f74\u5e73\u884c \uff0c \u4e24\u4e2a\u5750\u6807\u7cfb\u95f4\u7684\u8ddd\u79bb\u5c31\u662f\u76f8\u673a\u7684\u7126\u8ddd \\(f\\) \u3002\u5176 \u4ee5\u76f8\u673a\u5149\u5fc3\u4e3a\u5750\u6807\u539f\u70b9 \uff0c \u5149\u8f74\u4e3a \\(z\\) \u8f74 \uff0c\u53ef\u4ee5\u7528 \\((\ud835\udc4bc, \ud835\udc4cc, \ud835\udc4dc )\\) \u6765\u8868\u793a\u3002</p>"}, {"location": "theory/CV/3d_vision/stereo/#_18", "title": "\u4e16\u754c\u5750\u6807\u7cfb", "text": "<p>\u76f8\u673a\u5750\u6807\u7cfb\u662f\u4ee5\u76f8\u673a\u4e3a\u4e2d\u5fc3\u7684\u63cf\u8ff0\u73b0\u5b9e\u4e16\u754c\u7684\u4e09\u7ef4\u5750\u6807\u7cfb\u3002\u5728\u73b0\u5b9e\u7a7a\u95f4\u4e2d\uff0c\u5b58\u5728\u65e0\u6570\u5750\u6807\u7cfb\u53ef\u4ee5\u63cf\u8ff0\u4e09\u7ef4\u7a7a\u95f4\uff0c\u4e3a\u4e86\u786e\u5b9a\u4e09\u7ef4\u7a7a\u95f4\u70b9\u7684\u5177\u4f53\u4f4d\u7f6e\uff0c\u9700\u8981\u786e\u5b9a\u552f\u4e00\u4e00\u4e2a\u57fa\u51c6\u5750\u6807\u7cfb\u6765\u8868\u8ff0\u7a7a\u95f4\uff0c\u8fd9\u5c31\u662f\u4e16\u754c\u5750\u6807\u7cfb\uff0c\u7528(\ud835\udc4bw, \ud835\udc4cw, \ud835\udc4dw)\u6765\u8868\u793a\u3002</p> \\[ \\left[ \\begin{matrix}     X_c \\\\ Y_c \\\\ Z_c \\\\ 1 \\end{matrix} \\right] = \\left[ \\begin{matrix}     \\mathbf{R} &amp; \\mathbf{t} \\\\     \\mathbf{0}^T &amp; 1 \\end{matrix} \\right] \\left[ \\begin{matrix}     X_w \\\\ Y_w \\\\ Z_w \\\\ 1 \\end{matrix} \\right] \\] <p>\u5176\u4e2d\uff0c R \u4e3a 3\u00d73 \u5355\u4f4d\u6b63\u4ea4\u77e9\u9635\uff0c\u8868\u793a\u4e86\u5750\u6807\u7cfb\u7684\u65cb\u8f6c\u64cd\u4f5c\uff1bt \u4e3a\u4e09\u7ef4\u5e73\u79fb\u5411\u91cf\uff0c\u4ee3\u8868\u4e86\u5750\u6807\u7cfb\u7684\u5e73\u79fb\u64cd\u4f5c\uff1b0 \u8868\u793a\u4e09\u7ef4\u96f6\u5411\u91cf \u3002</p>"}, {"location": "theory/CV/3d_vision/stereo/#_19", "title": "\u5750\u6807\u7cfb\u8f6c\u6362\u516c\u5f0f", "text": "\\[ \\begin{aligned} s\\left[ \\begin{matrix} u \\\\ v \\\\ 1 \\end{matrix} \\right] &amp; =  \\left[ \\begin{matrix}  \\frac{1}{dx} &amp; 0 &amp; u_0 \\\\ 0 &amp; \\frac{1}{dy} &amp; v_0 \\\\ 0 &amp; 0 &amp; 1 \\end{matrix} \\right] \\left[ \\begin{matrix}  f &amp; 0 &amp; 0 &amp; 0 \\\\  0 &amp; f &amp; 0 &amp; 0 \\\\  0 &amp; 0 &amp; 1 &amp; 0 \\end{matrix} \\right] \\left[ \\begin{matrix}  \\mathbf{R} &amp; \\mathbf{t} \\\\  \\mathbf{0}^T &amp; 1  \\end{matrix} \\right] \\left[ \\begin{matrix}  X_w \\\\ Y_w \\\\ Z_w \\\\ 1  \\end{matrix} \\right] \\\\ &amp; =  \\left[ \\begin{matrix}  \\alpha &amp; \\gamma &amp; u_0 &amp; 0 \\\\ 0 &amp; \\beta &amp; v_0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\\\ \\end{matrix} \\right] \\left[ \\begin{matrix}  \\mathbf{R} &amp; \\mathbf{t} \\\\  \\mathbf{0}^T &amp; 1  \\end{matrix} \\right] \\left[ \\begin{matrix}  X_w \\\\ Y_w \\\\ Z_w \\\\ 1  \\end{matrix} \\right] \\\\ &amp;= K\\left[R,\\mathbf{T}\\right]X \\end{aligned} \\] <p>\u5176\u4e2d \\(s\\) \u4e3a\u5c3a\u5ea6\u56e0\u5b50\uff0c\\(K\\) \u4e3a\u6444\u50cf\u673a\u5185\u53c2\u6570\uff0c\\(R\\) \u4e3a\u65cb\u8f6c\u77e9\u9635\uff0c\\(T\\) \u4e3a\u5e73\u79fb\u5411\u91cf \u3002</p>"}, {"location": "theory/CV/3d_vision/stereo/#_20", "title": "\u76f8\u673a\u7684\u7578\u53d8\u7cfb\u6570", "text": "<p>\u4e0a\u8ff0\u7684\u7ebf\u6027\u6a21\u578b\u5e76\u4e0d\u80fd\u51c6\u786e\u63cf\u8ff0\u7269\u4f53\u4e0e\u56fe\u50cf\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u8fd9\u662f\u56e0\u4e3a \u5149\u5b66\u955c\u5934\u5177\u6709\u900f\u89c6\u5931\u771f\uff0c\u4f1a\u5bfc\u81f4\u56fe\u50cf\u53d1\u751f\u504f\u5dee\uff0c\u8fd9\u662f\u955c\u5934\u7684\u56fa\u6709\u5c5e\u6027\u65e0\u6cd5\u6d88\u9664\u3002 \u4e3a\u4e86\u51cf\u5c11\u56fe\u50cf\u504f\u5dee\uff0c\u9700\u8981\u660e\u786e\u955c\u5934\u7684\u7578\u53d8\u7cfb\u6570\uff0c\u5bf9\u56fe\u50cf\u8fdb\u884c\u6821\u6b63\u3002\u5e38\u89c1\u7684\u7578\u53d8\u4e3b\u8981\u6709 \u5f84\u5411\u7578\u53d8 \u548c \u5207\u5411\u7578\u53d8 \u3002</p>"}, {"location": "theory/CV/3d_vision/stereo/#_21", "title": "\u5f84\u5411\u7578\u53d8", "text": "<p>\u5f84\u5411\u7578\u53d8\u662f\u6307\u56fe\u50cf\u50cf\u7d20\u4ee5\u7578\u53d8\u4e2d\u5fc3\u4e3a\u539f\u70b9\uff0c\u6cbf\u7740\u5f84\u5411\u4ea7\u751f\u4f4d\u7f6e\u504f\u5dee\uff0c\u4ece\u800c\u5bfc\u81f4\u56fe\u50cf\u5f62\u53d8\u3002\u5176\u5e38\u7528\u7578\u53d8\u539f\u70b9\u5468\u56f4\u7684\u6cf0\u52d2\u5c55\u5f00\u5f0f\u7684\u524d\u4e24\u9879 \\(k1\\) \u548c \\(k2\\) \u6765\u8868\u793a\uff0c\u5982\u679c\u7578\u53d8\u8f83\u5927\uff0c\u8fd8\u53ef\u4ee5\u589e\u52a0\u4f7f\u7528\u7b2c\u4e09\u9879 \\(k3\\) \u6765\u63cf\u8ff0\uff0c\u5e38\u7528\u7684\u63cf\u8ff0\u516c\u5f0f\u4e3a\uff1a</p> \\[ \\begin{cases} x_0=x(1+k_1r^2+k_2r^4+k_3r^6) \\\\ y_0=y(1+k_1r^2+k_2r^4+k_3r^6)  \\end{cases} \\] <p>\u5176\u4e2d\uff0c\\((x, y)\\) \u662f\u6821\u6b63\u540e\u50cf\u7d20\u70b9\u7684\u4f4d\u7f6e\uff1b\\((\ud835\udc65_0, \ud835\udc66_0)\\) \u662f\u539f\u56fe\u4e0a\u7684\u50cf\u7d20\u70b9\u4f4d\u7f6e\uff1b\\(r\\) \u662f\u5f84\u5411\u8ddd\u79bb\u3002</p>"}, {"location": "theory/CV/3d_vision/stereo/#_22", "title": "\u5207\u5411\u7578\u53d8", "text": "<p>\u5207\u5411\u7578\u53d8\u662f\u7531\u4e8e\u5728\u5b89\u88c5\u65f6\uff0c\u4ea7\u751f\u5b89\u88c5\u504f\u5dee\uff0c\u4f7f\u955c\u5934\u4e0d\u5b8c\u5168\u5e73\u884c\u4e8e\u955c\u5934\u5e73\u9762\u800c\u9020\u6210\u7684\u7578\u53d8\uff0c\u5176\u53ef\u4ee5\u4f7f\u7528 \\(p_1\\) \u548c \\(p_2\\) \u4e24\u4e2a\u53c2\u6570\u6765\u63cf\u8ff0\uff1a</p> \\[ \\begin{cases} x_0=x+[2p_1xy+p_2(r^2+2x^2)] \\\\ y_0=y+[2p_2xy+p_1(r^2+2y^2)]  \\end{cases} \\]"}, {"location": "theory/CV/3d_vision/stereo/#_23", "title": "\u7578\u53d8\u53c2\u6570", "text": "<p>\u8981\u6d88\u9664\u955c\u5934\u7578\u53d8\uff0c\u5c31\u662f\u8981\u540c\u65f6\u6d88\u9664\u5f84\u5411\u7578\u53d8\u548c\u5207\u5411\u7578\u53d8\uff0c\u6240\u4ee5\u8981\u77e5\u9053\u4ee5\u4e0b 5 \u4e2a\u7578\u53d8\u53c2\u6570\u7684\u503c\uff1a</p> \\[ \\text{Distortion\\ Coefficients} = (k_1,k_2,p_1,p_2,k_3) \\] <p>\u8fd9 5 \u4e2a\u53c2\u6570\u53ef\u4ee5\u5728\u76f8\u673a\u6807\u5b9a\u7684\u8fc7\u7a0b\u4e2d\u5f97\u5230\u3002\u660e\u786e\u8fd9 5 \u4e2a\u7578\u53d8\u7cfb\u6570 \u4ee5\u53ca \u76f8\u673a\u7684\u5185\u5916\u53c2\u6570\uff0c \u5c31\u53ef\u4ee5\u5b8c\u6210\u76f8\u673a\u7684\u6807\u5b9a\u4e86\u3002 #### \u76f8\u673a\u6807\u5b9a\u7684\u5206\u7c7b</p> <p>\u76f8\u673a\u7684\u6807\u5b9a\u662f \u6839\u636e\u50cf\u7d20\u5750\u6807\u7cfb\u4e0e\u4e16\u754c\u5750\u6807\u7cfb\u7684\u5173\u7cfb\uff0c\u5229\u7528\u4e00\u5b9a\u7684\u7ea6\u675f\u6761\u4ef6\uff0c\u6765\u6c42\u89e3\u76f8\u673a\u7684\u5185\u5916\u53c2\u6570\u4ee5\u53ca\u7578\u53d8\u7cfb\u6570\u7684\u8fc7\u7a0b\u3002 \u76f8\u673a\u6807\u5b9a\u65b9\u6cd5\u53ef\u5206\u4e3a\u4e24\u79cd\uff0c\u7b2c\u4e00\u79cd\u662f \u9700\u8981\u53c2\u7167\u7269 \u7684\u4f20\u7edf\u6807\u5b9a\u65b9\u6cd5\uff1b\u53e6\u4e00\u79cd\u5219\u662f \u4e0d\u9700\u53c2\u7167\u7269 \u7684\u76f8\u673a\u81ea\u6807\u5b9a\u6cd5\u3002</p> <p>\u4f20\u7edf\u7684\u6807\u5b9a\u65b9\u6cd5\u4e00\u822c\u4ee5\u68cb\u76d8\u683c\u4f5c\u4e3a\u53c2\u7167\u7269\uff0c\u5176\u4e2d\u6bcf\u4e2a\u68cb\u76d8\u683c\u7684\u5927\u5c0f\uff0c\u5c3a\u5bf8\u4ee5\u53ca\u68cb\u76d8\u683c\u7684\u6570\u91cf\u90fd\u662f\u5df2\u77e5\u7684\u3002\u6807\u5b9a\u8fc7\u7a0b\u5c31\u662f\uff0c \u5c06\u68cb\u76d8\u683c\u7684\u9876\u70b9\u4e0e\u56fe\u50cf\u4e0a\u7684\u5bf9\u5e94\u70b9\u5efa\u7acb\u5bf9\u5e94\u5173\u7cfb\uff0c\u5229\u7528\u68cb\u76d8\u683c\u7684\u5df2\u77e5\u4fe1\u606f\u6765\u6c42\u5f97\u76f8\u673a\u6a21\u578b\u7684\u5185\u5916\u53c2\u6570\u548c\u7578\u53d8\u7cfb\u6570\u3002 \u8fd9\u79cd\u6807\u5b9a\u65b9\u6cd5\u901a\u5e38\u6709\u5f20\u6b63\u53cb\u6807\u5b9a\u6cd5\u548c Tasi \u4e24\u6b65\u6807\u5b9a\u6cd5\u7b49\u3002\u8fd9\u79cd\u65b9\u6cd5\u5bb9\u6613\u53d7\u5230\u6807\u5b9a\u7269\u7684\u5236\u4f5c\u7cbe\u5ea6\u7684\u5f71\u54cd\uff0c\u4f46 \u7cbe\u5ea6\u4ecd\u6bd4\u53e6\u4e00\u79cd\u65b9\u6cd5\u9ad8 \u3002</p> <p>\u76f8\u673a\u81ea\u6807\u5b9a\u6cd5\u662f\u4e0d\u9700\u8981\u53c2\u7167\u7269\u7684\uff0c\u901a\u5e38\u6709 \u57fa\u4e8e Kruppa \u65b9\u7a0b\u7684\u6807\u5b9a\u6cd5 \u7b49\u3002\u5176\u6839\u636e\u591a\u89c6\u56fe\u7ea6\u675f\u51e0\u4f55\u65b9\u7a0b\uff0c\u5728\u4e0d\u540c\u4f4d\u7f6e\u91c7\u96c6\u591a\u5e45\u540c\u573a\u666f\u7684\u56fe\u50cf\uff0c\u901a\u8fc7\u76f8\u673a\u7684\u7ea6\u675f\u4fe1\u606f\u4ee5\u53ca\u5bf9 \u5e94\u70b9\u7684\u51e0\u4f55\u4fe1\u606f\u6765\u5b8c\u6210\u76f8\u673a\u53c2\u6570\u7684\u8ba1\u7b97\u3002\u5176\u6700\u5927\u4f18\u70b9\u5c31\u662f\u4e0d\u9700\u8981\u5236\u4f5c\u6807\u5b9a\u53c2\u8003\u7269\uff0c\u6bd4\u8f83\u7075\u6d3b\uff1b\u4f46\u7531\u4e8e\u7f3a\u5c11\u6807\u5b9a\u7269\uff0c\u9c81\u68d2\u6027\u548c\u7cbe\u5ea6\u90fd\u6709\u6240\u6b20\u7f3a\u3002</p>"}, {"location": "theory/CV/3d_vision/stereo/#_24", "title": "\u5f20\u6b63\u53cb\u6807\u5b9a\u6cd5", "text": "<p>\u201d\u5f20\u6b63\u53cb\u6807\u5b9a\u201d\u662f\u6307\u5f20\u6b63\u53cb\u6559\u63881998\u5e74\u63d0\u51fa\u7684\u5355\u5e73\u9762\u68cb\u76d8\u683c\u7684\u6444\u50cf\u673a\u6807\u5b9a\u65b9\u6cd5\u3002\u6587\u4e2d\u63d0\u51fa\u7684\u65b9\u6cd5\u4ecb\u4e8e\u4f20\u7edf\u6807\u5b9a\u6cd5\u548c\u81ea\u6807\u5b9a\u6cd5\u4e4b\u95f4\uff0c\u4f46\u514b\u670d\u4e86\u4f20\u7edf\u6807\u5b9a\u6cd5\u9700\u8981\u7684\u9ad8\u7cbe\u5ea6\u6807\u5b9a\u7269\u7684\u7f3a\u70b9\uff0c\u800c\u4ec5\u9700\u4f7f\u7528\u4e00\u4e2a\u6253\u5370\u51fa\u6765\u7684\u68cb\u76d8\u683c\u5c31\u53ef\u4ee5\u3002\u540c\u65f6\u4e5f\u76f8\u5bf9\u4e8e\u81ea\u6807\u5b9a\u800c\u8a00\uff0c\u63d0\u9ad8\u4e86\u7cbe\u5ea6\uff0c\u4fbf\u4e8e\u64cd\u4f5c\u3002\u56e0\u6b64\u5f20\u6c0f\u6807\u5b9a\u6cd5\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u8ba1\u7b97\u673a\u89c6\u89c9\u65b9\u9762\u3002</p> <p>\u5f20\u6b63\u53cb\u6807\u5b9a\u6cd5\u7684\u57fa\u672c\u6b65\u9aa4\u662f\uff1a</p> <ol> <li>\u5728\u4e0d\u540c\u89d2\u5ea6\u4e0b\uff0c\u5bf9\u6807\u5b9a\u53c2\u8003\u7269\uff08\u68cb\u76d8\u683c\uff09\u8fdb\u884c\u62cd\u6444\uff1b</li> <li>\u7136\u540e\u63d0\u53d6\u51fa\u68cb\u76d8\u683c\u7684\u9876\u70b9\uff1b</li> <li>\u63a5\u7740\u89e3\u6790\u51fa\u76f8\u673a\u7684\u7578\u53d8\u7cfb\u6570\u548c\u5185\u5916\u53c2\u6570\uff1b</li> <li>\u6700\u540e\u518d\u6839\u636e\u6781\u5927\u4f3c\u7136\u4f30\u8ba1\uff0c\u5bf9\u53c2\u6570\u8fdb\u884c\u4f18\u5316\u3002</li> </ol>"}, {"location": "theory/CV/3d_vision/stereo/#h", "title": "\u8ba1\u7b97\u5355\u5e94\u6027\u77e9\u9635 H", "text": "<p>\u6839\u636e\u524d\u6587\u63a8\u51fa\u7684\u5750\u6807\u8f6c\u6362\u516c\u5f0f\u53ef\u77e5\uff0c\u8bbe\u4e09\u7ef4\u4e16\u754c\u5750\u6807\u7684\u70b9\u4e3a\\(X=[X,Y,Z,1]^T\\)\uff0c\u4e8c\u7ef4\u76f8\u673a\u5e73\u9762\u50cf\u7d20\u5750\u6807\u4e3a\\(=M[u,v,1]^T\\)\uff0c\u6240\u4ee5\u6807\u5b9a\u7528\u7684\u68cb\u76d8\u683c\u5e73\u9762\u5230\u56fe\u50cf\u5e73\u9762\u7684\u5355\u5e94\u6027\u5173\u7cfb\u4e3a\uff1a</p> \\[ sM=K[R,T]X \\] <p>\u5176\u4e2d \\(s\\) \u4e3a\u5c3a\u5ea6\u56e0\u5b50\uff0c\\(K\\) \u4e3a\u6444\u50cf\u673a\u5185\u53c2\u6570\uff0c\\(R\\) \u4e3a\u65cb\u8f6c\u77e9\u9635\uff0c\\(T\\) \u4e3a\u5e73\u79fb\u5411\u91cf \u3002\u4ee4</p> \\[ K=\\left[ \\begin{matrix} \\alpha &amp; \\gamma &amp; u_0 \\\\ 0 &amp; \\beta &amp; v_0 \\\\ 0 &amp; 0 &amp; 1 \\end{matrix} \\right]\u3002 \\] <p>\u6ce8\u610f\uff0c\\(s\\) \u5bf9\u4e8e\u9f50\u6b21\u5750\u6807\u6765\u8bf4\uff0c\u4e0d\u4f1a\u6539\u53d8\u9f50\u6b21\u5750\u6807\u503c\u3002\u5f20\u6c0f\u6807\u5b9a\u6cd5\u4e2d\uff0c\u5c06\u4e16\u754c\u5750\u6807\u7cfb\u5b9a\u4e49\u5728\u68cb\u76d8\u683c\u5e73\u9762\u4e0a\uff0c\u4ee4\u68cb\u76d8\u683c\u5e73\u9762\u4e3a \\(Z=0\\) \u7684\u5e73\u9762\u3002\u5219\u53ef\u5f97</p> \\[ s\\left[\\begin{matrix}u \\\\ v \\\\ 1 \\end{matrix}\\right]  = K\\left[\\begin{matrix}\\mathbf{r_1} &amp; \\mathbf{r_2} &amp; \\mathbf{r_3} &amp; \\mathbf{t} \\end{matrix}\\right]\\left[\\begin{matrix}x \\\\ y \\\\ 0 \\\\ 1 \\end{matrix}\\right] = K\\left[\\begin{matrix}\\mathbf{r_1} &amp; \\mathbf{r_2} &amp; \\mathbf{t} \\end{matrix}\\right]\\left[\\begin{matrix}x \\\\ y \\\\ 1 \\end{matrix}\\right] \\] <p>\u6211\u4eec\u628a \\(K[r1,\\ r2,\\ t]\\) \u53eb\u505a \u5355\u5e94\u6027\u77e9\u9635 H \uff0c\u5373</p> \\[ H=[h_1\\ h_2\\ h_3] = \\lambda K[r_1\\ r_2\\ t] \\] <p>\\(H\\) \u662f\u4e00\u4e2a\u9f50\u6b21\u77e9\u9635\uff0c\u6240\u4ee5\u67098\u4e2a\u672a\u77e5\u6570\uff0c\u81f3\u5c11\u9700\u89818\u4e2a\u65b9\u7a0b\uff0c\u6bcf\u5bf9\u5bf9\u5e94\u70b9\u80fd\u63d0\u4f9b\u4e24\u4e2a\u65b9\u7a0b\uff0c\u6240\u4ee5\u81f3\u5c11\u9700\u8981\u56db\u4e2a\u5bf9\u5e94\u70b9\uff0c\u5c31\u53ef\u4ee5\u7b97\u51fa\u4e16\u754c\u5e73\u9762\u5230\u56fe\u50cf\u5e73\u9762\u7684\u5355\u5e94\u6027\u77e9\u9635 \\(H\\)\u3002</p>"}, {"location": "theory/CV/3d_vision/stereo/#_25", "title": "\u8ba1\u7b97\u5185\u53c2\u6570\u77e9\u9635", "text": "<p>\u7531\u4e0a\u5f0f\u53ef\u5f97</p> \\[ \\lambda = \\frac{1}{s} \\\\ r_1=\\frac{1}{\\lambda}K^{-1}h_1   \\\\ r_2=\\frac{1}{\\lambda}K^{-1}h_2 \\] <p>\u7531\u4e8e\u65cb\u8f6c\u77e9\u9635\u662f\u4e2a\u9149\u77e9\u9635\uff0c\\(r_1\\) \u548c \\(r_2\\) \u6b63\u4ea4\uff0c\u53ef\u5f97 \u7ea6\u675f\u6761\u4ef6 \uff1a</p> \\[ \\begin{aligned} r_1^Tr_2=0 &amp; \\iff h_1^TK^{-T}K^{-1}h_2=0\\\\ ||r_1||=||r_2||=1 &amp; \\iff h_1^TK^{-T}K^{-1}h_1 = h_2^TK^{-T}K^{-1}h_2 \\end{aligned} \\] <p>\u5373 \u6bcf\u4e2a\u5355\u5e94\u6027\u77e9\u9635\u80fd\u63d0\u4f9b\u4e24\u4e2a\u65b9\u7a0b\uff0c\u800c\u5185\u53c2\u6570\u77e9\u9635\u5305\u542b5\u4e2a\u53c2\u6570\uff0c\u8981\u6c42\u89e3\uff0c\u81f3\u5c11\u9700\u89813\u4e2a\u5355\u5e94\u6027\u77e9\u9635 \u3002\u4e3a\u4e86\u5f97\u5230\u4e09\u4e2a\u4e0d\u540c\u7684\u5355\u5e94\u6027\u77e9\u9635\uff0c\u6211\u4eec\u4f7f\u7528\u81f3\u5c11\u4e09\u5e45\u68cb\u76d8\u683c\u5e73\u9762\u7684\u56fe\u7247\u8fdb\u884c\u6807\u5b9a\uff0c\u901a\u8fc7\u6539\u53d8\u76f8\u673a\u4e0e\u6807\u5b9a\u677f\u4e4b\u95f4\u7684\u76f8\u5bf9\u4f4d\u7f6e\u6765\u5f97\u5230\u4e09\u4e2a\u4e0d\u540c\u7684\u56fe\u7247\u3002</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u8ba1\u7b97\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a</p> \\[ B=K^{-T}K^{-1}= \\left[ \\begin{array}{ccc} B_{11} &amp; B_{12} &amp; B_{13} \\\\ B_{21} &amp; B_{22} &amp; B_{23} \\\\ B_{31} &amp; B_{32} &amp; B_{33} \\end{array} \\right]= \\left[ \\begin{array}{ccc} \\frac{1}{\\alpha^2} &amp; -\\frac{\\gamma}{\\alpha^2\\beta} &amp; \\frac{v_0\\gamma-u_0\\beta}{\\alpha^2\\beta} \\\\ -\\frac{\\gamma}{\\alpha^2\\beta} &amp; \\frac{\\gamma^2}{\\alpha^2\\beta^2}+\\frac{1}{\\beta^2} &amp; -\\frac{\\gamma(v_0\\gamma-u_0\\beta)}{\\alpha^2\\beta^2}-\\frac{v_0}{\\beta^2} \\\\ \\frac{v_0\\gamma-u_0\\beta}{\\alpha^2\\beta} &amp; -\\frac{\\gamma(v_0\\gamma-u_0\\beta)}{\\alpha^2\\beta^2}-\\frac{v_0}{\\beta^2} &amp; \\frac{(v_0\\gamma-u_0\\beta)^2}{\\alpha^2\\beta^2}+\\frac{v_0}{\\beta^2}+1 \\end{array} \\right] \\] <p>\u53ef\u4ee5\u770b\u5230\uff0c\\(B\\) \u662f\u4e00\u4e2a\u5bf9\u79f0\u9635\uff0c\u6240\u4ee5 \\(B\\) \u7684\u6709\u6548\u5143\u7d20\u4e3a\u516d\u4e2a\uff0c\u8ba9\u8fd9\u516d\u4e2a\u5143\u7d20\u5199\u6210\u5411\u91cf \\(\\mathbf{b}\\)\uff0c\u5373</p> \\[ \\mathbf{b}=\\left[ \\begin{array}{cccccc} B_{11} &amp; B_{12} &amp; B_{22} &amp; B_{13} &amp; B_{23} &amp; B_{33} \\end{array} \\right]^T \\] <p>\u53ef\u4ee5\u63a8\u5bfc\u5f97\u5230\uff08\u5f15\u5165\u4e86 \\(v_{ij}\\) \u9879\u4f5c\u5316\u7b80\uff09\uff1a</p> \\[ h_i^TBh_j = v^T_{ij} \\mathbf{b} \\\\ v_{ij}=\\left[ \\begin{array}{cccccc} h_{i1}h_{j1} &amp; h_{i1}h_{j2}+h_{i2}h_{j1} &amp; h_{i2}h_{j2} &amp; h_{i3}h_{j1}+h_{i1}h_{j3} &amp; h_{i3}h_{j2}+h_{i2}h_{j3} &amp; h_{i3}h_{j3} \\end{array} \\right]^T \\] <p>\u5229\u7528 \u7ea6\u675f\u6761\u4ef6 \u53ef\u4ee5\u5f97\u5230\uff1a</p> \\[ \\left[ \\begin{array}{c} v^T_{12} \\\\ (v_{11}-v_{22})^T \\end{array} \\right] \\mathbf{b}=0 \\] <p>\u901a\u8fc7\u4e0a\u5f0f\uff0c\u6211\u4eec\u81f3\u5c11\u9700\u8981\u4e09\u5e45\u5305\u542b\u68cb\u76d8\u683c\u7684\u56fe\u50cf\uff0c\u53ef\u4ee5\u8ba1\u7b97\u5f97\u5230 \\(B\\) \uff0c\u7136\u540e\u901a\u8fc7 Cholesky\u5206\u89e3 \uff0c \u5f97\u5230\u76f8\u673a\u7684\u5185\u53c2\u6570\u77e9\u9635 \\(K\\) \u3002 ##### \u8ba1\u7b97\u5916\u53c2\u6570\u77e9\u9635</p> <p>\u7531\u4e4b\u524d\u7684\u63a8\u5bfc\uff0c\u53ef\u5f97</p> \\[ \\begin{cases} &amp;\\lambda = \\frac{1}{s}=\\frac{1}{\\|A^{-1}h_1\\|}=\\frac{1}{\\|A^{-1}h_2\\|} \\\\ &amp;r_1 =\\frac{1}{\\lambda}K^{-1}h_1   \\\\ &amp;r_2 =\\frac{1}{\\lambda}K^{-1}h_2   \\\\ &amp;r_3 = r_1 \\times r_2 \\\\ &amp;t=\\lambda K^{-1}h_3 \\end{cases} \\]"}, {"location": "theory/CV/3d_vision/stereo/#_26", "title": "\u6781\u5927\u4f3c\u7136\u4f30\u8ba1", "text": "<p>\u4e0a\u8ff0\u7684\u63a8\u5bfc\u7ed3\u679c\u662f\u57fa\u4e8e\u7406\u60f3\u60c5\u51b5\u4e0b\u7684\u89e3\uff0c\u4f46\u7531\u4e8e\u53ef\u80fd\u5b58\u5728\u9ad8\u65af\u566a\u58f0\uff0c\u6240\u4ee5\u4f7f\u7528\u6700\u5927\u4f3c\u7136\u4f30\u8ba1\u8fdb\u884c\u4f18\u5316\u3002\u8bbe\u6211\u4eec\u91c7\u96c6\u4e86 \\(n\\) \u526f\u5305\u542b\u68cb\u76d8\u683c\u7684\u56fe\u50cf\u8fdb\u884c\u5b9a\u6807\uff0c\u6bcf\u4e2a\u56fe\u50cf\u91cc\u6709\u68cb\u76d8\u683c\u89d2\u70b9 \\(m\\) \u4e2a\u3002\u4ee4\u7b2c \\(i\\) \u526f\u56fe\u50cf\u4e0a\u7684\u89d2\u70b9 \\(M_{ij}\\) \u5728\u4e0a\u8ff0\u8ba1\u7b97\u5f97\u5230\u7684\u6444\u50cf\u673a\u77e9\u9635\u4e0b\u56fe\u50cf\u4e0a\u7684\u6295\u5f71\u70b9\u4e3a\uff1a</p> \\[ \\hat{m}(K,R_i,t_i,M_{ij}) = K[R|t]M_{ij} \\] <p>\u5176\u4e2d \\(R_i\\) \u548c \\(t_i\\) \u662f\u7b2c \\(i\\) \u526f\u56fe\u5bf9\u5e94\u7684\u65cb\u8f6c\u77e9\u9635\u548c\u5e73\u79fb\u5411\u91cf\uff0c\\(K\\) \u662f\u5185\u53c2\u6570\u77e9\u9635\u3002\u5219\u89d2\u70b9 \\(m_{ij}\\) \u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\uff1a</p> \\[ f(m_{ij})=\\frac{1}{\\sqrt{2\\pi}}e^{\\frac{-(\\hat{m}(K,R_i,t_i,M_{ij})-m_{ij})^2}{\\sigma^2}} \\] <p>\u6784\u9020\u4f3c\u7136\u51fd\u6570\uff1a</p> \\[ L(A,R_i,t_i,M_{ij}) = \\prod^{n,m}_{i=1,j=1}f(m_{ij})=\\frac{1}{\\sqrt{2\\pi}}e^{\\frac{-\\sum^n_{i=1}\\sum^m_{j=1}(\\hat{m}(K,R_i,t_i,M_{ij})-m_{ij})^2}{\\sigma^2}} \\] <p>\u8ba9 \\(L\\) \u53d6\u5f97\u6700\u5927\u503c\uff0c\u5373\u8ba9\u4e0b\u9762\u5f0f\u5b50\u6700\u5c0f\u3002\u8fd9\u91cc\u4f7f\u7528\u7684\u662f\u591a\u53c2\u6570\u975e\u7ebf\u6027\u7cfb\u7edf\u4f18\u5316\u95ee\u9898\u7684 Levenberg-Marquardt \u7b97\u6cd5 \u8fdb\u884c\u8fed\u4ee3\u6c42\u6700\u4f18\u89e3\u3002</p> \\[ \\sum^n_{i=1}\\sum^m_{j=1} \\| \\hat{m}(K,R_i,t_i,M_{ij})-m_{ij} \\|^2 \\]"}, {"location": "theory/CV/3d_vision/stereo/#_27", "title": "\u5f84\u5411\u7578\u53d8\u4f30\u8ba1", "text": "<p>\u5f20\u6c0f\u6807\u5b9a\u6cd5\u53ea\u5173\u6ce8\u4e86\u5f71\u54cd\u6700\u5927\u7684\u5f84\u5411\u7578\u53d8\uff0c\u6570\u5b66\u8868\u8fbe\u5f0f\u4e3a\uff1a</p> \\[ \\hat u = u + (u-u_0)[k_1(x^2+y^2)+k_2(x^2+y^2)^2] \\\\ \\hat v = v + (v-v_0)[k_1(x^2+y^2)+k_2(x^2+y^2)^2] \\] <p>\u5176\u4e2d\uff0c\\((u,v)\\) \u662f\u7406\u60f3\u65e0\u7578\u53d8\u7684\u50cf\u7d20\u5750\u6807\uff0c\\((\\hat{u},\\hat{v})\\) \u662f\u5b9e\u9645\u7578\u53d8\u540e\u7684\u50cf\u7d20\u5750\u6807\u3002\\((u_0,v_0)\\) \u4ee3\u8868\u4e3b\u70b9\uff0c\\((x,y)\\) \u662f\u7406\u60f3\u65e0\u7578\u53d8\u7684\u8fde\u7eed\u56fe\u50cf\u5750\u6807\uff0c \\((\\hat{x},\\hat{y})\\) \u662f\u5b9e\u9645\u7578\u53d8\u540e\u7684\u8fde\u7eed\u56fe\u50cf\u5750\u6807\uff0c\\(k_1\\) \u548c \\(k_2\\) \u4e3a\u524d\u4e24\u9636\u7684\u7578\u53d8\u53c2\u6570\u3002\u7531\u524d\u4e00\u5c0f\u8282\uff0c\\((\\hat{u},\\hat{v})\\) \u53ef\u901a\u8fc7\u4e0b\u5f0f\u6c42\u51fa</p> \\[ \\hat u = u_0 + \\alpha \\hat x + \\gamma \\hat y \\\\ \\hat v = v_0 + \\beta \\hat y \\] <p>\u5c06\u5f84\u5411\u7578\u53d8\u7684\u6570\u5b66\u8868\u8fbe\u5f0f\u5316\u6210\u77e9\u9635\u5f62\u5f0f\uff1a</p> \\[ \\left[ \\begin{array}{cc} (u-u_0)(x^2+y^2) &amp; (u-u_0)(x^2+y^2)^2 \\\\  (v-v_0)(x^2+y^2) &amp; (v-v_0)(x^2+y^2)^2 \\end{array} \\right] \\left[ \\begin{array}{c} k_1 \\\\ k_2 \\end{array} \\right]= \\left[ \\begin{array}{c} \\hat u -u \\\\ \\hat v -v \\end{array} \\right] \\] <p>\u8bb0\u4f5c</p> \\[ D\\mathbf{k}=\\mathbf{d} \\] <p>\u5219\u53ef\u5f97</p> \\[ \\mathbf{k}=[k_1\\ k_2]^T = (D^TD)^{-1}D^T\\mathbf{d} \\] <p>\u6839\u636e\u4e0a\u5f0f\uff0c\u8ba1\u7b97\u5f97\u5230\u7578\u53d8\u7cfb\u6570 \\(k\\) \u3002</p> <p>\u4f7f\u7528\u6700\u5927\u4f3c\u7136\u7684\u601d\u60f3\u4f18\u5316\u5f97\u5230\u7684\u7ed3\u679c\uff0c\u5373\u50cf\u4e0a\u4e00\u6b65\u4e00\u6837\uff0c\u4f7f\u7528LM\u6cd5\u8ba1\u7b97\u4f7f\u4e0b\u5217\u51fd\u6570\u503c\u6700\u5c0f\u7684\u53c2\u6570\u503c\uff1a</p> \\[ \\sum^n_{i=1}\\sum^m_{j=1} \\| \\hat{m}(K,k_1,k_2,R_i,t_i,M_{ij})-m_{ij} \\|^2 \\] <p>\u5230\u6b64\uff0c\u5f20\u6b63\u53cb\u6807\u5b9a\u6cd5\u4ecb\u7ecd\u5b8c\u6bd5\u3002\u6211\u4eec\u4e5f\u5f97\u5230\u4e86\u76f8\u673a\u5185\u53c2\u3001\u5916\u53c2\u548c\u7578\u53d8\u7cfb\u6570\u3002</p>"}, {"location": "theory/CV/3d_vision/stereo/#_28", "title": "\u53cc\u76ee\u76f8\u673a\u7684\u6807\u5b9a", "text": "<p>\u5bf9\u4e8e\u53cc\u76ee\u89c6\u89c9\u7cfb\u7edf\uff0c \u4e0d\u4ec5\u8981\u5bf9\u6bcf\u4e2a\u76f8\u673a\u8fdb\u884c\u6807\u5b9a\uff0c\u540c\u65f6\u8fd8\u8981\u660e\u786e\u76f8\u673a\u95f4\u7684\u76f8\u4e92\u5173\u7cfb\uff0c\u56e0\u6b64\u8fd8\u8981\u5bf9\u53cc\u76ee\u76f8\u673a\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u6807\u5b9a\uff0c\u5373\u6c42\u53d6\u76f8\u673a\u95f4\u7684\u65cb\u8f6c\u77e9\u9635\u548c\u5e73\u79fb\u5411\u91cf\u3002 \u9996\u5148\uff0c\u6839\u636e\u524d\u9762\u7684\u65b9\u6cd5\u5f97\u5230\u6bcf\u4e2a\u76f8\u673a\u7684\u5916\u53c2\uff1a</p> \\[ x_{left}=R_{left}X_w+t_{left} \\\\ x_{right}=R_{right}X_w+t_{right} \\] <p>\u53c8\u56e0\u4e3a\u53cc\u76ee\u89c6\u89c9\u7cfb\u7edf\u7684\u5de6\u53f3\u4e24\u4e2a\u76f8\u673a\u6ee1\u8db3\u4e0b\u5217\u5173\u7cfb\u5f0f\uff1a</p> \\[ x_{right}=R\\cdot x_{left}+t \\] <p>\u53ef\u4ee5\u63a8\u51fa\uff1a</p> \\[ R=R_{right}R_{left}^{-1} \\\\ t=r_{right}-R\\cdot t_{left} \\] <p>\u6839\u636e\u4e0a\u5f0f\u5373\u53ef\u8ba1\u7b97\u5f97\u5230\u5de6\u53f3\u76f8\u673a\u95f4\u7684\u65cb\u8f6c\u77e9\u9635 \\(R\\) \u548c \u5e73\u79fb\u5411\u91cf \\(t\\) \u3002\u5373 \u53ea\u9700\u8981\u77e5\u9053\u6bcf\u4e2a\u76f8\u673a\u7684\u5916\u53c2\u6570\uff0c\u5c31\u53ef\u4ee5\u6c42\u5f97\u53cc\u76ee\u76f8\u673a\u7684\u65cb\u8f6c\u77e9\u9635\u548c\u5e73\u79fb\u5411\u91cf\u3002 ------</p>"}, {"location": "theory/CV/3d_vision/stereo/#_29", "title": "\u56fe\u50cf\u5339\u914d", "text": "<p>\u524d\u6587\u8bb2\u5230\uff0c\u5bf9\u4e8e\u5de6\u56fe\u7684\u4efb\u4e00\u4e2a\u70b9\uff0c\u6cbf\u7740\u5b83\u5728\u53f3\u56fe\u4e2d\u6c34\u5e73\u6781\u7ebf\u65b9\u5411\u5bfb\u627e\u548c\u5b83\u6700\u5339\u914d\u7684\u50cf\u7d20\u70b9\u3002\u4f46\u5728\u5b9e\u9645\u8fdb\u884c\u50cf\u7d20\u70b9\u5339\u914d\u7684\u65f6\u5019\uff0c\u60c5\u51b5\u5f80\u5f80\u66f4\u52a0\u590d\u6742\uff0c\u6bd4\u5982\uff1a</p> <ol> <li>\u5b9e\u9645\u4e0a\u8981\u4fdd\u8bc1\u4e24\u4e2a\u76f8\u673a\u5b8c\u5168\u5171\u9762\u4e14\u53c2\u6570\u4e00\u81f4\u662f\u975e\u5e38\u56f0\u96be\u7684\uff0c\u800c\u4e14\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u4e5f\u4f1a\u4ea7\u751f\u8bef\u5dee\u7d2f\u79ef\uff0c\u56e0\u6b64\u5bf9\u4e8e\u5de6\u56fe\u7684\u4e00\u4e2a\u70b9\uff0c\u5176\u5728\u53f3\u56fe\u7684\u5bf9\u5e94\u70b9\u4e0d\u4e00\u5b9a\u6070\u597d\u5728\u6781\u7ebf\u4e0a\uff0c\u800c\u662f\u5728\u6781\u7ebf\u9644\u8fd1\uff0c\u6240\u4ee5\u641c\u7d22\u8303\u56f4\u9700\u8981\u9002\u5f53\u653e\u5bbd\u3002</li> <li>\u5355\u4e2a\u50cf\u7d20\u70b9\u8fdb\u884c\u6bd4\u8f83\u9c81\u68d2\u6027\u5f88\u5dee\uff0c\u5f88\u5bb9\u6613\u53d7\u5230\u5149\u7167\u53d8\u5316\u548c\u89c6\u89d2\u4e0d\u540c\u7684\u5f71\u54cd\u3002</li> </ol>"}, {"location": "theory/CV/3d_vision/stereo/#_30", "title": "\u7acb\u4f53\u5339\u914d\u7684\u57fa\u672c\u7ea6\u675f\u6761\u4ef6", "text": "<ul> <li>(1) \u6781\u7ebf\u7ea6\u675f\u3002 \u6781\u7ebf\u7ea6\u675f\u662f\u6700\u5e38\u7528\u7684\u7ea6\u675f\u6761\u4ef6\u3002 \u6781\u7ebf\u7ea6\u675f\u662f\u6307\u5728\u5de6\u56fe\u50cf\u4e2d\u7684\u4e00\u70b9\uff0c\u5b83\u5728\u53f3\u56fe\u50cf\u4e0a\u7684 \u5bf9\u5e94\u5339\u914d\u70b9\u5fc5\u5b9a\u5728\u67d0\u4e00\u6761\u76f4\u7ebf\u4e0a\uff0c\u8fd9\u6761\u76f4\u7ebf\u5c31\u662f\u6781\u7ebf \u3002\u4f7f\u7528\u6781\u7ebf\u7ea6\u675f\u5c31\u53ef\u4ee5\u8ba9\u56fe\u50cf\u7684\u641c\u7d22\u8303\u56f4\u7531\u4e8c\u7ef4\u4e0b\u964d\u81f3\u4e00\u7ef4\uff0c\u53ea\u9700\u8981\u5728\u4e00\u6761\u76f4\u7ebf\u4e0a\u8fdb\u884c\u641c\u7d22\uff0c\u8fd9\u5c31\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u641c\u7d22\u7684\u590d\u6742\u5ea6\uff0c\u5e76\u63d0\u9ad8\u4e86\u5339\u914d\u7684\u7cbe\u5ea6\u3002 </li> <li>(2) \u76f8\u4f3c\u6027\u7ea6\u675f\u3002 \u5728\u8fdb\u884c\u7acb\u4f53\u5339\u914d\u65f6\uff0c\u70b9\u3001\u7ebf\u3001\u5757\u7b49\u5143\u7d20\u4e00\u5b9a\u5177\u6709\u76f8\u540c\u6216\u76f8\u4f3c\u7684\u5c5e\u6027\u3002 </li> <li>(3) \u552f\u4e00\u6027\u7ea6\u675f\u3002 \u5bf9\u4e8e\u5f85\u5339\u914d\u56fe\u50cf\uff0c\u5728\u539f\u56fe\u50cf\u4e2d\u81f3\u591a\u5bf9\u5e94\u4e00\u4e2a\u70b9\u3002\u4e00\u5e45\u56fe\u50cf\u4e0a\u7684\u6bcf\u4e2a\u70b9\u53ea\u80fd\u4e0e\u53e6\u4e00\u5e45 \u56fe\u50cf\u4e0a\u7684\u552f\u4e00\u4e00\u4e2a\u70b9\u4e00\u4e00\u5bf9\u5e94\uff0c\u8fd9\u6837 \u56fe\u50cf\u4e0a\u7684\u70b9\u81f3\u591a\u6709\u4e00\u4e2a\u89c6\u5dee\u503c \u3002 </li> <li>(4) \u5de6\u53f3\u4e00\u81f4\u6027\u7ea6\u675f\u3002 \u82e5\u5de6\u56fe\u50cf\u4e0a\u7684\u4e00\u70b9 P\uff0c\u5176\u5728\u53f3\u56fe\u50cf\u4e0a\u7684\u5bf9\u5e94\u70b9\u4e3a Q\uff0c\u5219\u53f3\u56fe\u50cf\u4e0a\u7684\u70b9 Q \u5728\u5de6\u56fe\u50cf\u4e0a\u7684\u5bf9\u5e94\u70b9\u5e94\u8be5\u662f\u70b9 P\uff0c\u5982\u679c\u8fd9\u4e24\u70b9\u4e0d\u662f\u4e00\u4e00\u5bf9\u5e94\u7684\uff0c\u5219\u5339\u914d\u4f1a\u4e0d\u6ee1\u8db3\u552f\u4e00\u6027\u6761\u4ef6\uff0c\u8bf4\u660e\u5339\u914d\u5931\u8d25\u3002</li> </ul> <p>\u5728\u8fdb\u884c\u7acb\u4f53\u5339\u914d\u65f6\uff0c \u8fd0\u7528\u57fa\u672c\u7ea6\u675f\u6761\u4ef6\u5bf9\u5339\u914d\u7ed3\u679c\u8fdb\u884c\u68c0\u9a8c\uff0c\u53ef\u4ee5\u6709\u6548\u6392\u9664\u5f88\u591a\u8bef\u5339\u914d\u7684\u70b9\uff0c\u51cf\u5c0f\u641c\u7d22\u8303\u56f4\uff0c\u964d\u4f4e\u7acb\u4f53\u5339\u914d\u8ba1\u7b97\u7684\u590d\u6742\u5ea6\uff0c\u63d0\u9ad8\u7acb\u4f53\u5339\u914d\u7684\u901f\u5ea6\u548c\u7cbe\u5ea6\uff0c \u83b7\u5f97\u6700\u597d\u7684\u5339\u914d\u6548\u679c\u3002 </p>"}, {"location": "theory/CV/3d_vision/stereo/#_31", "title": "\u57fa\u4e8e\u6ed1\u52a8\u7a97\u53e3\u7684\u56fe\u50cf\u5339\u914d", "text": ""}, {"location": "theory/CV/3d_vision/stereo/#_32", "title": "\u57fa\u4e8e\u80fd\u91cf\u4f18\u5316\u7684\u56fe\u50cf\u5339\u914d", "text": ""}, {"location": "theory/CV/3d_vision/stereo/#_33", "title": "\u53c2\u8003\u6587\u732e", "text": "<p>\u5f20\u6b63\u53cb\u6807\u5b9a\u7b97\u6cd5\u539f\u7406\u8be6\u89e3_Sylvester\u7684\u535a\u5ba2-CSDN\u535a\u5ba2_\u5f20\u6b63\u53cb\u6807\u5b9a\u6cd5\u539f\u7406</p> <p>\u5355\u5e94\u6027 - \u7ef4\u57fa\u767e\u79d1\uff0c\u81ea\u7531\u7684\u767e\u79d1\u5168\u4e66 (wikipedia.org)</p> <p>\u6765\u804a\u804a\u53cc\u76ee\u89c6\u89c9\u7684\u57fa\u7840\u77e5\u8bc6\uff08\u89c6\u5bdf\u6df1\u5ea6\u3001\u6807\u5b9a\u3001\u7acb\u4f53\u5339\u914d\uff09 - \u6781\u672f\u793e\u533a - \u8fde\u63a5\u5f00\u53d1\u8005\u4e0e\u667a\u80fd\u8ba1\u7b97\u751f\u6001 (aijishu.com)</p> <p>\u53cc\u76ee\u6df1\u5ea6\u4f30\u8ba1\u4e2d\u7684\u81ea\u76d1\u7763\u5b66\u4e60\u6982\u89c8 | \u673a\u5668\u4e4b\u5fc3 (jiqizhixin.com)</p> <p>\u6df1\u5ea6\u76f8\u673a\u539f\u7406\u63ed\u79d8--\u53cc\u76ee\u7acb\u4f53\u89c6\u89c9 (sohu.com)</p> <p>\u53cc\u76ee\u7acb\u4f53\u89c6\u89c9\u4e4b\u6df1\u5ea6\u4f30\u8ba1_\u5c0f\u5c0f\u5c0f\u5bcc\u7684\u535a\u5ba2-CSDN\u535a\u5ba2_\u53cc\u76ee\u6df1\u5ea6\u4f30\u8ba1</p>"}, {"location": "theory/CV/image_processing/", "title": "Index", "text": ""}, {"location": "theory/CV/image_processing/#_1", "title": "\u76ee\u5f55", "text": "<p>\u8be5\u90e8\u5206\u7684\u535a\u5ba2\u4e2d\u4f7f\u7528\u4e86gitee\u7684\u56fe\u7247\u5916\u94fe\uff0c\u7531\u4e8egitee\u7684\u76f8\u5173\u9650\u5236\uff0c\u65e0\u6cd5\u5728\u6b64\u5904\u6b63\u5e38\u663e\u793a\u3002\u8bf7\u70b9\u51fb\u4ee5\u4e0b\u5bf9\u5e94\u6258\u7ba1\u5728gitee\u4e0a\u7684\u535a\u5ba2\u94fe\u63a5\u8fdb\u884c\u8bbf\u95ee\u3002</p> <p>\u300c\u56fe\u50cf\u5904\u7406\u300d\u5085\u91cc\u53f6\u6b63\u9006\u53d8\u6362\u4e0e\u4f59\u5f26\u6b63\u9006\u53d8\u6362 \u3010\u9644C++\u5b9e\u73b0\u3011 | Hi~ Call me FUJI! (gitee.io)</p> <p>\u300c\u56fe\u50cf\u5904\u7406\u300d\u57fa\u4e8eCNN\u7684\u7eb9\u7406\u5408\u6210\u5b9e\u8df5\u3010\u9644python\u5b9e\u73b0\u3011 | Hi~ Call me FUJI! (gitee.io)</p> <p>\u300c\u56fe\u50cf\u5904\u7406\u300d\u4eba\u8138\u8bc6\u522b\u7684\u4e09\u79cd\u7ecf\u5178\u7b97\u6cd5\u4e0e\u7b80\u5355\u7684CNN \u3010\u9644Python\u5b9e\u73b0\u3011 | Hi~ Call me FUJI! (gitee.io)</p>"}, {"location": "theory/ML/basic_paradigm/", "title": "\u673a\u5668\u5b66\u4e60\u57fa\u672c\u8303\u5f0f", "text": ""}, {"location": "theory/ML/basic_paradigm/01_overview/", "title": "\u300c\u673a\u5668\u5b66\u4e60\u300d\u57fa\u7840\u7406\u8bba\u4e0e\u8303\u5f0f", "text": ""}, {"location": "theory/ML/basic_paradigm/01_overview/#_1", "title": "\u57fa\u7840\u7406\u8bba", "text": ""}, {"location": "theory/ML/basic_paradigm/01_overview/#_2", "title": "\u53c2\u8003\u94fe\u63a5", "text": "<p>\u300a\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60\u300b \u2014 \u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60 2.0.0 documentation</p> <p>GitHub - d2l-ai/d2l-zh: \u300a\u52a8\u624b\u5b66\u6df1\u5ea6\u5b66\u4e60\u300b\uff1a\u9762\u5411\u4e2d\u6587\u8bfb\u8005\u3001\u80fd\u8fd0\u884c\u3001\u53ef\u8ba8\u8bba\u3002\u4e2d\u82f1\u6587\u7248\u88ab60\u591a\u4e2a\u56fd\u5bb6\u7684400\u591a\u6240\u5927\u5b66\u7528\u4e8e\u6559\u5b66\u3002</p>"}, {"location": "theory/ML/basic_paradigm/01_overview/#_3", "title": "\u4e3b\u8981\u6a21\u578b\u4e0e\u8303\u5f0f", "text": ""}, {"location": "theory/ML/basic_paradigm/01_overview/#cnn", "title": "CNN", "text": ""}, {"location": "theory/ML/basic_paradigm/01_overview/#gnn", "title": "GNN", "text": ""}, {"location": "theory/ML/basic_paradigm/01_overview/#transformer", "title": "Transformer", "text": ""}, {"location": "theory/ML/basic_paradigm/01_overview/#diffusion", "title": "Diffusion", "text": ""}, {"location": "theory/ML/basic_paradigm/01_overview/#_4", "title": "\u53c2\u8003\u94fe\u63a5", "text": "<p>\u7531\u6d45\u5165\u6df1\u4e86\u89e3Diffusion Model</p> <p>What are Diffusion Models?</p> <p>https://zhuanlan.zhihu.com/p/525106459</p>"}, {"location": "theory/ML/course_whiteboard/00_hmm/", "title": "\u300c\u5728\u7ebf\u8bfe\u7a0b\u300d\u673a\u5668\u5b66\u4e60\u767d\u677f\u63a8\u5bfc", "text": ""}, {"location": "theory/ML/course_whiteboard/00_hmm/#hidden-markov-model-hmm", "title": "Hidden Markov Model (HMM)", "text": ""}, {"location": "theory/ML/course_whiteboard/00_hmm/#_1", "title": "\u53d8\u91cf\u8bf4\u660e", "text": "<p>\\(I=i_1,i_2,...,i_T\\) \u2192 \u72b6\u6001\u5e8f\u5217</p> <p>\\(Q=\\{q_1,q_2,...,q_N\\}\\) \u2192 \u72b6\u6001\u503c\u96c6\u5408</p> <p>\\(O=o_1,o_2,o_3,...,o_T\\) \u2192 \u89c2\u6d4b\u5e8f\u5217</p> <p>\\(V={v_1,v_2,...,v_M}\\) \u2192 \u89c2\u6d4b\u503c\u96c6\u5408</p>"}, {"location": "theory/ML/course_whiteboard/00_hmm/#_2", "title": "\u53c2\u6570\u8bf4\u660e", "text": "<p>\\(\\lambda=(\\pi,A,B)\\)</p> <p>\\(\\pi=(\\pi_1,\\pi_2,...,\\pi_N)\\)\uff0c\\(\\pi_i=P(i_1=q_i)\\) \u4e14 \\(\\sum\\limits_{i=1}^{M}{\\pi_i}=1\\) \u2192 \u521d\u59cb\u6982\u7387\u5206\u5e03</p> <p>\\(A: [a_{ij}]\\)\uff0c\u5176\u4e2d \\(a_{ij}=P(i_{t+1}=q_j|i_t=q_i)\\) \u2192 \u8f6c\u79fb\u77e9\u9635</p> <p>\\(B: [b_j(k)]\\)\uff0c\u5176\u4e2d \\(b_j(k)=P(o_{t}=v_k|i_t=q_j)\\) \u2192 \u53d1\u5c04\u77e9\u9635</p>"}, {"location": "theory/ML/course_whiteboard/00_hmm/#_3", "title": "\u4e24\u4e2a\u5047\u8bbe", "text": "<p>\u2460 \u9f50\u6b21\u9a6c\u5c14\u53ef\u592b\u89c4\u5219</p> <p>\\(P(i_{t+1}|i_1,...,i_t,o_1,...,o_t)=P(i_{t+1}|i_t)\\)</p> <p>\u2461 \u89c2\u6d4b\u72ec\u7acb\u539f\u5219</p> <p>\\(P(o_t|i_1,...,i_t,o_1,...,o_t)=P(o_t|i_t)\\)</p>"}, {"location": "theory/ML/course_whiteboard/00_hmm/#_4", "title": "\u5b66\u4e60\u4efb\u52a1\u63a8\u5bfc\u8bc1\u660e", "text": "<p>\u5bf9\u4e8eHMM\u6765\u8bf4\uff0c\u5b66\u4e60\u4efb\u52a1\u6307\u7684\u662f\u4ece\u8bad\u7ec3\u96c6\u4e2d\u5b66\u4e60HMM\u7684\u53c2\u6570 \\(\\lambda\\) \uff0c\u8f6c\u5316\u4e3a\u6570\u5b66\u95ee\u9898\u4e3a \\(\\lambda_{MLE}=\\underset{\\lambda}{argmax}\\ P(O|\\lambda)\\) \u3002\u6240\u4f7f\u7528\u7684\u65b9\u6cd5\u4e3a Baum\u2013Welch \u7b97\u6cd5\uff08EM\u7b97\u6cd5\u7684\u53d8\u4f53\uff09\u3002</p> <p>\u6839\u636eEM\u7b97\u6cd5\u7684\u516c\u5f0f\uff0c\u5373</p> \\[ \\theta^{(t+1)}=\\underset{\\theta}{argmax}\\ \\int_Z\\log{P(X,Z|\\theta)}P(Z|X,\\theta^{(t)}) \\mathrm{d} z \\] <p>\u5176\u4e2d\uff0c\\(X\\) \u4e3a\u89c2\u6d4b\u503c\uff0c\\(Z\\) \u4e3a\u9690\u53d8\u91cf\uff0c\\(\\theta\\) \u4e3a\u53c2\u6570\u3002</p> <p>\u6839\u636eHMM\u4e2d\u5b9a\u4e49\u7684\u7b26\u53f7\u66ff\u6362\u4e0a\u5f0f\u7684\u5bf9\u5e94\u7b26\u53f7\uff0c\u53ef\u4ee5\u5f97\u5230\u4e0b\u5f0f\uff1a</p> \\[ \\lambda^{(t+1)}=\\underset{\\lambda}{argmax}\\ \\sum\\limits_{I}\\log{P(O,I|\\lambda)}P(I|O,\\lambda^{(t)})  \\] <p>\u7531\u4e8e \\(P(I|O,\\lambda^{(t)})=\\frac{P(I,O|\\lambda^{(t)})}{P(O,\\lambda^{(t)})}\\)\uff0c\u4e14\u6b64\u65f6 \\(\\lambda^{(t)}\\) \u4e3a\u5e38\u6570\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u7528 \\(P(I,O|\\lambda^{(t)})\\) \u66ff\u4ee3 \\(P(I|O,\\lambda^{(t)})\\)\uff0c\u5f97\u5230\uff1a</p> \\[ \\lambda^{(t+1)}=\\underset{\\lambda}{argmax}\\ \\sum\\limits_{I}\\log{P(O,I|\\lambda)}P(O,I|\\lambda^{(t)}) \\] <p>\u5176\u4e2d\uff0c\\(\\lambda^{(t)}=(\\pi^{(t)},A^{(t)},B^{(t)})\\)\u3002</p> <p>\u6839\u636eHMM\u7684\u5b9a\u4e49\uff0c\u53ef\u4ee5\u5f97\u5230</p> \\[ P(O|\\lambda)=\\sum\\limits_{I}P(O,I|\\lambda)=\\sum\\limits_{i_1}...\\sum\\limits_{i_T}\\pi_{i_1}\\prod\\limits_{t=2}^Ta_{i_{t-1}i_t}\\prod\\limits_{t=1}^{T}b_{i_t}(o_t) \\] <p>\u8054\u7acb\u524d\u4e24\u5f0f\uff0c\u53ef\u4ee5\u5f97\u5230\u4f18\u5316\u51fd\u6570\u4e3a</p> \\[ Q(\\lambda,\\lambda^{(t)})=\\sum\\limits_{I}\\log{P(O,I|\\lambda)}P(O,I|\\lambda^{(t)})=\\sum\\limits_{I}[\\log\\pi_{i_1}+\\sum\\limits_{t=2}^T\\log a_{i_{t-1}i_t}+\\sum\\limits_{t=1}^{T}\\log b_{i_t}(o_t)]P(O,I|\\lambda^{(t)}) \\] <p>\u4e0b\u9762\u4ee5 \\(\\pi\\) \u4e3a\u4f8b\uff0c\u63a8\u5bfc\u53c2\u6570\u7684\u8ba1\u7b97\uff0c\u53c2\u6570 \\(A\\) \u548c \\(B\\) \u540c\u7406\u3002</p> <p>\u7531\u4e0a\u9762\u7684\u63a8\u5bfc\u6709\uff0c</p> \\[ \\begin{align*} \\pi^{(t+1)} &amp;=\\underset{\\pi}{argmax}\\ Q(\\lambda,\\lambda^{(t)}) =\\underset{\\pi}{argmax}\\sum\\limits_{I}[\\log\\pi_{i_1}P(O,I|\\lambda^{(t)})] \\\\ &amp;=\\underset{\\pi}{argmax}\\sum\\limits_{i_1}...\\sum\\limits_{i_T}[\\log\\pi_{i_1}P(O,i_1,...,i_T|\\lambda^{(t)})] =\\underset{\\pi}{argmax}\\sum\\limits_{i_1}[\\log\\pi_{i_1}P(O,i_1|\\lambda^{(t)})] \\end{align*} \\] <p>\u7531\u4e8e \\(i_1\\) \u4e3a\u521d\u59cb\u72b6\u6001\uff0c\u4e14 \\(i_1\\) \u7684\u53d6\u503c\u8303\u56f4\u4e3a \\(Q=\\{q_1,q_2,...,q_N\\}\\)\uff0c\u6240\u4ee5\u4e0a\u5f0f\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5199\u4e3a</p> \\[ \\pi^{(t+1)} =\\underset{\\pi}{argmax}\\sum\\limits_{i=1}^N[\\log\\pi_{i}P(O,i_1=q_i|\\lambda^{(t)})]\\\\ \\mathrm{ s.t. } \\sum\\limits_{i=1}^N\\pi_i=1 \\] <p>\u89c2\u5bdf\u4e0a\u5f0f\uff0c\u53d1\u73b0\u53ef\u4ee5\u4f7f\u7528\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\u6c42\u89e3\u8be5\u4f18\u5316\u65b9\u7a0b\u3002\u5b9a\u4e49\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\u7684\u51fd\u6570\u4e3a</p> \\[ \\mathcal{L}(\\pi, \\eta)=\\sum\\limits_{i=1}^N[\\log\\pi_{i}P(O,i_1=q_i|\\lambda^{(t)})]+\\eta(\\sum\\limits_{i=1}^N\\pi_i=1) \\] <p>\u5bf9 \\(\\pi_i\\) \u6c42\u504f\u5bfc\uff0c\u4ee4\u504f\u5bfc\u4e3a0\uff0c\u53ef\u4ee5\u5f97\u5230</p> \\[ \\frac{\\partial \\mathcal{L}}{\\partial \\pi_i}=\\frac{1}{\\pi_i}P(O,i_1=q_i|\\lambda^{(t)})+\\eta=0 \\\\ \\Rightarrow P(O,i_1=q_i|\\lambda^{(t)})+\\pi_i\\eta=0\\\\ \\Rightarrow \\sum\\limits_{i=1}^{N}[P(O,i_1=q_i|\\lambda^{(t)})+\\pi_i\\eta]=0\\\\ \\Rightarrow P(O|\\lambda^{(t)})+\\eta=0\\\\ \\Rightarrow \\eta = -P(O|\\lambda^{(t)}) \\] <p>\u5c06 \\(\\eta =-P(O|\\lambda^{(t)})\\) \u4ee3\u56de\u7b49\u5f0f\uff0c\u5f97\u5230</p> \\[ \\pi_i^{(t+1)}=\\frac{P(O,i_1=q_i|\\lambda^{(t)})}{P(O|\\lambda^{(t)})} \\] <p>\u540c\u7406\u53ef\u4ee5\u5f97\u5230\uff0c\\(\\pi^{(t+1)}=(\\pi_1^{(t+1)},\\pi_2^{(t+1)},...,\\pi_N^{(t+1)})\\) \u7684\u8868\u8fbe\u5f0f\u3002</p> <p>\u81f3\u6b64\uff0c\u5efa\u7acb\u4e86 \\(\\pi^{(t+1)}\\) \u548c \\(\\lambda^{(t)}\\)\u7684\u5173\u7cfb\u5f0f\uff0c\u5373\u5efa\u7acb\u4e86\\(\\pi^{(t+1)}\\)\u4e0e \\(\\pi^{(t)}\\)\u7684\u5173\u7cfb\u5f0f\uff0c\u6ee1\u8db3\u4e86EM\u7b97\u6cd5\u7684\u6761\u4ef6\u3002\u53c2\u6570 \\(A\\) \u548c \\(B\\) \u7684\u8ba1\u7b97\u63a8\u5bfc\u540c\u7406\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002</p> <p>\u7efc\u4e0a\u6240\u8ff0\uff0c\u63a8\u5bfc\u8bc1\u660eHMM\u7b97\u6cd5\u53c2\u6570\u5b66\u4e60\u7684\u6570\u5b66\u539f\u7406\u53ef\u884c\u3002</p>"}, {"location": "toolkit/others/git/", "title": "Git", "text": ""}, {"location": "toolkit/others/git/#errno-10053", "title": "errno 10053", "text": "<ul> <li>\u62a5\u9519\u793a\u4f8b\uff1a</li> </ul> <pre><code>fatal: unable to access 'https://github.com/FUJI-W/dev-renderer/': OpenSSL SSL_read: Connection was aborted, errno 10053\n</code></pre> <ul> <li> <p>\u53ef\u80fd\u539f\u56e0\uff1a</p> </li> <li> <p>Git\u9ed8\u8ba4\u9650\u5236\u63a8\u9001\u7684\u5927\u5c0f\uff0c\u8fd0\u884c\u547d\u4ee4\u66f4\u6539\u9650\u5236\u5927\u5c0f\u5373\u53ef</p> </li> <li> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a</p> </li> </ul> <pre><code>git config --global http.postBuffer 524288000\n</code></pre>"}, {"location": "toolkit/others/mkdocs/", "title": "Welcome to MkDocs", "text": "<p>For full documentation visit mkdocs.org.</p>"}, {"location": "toolkit/others/mkdocs/#commands", "title": "Commands", "text": "<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"}, {"location": "toolkit/others/mkdocs/#project-layout", "title": "Project layout", "text": "<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"}, {"location": "toolkit/others/mkdocs/#reference", "title": "Reference", "text": "<ul> <li>\u914d\u7f6e\u53c2\u8003\u6587\u6863</li> </ul>"}, {"location": "toolkit/unreal/", "title": "Index", "text": ""}, {"location": "toolkit/unreal/#_1", "title": "\u5b66\u4e60\u8d44\u6599", "text": "<p>Epic Developer Community</p> <p>\u5b66\u4e60\u865a\u5e7b\u5f15\u64ce\u768415\u5957\u6700\u4f73\u5728\u7ebf\u8bfe\u7a0b</p> <p>docs.unrealengine.com</p> <p>\u5b66\u4e60\u4e4b\u8def</p> <p>Your First Hour in Unreal Engine 5 | Course</p> <p>Lighting Essential Concepts and Effects | Course</p>"}, {"location": "toolkit/unreal/#shader", "title": "Shader\u5b66\u4e60", "text": ""}, {"location": "toolkit/unreal/#ue-shader", "title": "UE \u4e2d Shader \u7f16\u5199\u7684\u57fa\u672c\u914d\u7f6e", "text": "<p>\u2b50 Ue5.1 Shader\u5165\u95e8\u6559\u7a0b(HLSL)_\u54d4\u54e9\u54d4\u54e9_bilibili</p> <p>\u2b50 Shader \u5b66\u4e60\u5206\u4eab\uff1a\u4ece Unity \u5230 UE4\uff0c\u5728 UE4 \u91cc\u7528\u4ee3\u7801\u5199 Shader \u6307\u5357\u5c0f\u5408\u96c6 - \u6398\u91d1 (juejin.cn)</p> <p>\u2b50 Shader\u5b66\u4e60\u5206\u4eab\uff1a\u96e8\u5929\u7a97\u6237Shader_\u8ba1\u7b97\u6d41\u7a0b\u53ef\u89c6\u5316\u62c6\u89e3 - \u77e5\u4e4e (zhihu.com)</p> <p>\u6280\u672f\u5206\u4eab | \u901a\u8fc7VSCode\u4e3aUE4\u5199Shader - \u77e5\u4e4e (zhihu.com)</p> <p>\uff08\u865a\u5e7b4Shader\u7bc7\uff09\u5f00\u59cb\u7f16\u5199\u6700\u7b80\u5355\u7684Shader - \u77e5\u4e4e (zhihu.com)</p> <p>UE4 HLSL \u548c Shader \u5f00\u53d1\u6307\u5357\u548c\u6280\u5de7 - \u77e5\u4e4e (zhihu.com)</p>"}, {"location": "zone/food/self_make/", "title": "\u300c\u83dc\u8c31\u300d\u662f\u771f\u7684\u83dc\u8c31", "text": ""}, {"location": "zone/food/self_make/#_1", "title": "\u201c\u97e9\u5f0f\u201d\u716e\u9762", "text": "<ul> <li>\u51c6\u5907 - \u756a\u8304\uff1a\u53bb\u76ae\uff08\u53ef\u70ed\u6c34\u70eb\u4e00\u4e0b\u4ee5\u4fbf\u53bb\u76ae\uff09\uff0c\u5207\u788e\uff1b</li> <li>\u6d0b\u8471\uff1a\u5207\u788e\uff1b</li> <li>\u9e21\u86cb\uff1a\u6253\u81f3\u65e0\u62c9\u4e1d\uff0c\u5efa\u8bae\u4f7f\u7528\u53ef\u751f\u98df\u9e21\u86cb\uff1b</li> <li>\u9ec4\u6cb9\uff1a\u63d0\u524d\u5207\u53d6\u9002\u91cf\u9ec4\u6cb9\uff0c\u4e5f\u53ef\u7528\u4efb\u610f\u98df\u7528\u6cb9\u4ee3\u66ff\uff1b</li> <li>\u5176\u4ed6\uff1a\u97e9\u5f0f\u8fa3\u9171\uff0c\u725b\u5976\u3002</li> <li>\u5f00\u7092 1. \u9505\u5185\u52a0\u5165\u4e00\u5c0f\u5757\u9ec4\u6cb9\uff0c\u878d\u5316\u540e\u5012\u5165\u6d0b\u8471\uff0c\u7092\u81f3\u6d0b\u8471\u53d8\u8272\uff1b</li> <li>\u5012\u5165\u756a\u8304\uff0c\u52a0\u9002\u91cf\u756a\u8304\u9171\uff0c\u52a0\u5165\u97e9\u5f0f\u8fa3\u9171\uff0c\u7ffb\u7092\u81f3\u7cca\u7cca\u72b6\uff0c\u53ef\u52a0\u5165\u9002\u91cf\u6c34\u9632\u6b62\u7092\u5e72\uff1b</li> <li>\u5012\u5165\u6e05\u6c34\uff0c\u53ef\u52a0\u5165\u5c11\u91cf\u725b\u5976\u63d0\u5347\u6ecb\u5473\uff0c\u653e\u5165\u9762\u5757\uff0c\u716e\u81f3\u9762\u6761\u4ecd\u6709\u4e9b\u786c\uff0c\u5927\u706b\u6536\u6536\u6c41\uff08\u8ba9\u6c64\u6c41\u6d53\u7a20\u4e00\u4e9b\uff09\uff1b</li> <li>\u5173\u706b\u540e\u7acb\u523b\u5012\u5165\u6253\u597d\u7684\u9e21\u86cb\uff0c\u5feb\u901f\u6405\u62cc\uff0c\u5b8c\u6210\u3002</li> <li>\u8865\u5145 - \u996d\u91cf\u5927\u7684\u670b\u53cb\u5403\u7684\u65f6\u5019\u53ef\u4ee5\u914d\u4e0a\u4e00\u7897\u7c73\u996d\uff0c\u7528\u6c64\u6c41\u62cc\u996d\u4e5f\u5f88\u9999\u3002</li> </ul>"}, {"location": "zone/food/self_make/#_2", "title": "\u65b0\u7586\u7092\u201c\u4e00\u5207\u201d", "text": "<ul> <li>\u51c6\u5907 - \u725b\u8089\uff1a\u5207\u6761\uff0c\u7092\u719f\u5907\u7528\uff0c\u53ef\u4ee5\u4e8b\u5148\u7528 \u86cb\u6e05+\u9171\u6cb9+\u98df\u7528\u6cb9+\u6dc0\u7c89 \u7b49\u814c\u5236\u4e00\u4e0b\uff1b</li> <li>\u897f\u82b9\uff1a\u5207\u6bb5\uff1b</li> <li>\u5e72\u7ea2\u8fa3\u6912\uff1a\u7528\u6c34\u6ce1\u8f6f\uff0c\u5207\u6210\u5c0f\u6bb5\uff1b</li> <li>\u7c89/\u9762\uff1a\u4e8b\u5148\u716e\u719f\uff0c\u8fc7\u51b7\u6c34\u540e\u5907\u7528\uff1b</li> <li>\u9171\u6599\uff1a\u90eb\u53bf\u8c46\u74e3\u9171\u3001\u9ec4\u8c46\u9171\u3001\u751c\u9762\u9171\u3001\u756a\u8304\u9171\u3001\u8017\u6cb9\u3001\u8001\u62bd\u3001\u829d\u9ebb\u9171\u3001\u98df\u7528\u6cb9\uff0c\u4ee5\u4e0a\u9171\u6599\u5404\u53d6\u9002\u91cf\uff0c\u4e2a\u522b\u9171\u6ca1\u6709\u7684\u8bdd\u6ca1\u5173\u7cfb\uff0c\u6405\u62cc\u5747\u5300\u5907\u7528\uff1b</li> <li>\u5176\u4ed6\uff1a\u57f9\u6839\u3001\u6cb9\u83dc\u7b49\u5176\u4ed6\u559c\u6b22\u7684\u914d\u83dc\u3002</li> <li>\u5f00\u7092 1. \u9505\u5185\u52a0\u5165\u9002\u91cf\u6cb9\uff0c\u5012\u5165\u7ea2\u8fa3\u6912\uff0c\u7092\u9999\uff1b</li> <li>\u5012\u5165\u9171\u6599\uff0c\u7092\u51fa\u7ea2\u6cb9\u540e\uff0c\u518d\u5012\u5165\u8471\u59dc\u849c\u7206\u9999\uff1b</li> <li>\u5012\u5165\u725b\u8089\u3001\u897f\u82b9\u548c\u914d\u83dc\uff0c\u7ffb\u7092\u4e00\u4e0b\uff0c\u53ef\u52a0\u5165\u9002\u91cf\u6c34\u9632\u6b62\u7092\u5e72\uff1b</li> <li>\u5012\u5165\u7c89\u548c\u9762\uff0c\u7ffb\u7092\u5747\u5300\uff0c\u5b8c\u6210\u3002</li> </ul>"}, {"location": "zone/food/self_make/#_3", "title": "\u201c\u7a7a\u7a7a\u201d\u706b\u817f\u571f\u8c46", "text": "<ul> <li>\u51c6\u5907 - \u571f\u8c46\uff1a\u5207\u6210\u5c0f\u5757\uff0c\u7136\u540e\u84b8\u719f / \u716e\u719f / \u5fae\u6ce2\u719f \u5907\u7528\uff1b</li> <li>\u706b\u817f\uff1a\u5207\u5757\uff1b</li> <li>\u8c03\u6599\uff1a<code>\u5b5c\u7136\u5473</code> - \u5b5c\u7136\u3001\u6912\u76d0\u3001\u8fa3\u6912\u9762\u62cc\u5300\uff1b<code>\u7cd6\u918b\u5473</code> - \u9505\u4e2d\u52a0\u5165\u751f\u62bd\u3001\u767d\u7cd6\u3001\u7c73\u918b\u3001\u6e05\u6c34\uff0c\u6bd4\u4f8b\u53ef\u91c7\u75282:3:4:5\uff0c\u52fe\u82a1\u6210\u6c41\uff1b</li> <li>\u5176\u4ed6\uff1a\u767d\u829d\u9ebb\uff0c\u9999\u8471\u7b49\u3002</li> <li>\u5f00\u7092 1. \u9505\u4e2d\u52a0\u5165\u9002\u91cf\u6cb9\uff0c\u6cb9\u70ed\u540e\u5012\u5165\u571f\u8c46\uff0c\u4e2d\u706b\u6162\u714e\u81f3\u5916\u76ae\u91d1\u9ec4\u4e2d\u5e26\u7740\u7126\u8910\uff1b</li> <li>\u5012\u5165\u706b\u817f\uff0c\u714e\u81f3\u8868\u76ae\u7126\u82cf\u82cf\u7684\uff1b</li> <li>\u653e\u5165\u914d\u597d\u7684\u8c03\u6599\uff08\u5b5c\u7136\u5473\u7684\u8bdd\uff0c\u518d\u52a0\u5165\u9002\u91cf\u751f\u62bd\uff09\uff0c\u7ffb\u62cc\u5747\u5300\uff0c\u5b8c\u6210\u3002</li> </ul>"}, {"location": "zone/food/self_make/#_4", "title": "\u201c\u6781\u7b80\u201d\u70e7\u8304\u5b50", "text": "<ul> <li>\u51c6\u5907 - \u8304\u5b50\uff1a\u8bb0\u5f97\u53bb\u76ae\uff0c\u5207\u6210\u6eda\u5200\u5757\uff0c\u88f9\u4e0a\u6dc0\u7c89\uff0c\u9759\u7f6e\u7247\u523b\u540e\uff0c\u4e0b\u9505\u7092\u81f3\u91d1\u9ec4\u540e\u76db\u51fa\u5907\u7528\uff1b</li> <li>\u9171\u6c41\uff1a\u751f\u62bd\u3001\u9648\u918b\u3001\u8001\u62bd\u3001\u869d\u6cb9\u3001\u756a\u8304\u9171\u3001\u767d\u7cd6\u3001\u6dc0\u7c89\uff0c\u5efa\u8bae\u6309\u7167 4:4:1:2:2:1:2 \u7684\u6bd4\u4f8b\uff0c\u518d\u52a0\u5165\u4e00\u5c0f\u64ae\u76d0\u3001\u9002\u91cf\u6e05\u6c34\uff0c\u6405\u5300\u5907\u7528\uff1b</li> <li>\u5f00\u7092 1. \u70ed\u9505\u51c9\u6cb9\uff0c\u52a0\u5165\u8471\u59dc\u849c\u7092\u9999\uff1b</li> <li>\u5012\u5165\u9171\u6c41\uff0c\u5012\u5165\u8304\u5b50\uff0c\u7ffb\u7092\u4e00\u4e0b\uff0c\u5927\u706b\u6536\u6c41\uff0c\u5b8c\u6210\u3002</li> </ul>"}, {"location": "zone/food/self_make/#_5", "title": "\u201c\u600e\u4e48\u505a\u90fd\u597d\u5403\u201d\u7684\u5496\u55b1\u9e21", "text": "<ul> <li>\u51c6\u5907 - \u9e21\u8089\uff1a\u9e21\u817f\u8089\u3001\u9e21\u80f8\u8089\u3001\u5168\u9e21\u90fd\u53ef\uff0c\u5207\u6210\u5757\uff0c</li> <li>\u6d0b\u8471\uff1a\u5207\u6210\u5927\u5757\u540e\uff0c\u7528\u624b\u4e00\u9875\u9875\u6495\u5f00\uff1b</li> <li>\u571f\u8c46\uff1a\u5207\u5757\uff1b</li> <li>\u80e1\u841d\u535c\uff1a\u5207\u5757\uff1b</li> <li>\u5176\u4ed6\uff1a\u5496\u55b1\u7c89 / \u5757 / \u9171 \u90fd\u53ef\uff0c\u6930\u5976\u3002</li> <li>\u5f00\u7092 - \u70ed\u9505\u51c9\u6cb9\uff0c\u52a0\u5165\u6d0b\u8471\uff0c\u7092\u8f6f\u540e\u76db\u51fa\uff1b</li> <li>\u9505\u4e2d\u518d\u5012\u5165\u9e21\u8089\uff0c\u7528\u6d0b\u8471\u6cb9\u7092\uff0c\u7092\u81f3\u91d1\u9ec4\uff1b</li> <li>\u52a0\u5165\u9002\u91cf\u6c34\u9632\u6b62\u7092\u5e72\uff0c\u5012\u5165\u6d0b\u8471\u3001\u571f\u8c46\u3001\u80e1\u841d\u535c\uff0c\u7ffb\u7092\u4e00\u4e0b\uff1b</li> <li>\u5012\u5165\u9002\u91cf\u6c34\uff0c\u6df9\u6ca1\u8fc7\u98df\u6750\uff0c\u52a0\u5165\u5496\u55b1\uff0c\u6839\u636e\u4e2a\u4eba\u53e3\u5473\u53ef\u4ee5\u8865\u52a0\u9002\u91cf\u76d0\uff1b</li> <li>\u76d6\u4e0a\u9505\u76d6\uff0c\u4e2d\u706b\u716e30\u5206\u949f\u5de6\u53f3\uff0c\u716e\u81f3\u9e21\u8089\u719f\u900f\uff0c\u5496\u55b1\u5473\u9053\u6e17\u5165\u98df\u6750\uff1b</li> <li>\u5927\u706b\u6536\u6c41\u540e\u8f6c\u5c0f\u706b\uff0c\u53ef\u52a0\u5165\u6930\u5976\u6216\u5496\u5561\u7c89\u6216\u725b\u5976\u6216\u5de7\u514b\u529b\uff0c\u6405\u62cc\u878d\u5408\uff0c\u5b8c\u6210\u3002</li> </ul>"}, {"location": "zone/job/offer_harvester/01_timeline/", "title": "\u65f6\u95f4\u7ebf", "text": "\u516c\u53f8 \u6295\u9012\u94fe\u63a5 \u6295\u9012\u65f6\u95f4 \u7b80\u5386\u901a\u8fc7 \u7b14\u8bd5\u65f6\u95f4 AI\u9762 \u4e00\u9762 \u4e8c\u9762 HR\u9762 \u5927\u7586 2023.08.08 \u5b8c\u7f8e\u4e16\u754c \u6e38\u620f\u5f15\u64ce\u7814\u53d1\u5de5\u7a0b\u5e08\uff0824\u5c4a\u5b8c\u7f8e\u5b9e\u4e60\u751f\uff09 \u221a 2023.03.18 \u7c73\u54c8\u6e38 miHoYo\u6821\u56ed\u62db\u8058 2023.03.19 / 04.03 \u00d7 \u963f\u91cc/\u4f18\u9177 \u80e1\u5954 \u5185\u63a8 2023.03.14 \u5c0f\u7ea2\u4e66 \u804c\u4f4d\u8be6\u60c5 \uff0c\u5c0f\u7ea2\u4e66\u5185\u63a8) 2023.03.29 \u221a - 2023.04.16 2023.04.26 2023.04.28 \u5feb\u624b \u5feb\u624b\u6821\u62db-\u6295\u9012\u8bb0\u5f55 2023.03.29 \u00d7 \u96f7\u706b \u7f51\u6613\u6821\u56ed\u62db\u8058 (163.com) 2023.03.29 2023.04.23 2023.05.09 \u5730\u5e73\u7ebf \u5730\u5e73\u7ebf\u62db\u8058\u5b98\u7f51 (hotjob.cn) 2023.04.06 \u00d7 \u6b27\u83b1\u96c5 Zone.IT \u90e8\u95e8 2023.04.05 - 2023.04.07 OPPO \u6821\u56ed\u62db\u8058 (oppo.com) 2023.04.13 \u8054\u60f3 \u5c97\u4f4d\u8be6\u60c5 (lenovo.com.cn) 2023.04.18"}, {"location": "zone/job/offer_harvester/02_information/", "title": "\u5de5\u4f5c\u4fe1\u606f", "text": ""}, {"location": "zone/job/offer_harvester/02_information/#_1", "title": "\u5b9e\u4e60\u804c\u4f4d", "text": ""}, {"location": "zone/job/offer_harvester/02_information/#_2", "title": "\u5b57\u8282\u8df3\u52a8", "text": "\u5c97\u4f4d \u8be6\u60c5 \u4eba\u673a\u4ea4\u4e92\u7b97\u6cd5\u5b9e\u4e60\u751f-\u667a\u80fd\u521b\u4f5c\uff08\u6296\u97f3/\u526a\u6620/\u9192\u56fe/\u706b\u5c71\u5f15\u64ce/\u76f4\u64ad\uff09 - \u5b57\u8282\u8df3\u52a8 (bytedance.com) \u6570\u5b57\u4eba\u7b97\u6cd5\u5b9e\u4e60\u751f-\u667a\u80fd\u521b\u4f5c\uff08\u6296\u97f3/\u526a\u6620/\u9192\u56fe/\u706b\u5c71\u5f15\u64ce/\u76f4\u64ad\uff09 - \u5b57\u8282\u8df3\u52a8 (bytedance.com)"}, {"location": "zone/job/offer_harvester/02_information/#_3", "title": "\u5b9e\u4e60\u7ecf\u9a8c\u8d34", "text": "<p>\u56fe\u5f62\u5b66\u5c31\u4e1a\u65b9\u5411&amp;&amp;\u6625\u62db\u7eaa\u5b9e - \u77e5\u4e4e (zhihu.com)</p> <p>\u56fe\u5f62\u6e32\u67d3(\u6216TA\u504fT)\u627e\u5de5\u4f5c\uff0c\u505a\u4ec0\u4e48demo\u6bd4\u8f83\u597d\u5462\uff1f - \u77e5\u4e4e (zhihu.com)</p>"}, {"location": "zone/job/offer_harvester/03_share/", "title": "\u7ecf\u9a8c\u5206\u4eab", "text": ""}, {"location": "zone/job/offer_harvester/03_share/#_1", "title": "\u80e1\u5954 \u56fe\u5f62/\u6e38\u620f", "text": "<ul> <li> <p>\u5b9e\u4e60 \u975e\u5e38\u91cd\u8981\u3010\u9762\u8bd5\u7684\u65f6\u5019\u57fa\u672c\u4e0a\u53ea\u5728\u95ee\u5b9e\u4e60\u3011\uff0c \u505a\u4e86\u4e00\u4e2appt\uff0c\u6bcf\u6b21\u8bb230-40\u5206\u949f \u3002</p> </li> <li> <p>\u63d0\u524d\u6279\u975e\u5e38\u91cd\u8981 \uff0c\u6ca1\u6709\u7b14\u8bd5\uff1b\u53e6\u5916\uff0c\u6b63\u5f0f\u79cb\u62db\u5f88\u591a\u9ad8\u7aef\u5c97\u4f4d\u90fd\u6ca1\u6709\u3002</p> </li> </ul> <p></p> <ul> <li>\u5237\u9898\u7684\u6027\u4ef7\u6bd4\u4e0d\u592a\u9ad8\uff0c\u5927\u4f6c\u80fd\u52371000+\u9053</li> </ul> <p></p> <ul> <li>\u5730\u70b9</li> </ul> <p></p>"}, {"location": "zone/job/offer_harvester/03_share/#_2", "title": "\u4efb\u539a\u5174 \u5b57\u8282\u8df3\u52a8", "text": "<ul> <li>Code \u4e00\u5b9a\u8981\u597d\u597d\u5237\u3002</li> <li>\u5199\u5728\u7b80\u5386\u4e0a\u7684\u4e00\u5b9a\u8981\u8ba4\u771f\u51c6\u5907\u3002</li> <li>\u5b9e\u4e60\u7ecf\u5386\u6bd4paper\u66f4\u91cd\u8981\u3002</li> <li>\u628aleecode\u5237\u597d\uff0c\u4e5f\u80fd\u627e\u5230\u5b9e\u4e60\u3002</li> </ul>"}, {"location": "zone/job/offer_harvester/03_share/#_3", "title": "\u674e\u7ea2\u96e8 \u7f8e\u56e2", "text": "<ul> <li>\u5e94\u5c4a\u751f\u8003\u8651\u597d\u7684 \u5e73\u53f0 \u3001 \u5b66\u4e60\u53d1\u5c55 \u3002</li> <li>\u7a0d\u5fae\u51c6\u5907\u5f97\u5145\u5206\u70b9\uff0c\u518d\u53bb\u9762\u5927\u5382\u3002</li> <li>\u6237\u53e3\u8d70\u5355\u5217\u9700\u8981\u7b7e\u5408\u540c\u3002</li> </ul>"}, {"location": "zone/job/offer_harvester/03_share/#_4", "title": "\u897f\u5b89 \u7814\u7a76\u6240", "text": "<ul> <li>\u897f\u5b89\u6709\u54ea\u4e9b\u6240\u6bd4\u8f83\u63a8\u8350\uff1a</li> </ul> <p>\u4e3b\u8981\u5173\u6ce8\u8fd9\u4e2a\u7814\u7a76\u6240\u5728\u6574\u4e2a\u519b\u5de5\u4f53\u7cfb\u91cc\u7684\u5730\u4f4d\u3002</p> <ul> <li>6 \u822a\u7a7a\uff08 618 \uff09</li> <li>2 \u5175\u5668\uff08\u4fdd\u7559\u4e8b\u4e1a\u7f16\uff09</li> <li> <p>5 \u822a\u5929\uff08504\uff09</p> </li> <li> <p>\u7814\u7a76\u6240\u6ca1\u6709\u660e\u786e\u7684\u7814\u7a76\u5c97/\u5f00\u53d1\u5c97\u7684\u804c\u8d23\u5212\u5206\u3002</p> </li> <li> <p>\u7814\u7a76\u6240\u7684\u62db\u8058\u4fe1\u606f\u4e00\u822c\u5728 \u516c\u4f17\u53f7 \u548c\u5b98\u7f51\u7b49\uff0c\u4f46 \u4fe1\u606f\u4e0d\u900f\u660e\uff0c\u6700\u597d\u901a\u8fc7\u5185\u90e8\u4eba\u5458\u8fdb\u884c\u4e86\u89e3 \u3002</p> </li> <li> <p>\u8bf7\u95ee\u5b66\u957f\u7814\u7a76\u6240\u7684\u804c\u79f0\u664b\u5347\u4e00\u822c\u51e0\u5e74\u4e00\u6b21\u5462\uff1f</p> </li> <li> <p>\u7855\u58eb\uff0c\u521d\u7ea7\u5de5\u7a0b\u5e08\uff0c\u4e24\u5e74\u624d\u5177\u5907\u8d44\u683c\uff0c\u4e00\u822c5\u5e74\u80fd\u8bc4\u4e0a\u3002</p> </li> <li> <p>\u7814\u7a76\u6240\u6269\u62db\uff0c\u5bfc\u81f4\u5185\u90e8\u50e7\u591a\u7ca5\u5c11\u3002</p> </li> <li> <p>\u7814\u7a76\u6240\u7684\u85aa\u916c\u7b97\u6cd5\uff1f</p> </li> <li> <p>\u57fa\u672c\u5de5\u8d44+\u7ee9\u6548\uff08\u85aa\u916c\u768480%\uff09\u3002</p> </li> <li> <p>\u76ee\u524d\u6ca1\u6709\u672b\u4f4d\u6dd8\u6c70\u5236\u3002</p> </li> <li> <p>\u4e24\u6b21\u9762\u8bd5\uff1a \u4e00\u6b21\u7fa4\u9762 \uff0c \u4e00\u6b21\u5355\u9762 - \u7fa4\u9762\uff1a\u6bcf\u4e2a\u5ba4\u62bd\u4e00\u4e2a\u4eba\uff0c\u5f88\u591a\u4eba\u9762\u4e00\u4e2a\u4eba\uff0c\u57fa\u672c\u6bcf\u4e2a\u4eba\u90fd\u4f1a\u95ee\u4e00\u4e2a\u95ee\u9898\uff0c\u7136\u540e\u6253\u5206\uff1b</p> </li> <li> <p>\u5355\u9762\uff1a\u57fa\u672c\u5c31\u662fHR\u9762\uff0c\u5982\u679c\u610f\u5411\u660e\u786e\uff0c\u5c31\u53d1offer\u4e86\u3002</p> </li> <li> <p>\u519b\u5de5\u6240\uff1a C/C++ \uff0c\u9700\u8981\u638c\u63e1\u4e00\u90e8\u5206\u786c\u4ef6\u77e5\u8bc6\u3002</p> </li> </ul> <p></p> <p></p> <p></p> <p></p>"}, {"location": "zone/job/offer_harvester/03_share/#_5", "title": "\u9009\u8c03", "text": "<ul> <li>\u4ece7\u6708\u4efd\u5f00\u59cb\u5907\u8003\uff0c\u665a\u4e86\uff0c\u5168\u56fd\u5de1\u56de\u8003\u4e868\u6b21\uff0c\u5168\u6302\u4e86\u3002</li> <li>\u9762\u8bd5\u5206\u5dee\u4e0d\u5927\u3002</li> <li>\u5de5\u4f5c\u5185\u5bb9\u5c31\u662f\u5199\u6750\u6599\uff0c\u6bcf\u5929\u5728\u673a\u5173\u91cc\u5199\u3002</li> </ul>"}, {"location": "zone/job/offer_harvester/04_record/", "title": "\u7b14\u9762\u8bd5\u8bb0\u5f55", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_1", "title": "\u5c0f\u7ea2\u4e66", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_2", "title": "\u6280\u672f\u4e8c\u9762\uff08\u5df4\u514b\uff09", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_3", "title": "\u5b9e\u65f6\u6e32\u67d3\u4e2d\u7684\u590d\u6742\u6d41\u7a0b", "text": "<ul> <li>\u573a\u666f\u4e2d\u6709\u4e00\u4e2a\u955c\u5b50\uff0c\u8981\u5982\u4f55\u6e32\u67d3</li> <li>\u5982\u4f55\u7ed8\u5236\u4e00\u4e2a\u5706</li> </ul>"}, {"location": "zone/job/offer_harvester/04_record/#shader-toy", "title": "Shader Toy", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#gi-unity", "title": "\u5b9e\u65f6 GI \u4e0e Unity", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#dcc", "title": "DCC \u5de5\u5177", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_4", "title": "\u5b66\u4e60\u8d44\u6599", "text": "<ul> <li>OpenGL \u84dd\u5b9d\u4e66</li> </ul>"}, {"location": "zone/job/offer_harvester/04_record/#_5", "title": "\u7f51\u6613\u96f7\u706b", "text": "<ul> <li>\u6a21\u62df\uff08\u6d3e\u9063\uff09</li> <li>\u6a21\u62df\uff08\uff09</li> <li>\u8d34\u56fe\u5b58\u50a8</li> </ul>"}, {"location": "zone/job/offer_harvester/04_record/#_6", "title": "\u5b8c\u7f8e\u4e16\u754c", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_7", "title": "\u7b14\u8bd5\u9898\u76ee", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_8", "title": "\u9009\u62e9\u9898", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_9", "title": "\u7c7b\u7684\u6790\u6784\u51fd\u6570", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#32", "title": "32\u4f4d\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u7684\u6709\u6548\u6570\u5b57\u4f4d\u6570\uff08\u8f6c\u6362\u4e3a\u5341\u8fdb\u5236\uff09", "text": "<ul> <li>\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\u4f7f\u752832\u4f4d\u6765\u5b58\u50a8\u6570\u5b57\uff0c\u5176\u4e2d1\u4f4d\u7528\u4e8e\u7b26\u53f7\u4f4d\uff08\u8868\u793a\u6b63\u6570\u6216\u8d1f\u6570\uff09\uff0c8\u4f4d\u7528\u4e8e\u6307\u6570\uff0c\u5269\u4e0b\u768423\u4f4d\u7528\u4e8e\u5c0f\u6570\u90e8\u5206\uff08\u4e5f\u79f0\u4e3a\u5c3e\u6570\uff09\u3002\u7531\u4e8e\u8fd9\u4e9b\u4f4d\u6570\u7684\u9650\u5236\u548c\u7279\u5b9a\u89c4\u5219\u7684\u820d\u5165\uff0c\u6d6e\u70b9\u6570\u7684\u7cbe\u5ea6\u662f\u6709\u9650\u7684\u3002</li> </ul> <p>\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u5c060.1\u8f6c\u6362\u4e3a32\u4f4d\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570\uff0c\u5b83\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u5927\u81f4\u5982\u4e0b\uff1a0 01111011 10011001100110011001101\u3002\u5176\u4e2d\u7b2c\u4e00\u4f4d\u662f\u7b26\u53f7\u4f4d\uff080\u8868\u793a\u6b63\u6570\uff09\uff0c\u63a5\u4e0b\u6765\u76848\u4f4d\u662f\u6307\u6570\uff0c\u4f7f\u7528\u504f\u7f6e\u8868\u793a\u6cd5\uff08\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f127\uff09\uff0c\u5728\u4e8c\u8fdb\u5236\u4e2d\u8868\u793a\u4e3a01111011\u3002\u5269\u4e0b\u768423\u4f4d\u662f\u5c3e\u6570\uff0c\u5b83\u4eec\u4ee3\u8868\u5341\u8fdb\u5236\u5c0f\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u3002\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u5c3e\u6570\u4e3a10011001100110011001101\u3002</p> <p>\u8003\u8651\u5230\u8fd9\u79cd32\u4f4d\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u53ef\u4ee5\u5177\u67097\u52308\u4f4d\u7684\u6709\u6548\u6570\u5b57\uff08\u4e5f\u79f0\u4e3a\u7cbe\u5ea6\uff09\u3002\u8fd9\u662f\u56e0\u4e3a\u6d6e\u70b9\u6570\u7684\u7cbe\u786e\u5ea6\u53d7\u9650\u4e8e\u6307\u6570\u548c\u5c3e\u6570\u7684\u5927\u5c0f\u548c\u683c\u5f0f\u3002\u6709\u9650\u7684\u5c3e\u6570\u4f4d\u9650\u5236\u4e86\u6d6e\u70b9\u6570\u7684\u5206\u8fa8\u7387\u548c\u7cbe\u5ea6\uff0c\u800c\u6307\u6570\u4f4d\u9650\u5236\u4e86\u53ef\u4ee5\u8868\u793a\u7684\u6570\u5b57\u7684\u8303\u56f4\u3002\u8fd9\u4e24\u4e2a\u9650\u5236\u5171\u540c\u5bfc\u81f4\u4e86\u4e00\u4e2a\u8868\u793a\u6570\u5b57\u7684\u6709\u9650\u7cbe\u5ea6\u8303\u56f4\u3002</p> <p>\u56e0\u6b64\uff0c\u5728\u5b9e\u9645\u8ba1\u7b97\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u8981\u6ce8\u610f\u820d\u5165\u8bef\u5dee\u548c\u7cbe\u5ea6\u635f\u5931\u7684\u95ee\u9898\uff0c\u4ee5\u786e\u4fdd\u6211\u4eec\u7684\u8ba1\u7b97\u7ed3\u679c\u5728\u53ef\u63a5\u53d7\u7684\u8303\u56f4\u5185\uff08\u6216\u5728\u6240\u9700\u7684\u7cbe\u5ea6\u5185\uff09 \u3002</p>"}, {"location": "zone/job/offer_harvester/04_record/#int-pa5", "title": "<code>int* pa[5]</code> \u7684\u542b\u4e49", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_10", "title": "\u5f15\u7528\u4e0e\u6307\u9488\u7684\u5f02\u540c\u70b9", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_11", "title": "\u5b8f\u7684\u7279\u70b9\uff08\u6bd4\u5982\uff0c\u5b8f\u662f\u5426\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff09\uff1b\u5b8f\u4e0e\u51fd\u6570\u7684\u5f02\u540c\u70b9", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_12", "title": "\u56db\u4e2a\u5e73\u9762\u6700\u591a\u53ef\u4ee5\u5c06\u4e09\u7ef4\u7a7a\u95f4\u5212\u5206\u6210\u51e0\u90e8\u5206", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#dfsnlrbfslrn", "title": "\u4e8c\u53c9\u6811\u904d\u5386\uff08DFS\uff0cNLR\uff0cBFS\uff0cLRN\uff09", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#short-a10-sizeofa", "title": "<code>short a[10]={};</code> <code>sizeof(a)</code>\u7684\u7ed3\u679c", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_13", "title": "\u54ea\u4e9b\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u8c03\u7528\u6784\u9020\u51fd\u6570", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#new-malloc", "title": "<code>new</code> \u548c <code>malloc</code> \u7684\u5f02\u540c\u70b9", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_14", "title": "\u4ee5\u4e0b\u7a0b\u5e8f\u662f\u5426\u4e00\u6837\uff1f", "text": "<ul> <li><code>int b;</code> (1) <code>const int *a=&amp;b;</code> (2) <code>int const *a=&amp;b;</code> (3) <code>int* const a=&amp;b;</code></li> </ul>"}, {"location": "zone/job/offer_harvester/04_record/#_15", "title": "\u53cb\u5143\u51fd\u6570\u7684\u91cd\u8f7d\u95ee\u9898", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_16", "title": "\u591a\u7ebf\u7a0b\u8c03\u7528\u4e0e\u52a0\u9501\u7684\u95ee\u9898", "text": "<pre><code>int i = 0;\nvoid foo() {\n    static int j = 0;\n    int k = 0;\n} // \u95ee\uff1ai,j,k\u54ea\u4e9b\u9700\u8981\u52a0\u9501\uff0c\u54ea\u4e9b\u4e0d\u9700\u8981\uff1f\n</code></pre>"}, {"location": "zone/job/offer_harvester/04_record/#class", "title": "class\u4e0d\u540c\u6784\u9020\u65b9\u6cd5\u7684\u6548\u7387", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_17", "title": "\u7b80\u7b54\u9898", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_18", "title": "\u4ec0\u4e48\u65f6\u5019\u4f1a\u4f7f\u7528\u5f15\u7528\u8ba1\u6570\uff1f\u9700\u8981\u6ce8\u610f\u4ec0\u4e48\uff1f", "text": "<ul> <li>\u667a\u80fd\u6307\u9488\u4e0e\u5f15\u7528\u8ba1\u6570</li> </ul>"}, {"location": "zone/job/offer_harvester/04_record/#n-l-r", "title": "\u5df2\u77e5\u67d0\u70b9\u7684\u6cd5\u5411\u91cf N \u548c\u5149\u7167\u65b9\u5411 L\uff0c\u6c42\u53cd\u5c04\u5411\u91cf R", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#shadow-map", "title": "\u7b80\u8ff0\u4e00\u4e0bshadow map\u7684\u539f\u7406\u548c\u8fc7\u7a0b", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#fovyaspect-ratioznearzfar", "title": "\u5df2\u77e5fovY\uff0caspect ratio\uff0cZnear\uff0cZfar\uff0c\u63a8\u5bfc\u4e00\u4e0b\u900f\u89c6\u6295\u5f71\u77e9\u9635\uff08\u5de6\u624b\u7cfb\uff09", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_19", "title": "\u641c\u72d0\u7545\u6e38", "text": "<p>1\u3001\u5224\u65ad\u70b9\u662f\u5426\u5728\u4e09\u89d2\u5f62\u5185 2\u3001\u5df2\u77e5\u76f8\u673a\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\u7684\u5750\u6807\u3001\u76ee\u6807\u70b9\u5750\u6807\u548c\u4e16\u754c\u7a7a\u95f4\u4e2dUP\u5411\u91cf\uff080\uff0c1\uff0c0\uff09\uff0c\u6c42MVP\u77e9\u9635\u4e2d\u7684V 3\u3001Shader\u4e2d\u7684if else\u8bed\u53e5\u5bf9\u6027\u80fd\u6709\u4ec0\u4e48\u5f71\u54cd\uff0c\u8bf7\u4ece\u786c\u4ef6\u5c42\u9762\u63cf\u8ff0 4\u3001GPU Instancing\u3001Static Batch\u7684\u9002\u7528\u60c5\u51b5\u53ca\u5404\u81ea\u4f18\u7f3a\u70b9\uff0c\u82e5\u4e86\u89e3Unity SRP Batcher\u6280\u672f\u8bf7\u63cf\u8ff0\u4e00\u4e0b 5\u3001\u63cf\u8ff0\u4e00\u4e0b\u906e\u6321\u5254\u9664\u7684\u4f5c\u7528\uff0c\u4ee5\u53ca\u4f60\u77e5\u9053\u7684\u76f8\u5173\u6280\u672f 6\u3001\u63cf\u8ff0\u4e00\u4e0bShadow Mapping\u7684\u5b9e\u73b0\u8fc7\u7a0b\uff0cPCF\u548cPCSS\u6709\u4ec0\u4e48\u533a\u522b 7\u3001\u63cf\u8ff0\u4e00\u4e0bSSR\u5b9e\u73b0\u7684\u5927\u81f4\u8fc7\u7a0b\uff0c\u4ee5\u53ca\u4f60\u77e5\u9053\u7684\u76f8\u5173\u4f18\u5316\u65b9\u6cd5 8\u3001\u57fa\u4e8eCook-Torrance\u7684\u5149\u7167\u6a21\u578b\u4e2d\uff0c\u955c\u9762\u53cd\u5c04\u90e8\u5206\u7684\u51e0\u4f55\u906e\u6321\u9879G\u4e0e\u4ec0\u4e48\u5411\u91cf\u8ba1\u7b97\u6709\u5173\uff0c\u8bf7\u63cf\u8ff0\u4e00\u4e0bIBL\u7684\u8ba1\u7b97\u8fc7\u7a0b 9\u3001\u5ef6\u8fdf\u6e32\u67d3\u4e2d\uff08\u4e0d\u662f\u57fa\u4e8etile\u7684\u5ef6\u8fdf\uff09\uff0cPoint Light\u548cSpot Light\u662f\u5982\u4f55\u5904\u7406\u7684\uff0c\u63cf\u8ff0\u4e00\u4e0b\u5149\u7167\u8ba1\u7b97\u8fc7\u7a0b\uff1bForward+\u6216TBDS\u7ba1\u7ebf\u4e2d\uff0clightlist\u7684\u751f\u6210\u6709\u54ea\u4e9b\u65b9\u6cd5</p>"}, {"location": "zone/job/offer_harvester/04_record/#_20", "title": "\u6b27\u83b1\u96c5", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_21", "title": "\u7f51\u7533", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_22", "title": "\u95ee\u9898\u4e00", "text": "<p>\u8bf7\u56de\u5fc6\u4e00\u6b21\u4f60\u6ca1\u6709\u8fbe\u6210\u7406\u60f3\u7ed3\u679c\uff0c\u4f46\u4e0d\u65ad\u5c1d\u8bd5\u5e76\u53d6\u5f97\u8fdb\u6b65\u7684\u7ecf\u5386\u3002\u8bf7\u8be6\u7ec6\u63cf\u8ff0-\u4f60\u5f53\u65f6\u60f3\u8981\u8fbe\u6210\u4ec0\u4e48\u76ee\u6807?-\u9762\u5bf9\u4e00\u6b21\u6b21\u7684\u5931\u8d25\uff0c\u4f60\u505a\u4e86\u54ea\u4e9b\u5206\u6790\u548c\u601d\u8003?-\u9762\u5bf9\u5931\u8d25\u7684\u539f\u56e0\uff0c\u4f60\u662f\u5982\u4f55\u8c03\u6574\u548c\u514b\u670d\u7684?-\u6700\u540e\u7ed3\u679c\u5982\u4f55?\u4f60\u6709\u4ec0\u4e48\u53cd\u601d?</p> <p>\u60f3\u8981\u8fbe\u6210\u7684\u76ee\u6807\uff1a\u672c\u79d1\u6bd5\u4e1a\u8bba\u6587\u53ef\u4ee5\u6295\u7a3fIEEE VR\u5b66\u672f\u4f1a\u8bae\u3002 \u5206\u6790\u548c\u601d\u8003&amp;\u7ed3\u679c\u4e0e\u53cd\u601d\uff1a\u5931\u8d25\u4e00\uff0c\u5728\u6bd5\u4e1a\u8bba\u6587\u5f00\u9898\u65f6\uff0c\u6211\u7684\u6784\u601d\u662f\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u53ef\u4ee5\u5728\u79fb\u52a8\u8bbe\u5907\u4e0a\u5b9e\u65f6\u8fd0\u884c\u7684\u5ba4\u5185\u5149\u7167\u4f30\u8ba1\u7b97\u6cd5\u4e0e\u7269\u4f53\u6e32\u67d3\u7cfb\u7edf\u3002\u4f46\u5728\u8c03\u7814\u548c\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\uff0c\u4e3b\u8981\u4ee5CV\u9886\u57df\u7684\u5149\u7167\u4f30\u8ba1\u7814\u7a76\u4e3a\u4e3b\uff0c\u5e76\u672a\u610f\u8bc6\u5230\u540c\u4e00\u4e2a\u4efb\u52a1\u4e0d\u540c\u9886\u57df\u7684\u7814\u7a76\u8005\u6240\u5173\u6ce8\u7684\u3001\u91cd\u70b9\u89e3\u51b3\u7684\u95ee\u9898\u5f88\u53ef\u80fd\u662f\u4e0d\u540c\u7684\u3002\u5bf9\u4e8e\u5149\u7167\u4f30\u8ba1\u6765\u8bf4\uff0cCV\u7814\u7a76\u8005\u4e0eAR\u7814\u7a76\u8005\u6709\u4ea4\u53c9\uff0c\u4f46\u4e5f\u6709\u4e0d\u540c\u3002\u8fd9\u5bfc\u81f4\u6211\u6700\u7ec8\u5b9e\u73b0\u7684\u7b97\u6cd5\uff0c\u65e0\u6cd5\u6ee1\u8db3AR\u7684\u57fa\u672c\u8981\u6c42\u2014\u53ef\u4ea4\u4e92\u6027\u3002\u5931\u8d25\u4e8c\uff0c\u5728\u5b8c\u6210\u6bd5\u8bbe\u9879\u76ee\u5f00\u53d1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fc7\u5206\u7ea0\u7ed3\u5c40\u90e8\u7684\u4f18\u5316\uff0c\u9020\u6210\u4e86\u8bb8\u591a\u4e0d\u5fc5\u8981\u7684\u65f6\u95f4\u6d6a\u8d39\u3002\u5bfc\u81f4\u6700\u7ec8\u672a\u80fd\u987a\u5229\u5728\u622a\u7a3f\u524d\u5b8c\u6210\u3002 \u53cd\u601d\uff1a\u4ece\u8fd9\u6b21\u5931\u8d25\u4e2d\u6211\u4e5f\u6536\u83b7\u4e86\u5f88\u591a\uff0c\u6700\u4e3b\u8981\u7684\u6709\u4e24\u70b9\uff1a\u4e00\u662f\u5728\u505a\u4e00\u4ef6\u4efb\u52a1\u65f6\uff0c\u9996\u8981\u7684\u662f\u786e\u5b9a\u8be5\u4efb\u52a1\u7684\u8bba\u57df\uff0c\u5bf9\u91cd\u8981\u7684\u95ee\u9898\u548c\u73b0\u6709\u7684\u60c5\u51b5\u505a\u7cbe\u786e\u7684\u638c\u63e1\uff0c\u78e8\u5200\u4e0d\u8bef\u780d\u67f4\u5de5\uff1b\u4e8c\u662f\u5728\u5b8c\u6210\u4efb\u52a1\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5e94\u8be5\u79c9\u627f\u5148\u5b8c\u6210\u6846\u67b6\uff0c\u518d\u91cd\u70b9\u7a81\u7834\u7684\u539f\u5219\uff0c\u4ece\u603b\u4f53\u5230\u5c40\u90e8\uff0c\u8fd9\u6837\u624d\u80fd\u62f3\u62f3\u5230\u8089\uff0c\u5c11\u505a\u65e0\u7528\u529f\u3002</p>"}, {"location": "zone/job/offer_harvester/04_record/#_23", "title": "\u95ee\u9898\u4e8c", "text": "<p>\u8bf7\u56de\u5fc6\u4f60\u5728\u5b66\u4e60\u6216\u5de5\u4f5c\u4e2d\u662f\u5982\u4f55\u4e0d\u65ad\u8d85\u8d8a\u81ea\u5df1\u8bbe\u5b9a\u5e76\u8fbe\u6210\u6709\u6311\u6218\u6027\u7684\u76ee\u6807\u7684\u7ecf\u5386\uff0c\u8bf7\u8be6\u7ec6\u63cf\u8ff0: -\u8fd9\u4e2a\u6709\u6311\u6218\u6027\u7684\u76ee\u6807\u5177\u4f53\u662f\u4ec0\u4e48?-\u4f60\u4e3a\u4ec0\u4e48\u60f3\u8981\u4e0d\u65ad\u8d85\u8d8a\u81ea\u5df1?\u4f60\u4e3a\u4e86\u5b8c\u6210\u76ee\u6807\u505a\u4e86\u4ec0\u4e48? -\u6700\u7ec8\u7684\u7ed3\u679c\u5982\u4f55? -\u8fc7\u7a0b\u5f53\u4e2d\u4f60\u6536\u83b7\u5230\u4e86\u4ec0\u4e48(\u77e5\u8bc6/\u6280\u80fd/\u7ecf\u9a8c\u7b49)?</p> <p>\u6311\u6218\u6027\u7684\u76ee\u6807\uff1a\u6211\u8ba4\u4e3a\u6211\u5728\u5b66\u4e60\u6216\u5de5\u4f5c\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5728\u9009\u62e9\u65f6\uff0c\u6211\u59cb\u7ec8\u503e\u5411\u4e8e\u53bb\u9009\u62e9\u5177\u6709\u6311\u6218\u6027\u7684\u9009\u9879\u3002\u4f8b\u5982\uff0c\u5728\u4e00\u5468\u591a\u5185\u5b8c\u6210\u6295\u5f71\u4eea\u7684\u624b\u90e8\u4ea4\u4e92\u7b97\u6cd5\u5b9e\u73b0\u4e0e\u5c55\u793a\u5e94\u7528\u3002 \u4e3a\u4ec0\u4e48&amp;\u4e3a\u4e86\u5b8c\u6210\u76ee\u6807\u505a\u4e86\u4ec0\u4e48\uff1a\u5728\u505a\u5177\u6709\u6311\u6218\u6027\u7684\u4efb\u52a1\u65f6\uff0c\u6211\u4f1a\u611f\u89c9\u975e\u5e38\u5174\u594b\uff0c\u975e\u5e38\u6709\u52a8\u529b\uff0c\u800c\u4e14\u4e00\u65e6\u76ee\u6807\u8fbe\u6210\u65f6\uff0c\u4f1a\u83b7\u5f97\u5de8\u5927\u7684\u6210\u5c31\u611f\uff0c\u5373\u4f7f\u6700\u7ec8\u4e0d\u80fd\u5982\u613f\u8fbe\u6210\uff0c\u590d\u76d8\u65f6\u4e5f\u4f1a\u6709\u6c89\u7538\u7538\u7684\u6536\u83b7\u611f\u3002\u5728\u5b8c\u6210\u624b\u90e8\u6295\u5f71\u4ea4\u4e92\u9879\u76ee\u65f6\uff0c\u6211\u9996\u5148\u82b1\u4e86\u4e8c\u5929\u65f6\u95f4\u5c3d\u5feb\u8c03\u7814\u548c\u786e\u5b9a\u6700\u6700\u7b80\u5316\u7684\u53ef\u884c\u65b9\u6848\uff0c\u7136\u540e\u82b1\u4e86\u4e00\u5929\u65f6\u95f4\u8d2d\u4e70\u786c\u4ef6\uff0c\u4e8c\u5929\u65f6\u95f4\u8fdb\u884c\u89e6\u63a7\u5b9e\u73b0\uff0c\u4e8c\u5929\u65f6\u95f4\u5b8c\u6210\u6295\u5f71\u8ffd\u8e2a\uff0c\u6700\u540e\u4e8c\u5929\u8fdb\u884c\u8c03\u8bd5\u548c\u53ef\u89c6\u5316\uff0c\u6700\u7ec8\u5b9e\u73b0\u4e86\u53ef\u5c55\u793a\u7684\u521d\u7248\u3002 \u6536\u83b7\uff1a\u6211\u6536\u83b7\u4e86\u5982\u4f55\u6839\u636e\u9650\u5b9a\u65f6\u95f4\u5bf9\u4efb\u52a1\u8fdb\u884c\u5206\u89e3\uff0c\u4ee5\u6700\u9ad8\u6548\u7a33\u59a5\u7684\u65b9\u5f0f\u8fbe\u6210\u7684\u5b9d\u8d35\u7ecf\u9a8c\u3002</p>"}, {"location": "zone/job/offer_harvester/04_record/#_24", "title": "\u95ee\u9898\u4e09", "text": "<p>\u8bf7\u56de\u5fc6\u4e00\u6b21\u4f60\u7684\u56e2\u961f\u5728\u5408\u4f5c\u4e0a\u9677\u5165\u4e86\u50f5\u5c40\u7684\u7ecf\u5386\u3002\u8bf7\u8be6\u7ec6\u63cf\u8ff0:\u5728\u8fd9\u4e2a\u5408\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u9047\u5230\u4e86\u4ec0\u4e48\u50f5\u5c40?\u9762\u5bf9\u8fd9\u4e2a\u50f5\u5c40\uff0c\u4f60\u662f\u5982\u4f55\u7406\u89e3\u7684?-\u4f60\u5177\u4f53\u505a\u4e86\u4ec0\u4e48\u6765\u6253\u7834\u8fd9\u4e2a\u50f5\u5c40\u5e76\u4fc3\u8fdb\u5408\u4f5c\u7684\u8fbe\u6210? -\u6700\u540e\u53d6\u5f97\u7684\u7ed3\u679c\u5982\u4f55?</p> <p>\u5408\u4f5c\u4efb\u52a1\uff1a\u5728\u6df1\u5149\u516c\u53f8\u8d1f\u8d23\u624b\u90e8\u4e0e\u6295\u5f71\u4ea4\u4e92\u7684\u7b97\u6cd5\u4e0e\u5e94\u7528\u5f00\u53d1\u65f6\uff0c\u5f53\u6211\u72ec\u81ea\u5b8c\u6210\u7b2c\u4e00\u7248\u4e4b\u540e\u3002\u540c\u65f6\uff0c\u4e0a\u7ea7\u6307\u6d3e\u4e86\u4e24\u4f4d\u524d\u540e\u7aef\u5f00\u53d1\u4eba\u5458\u4e0e\u4e00\u4f4d\u7b97\u6cd5\u5b9e\u4e60\u751f\u6765\u652f\u63f4\u9879\u76ee\u5f00\u53d1\uff0c\u9677\u5165\u4e86\u50f5\u5c40\uff1a\u4e0d\u77e5\u9053\u4e0b\u4e00\u6b65\u7684\u7b97\u6cd5\u8fed\u4ee3\u5de5\u4f5c\u5e94\u8be5\u4ece\u4f55\u5207\u5165\u3001\u5982\u4f55\u5206\u914d\u3002 \u5982\u4f55\u7406\u89e3\uff1a\u4e00\u65b9\u9762\uff0c\u7b97\u6cd5\u5b9e\u73b0\u4e86\u7ea6\u5b9a\u7684\u6240\u6709\u529f\u80fd\uff0c\u4f46\u53e6\u4e00\u65b9\u9762\uff0c\u7b97\u6cd5\u5b58\u5728\u7740\u5404\u7c7b\u95ee\u9898\u2014\u8ba1\u7b97\u6027\u80fd\u95ee\u9898\u3001\u7b97\u6cd5\u7684\u9c81\u68d2\u6027\u95ee\u9898\u3001\u5e94\u7528\u5c55\u793a\u5ea6\u95ee\u9898\u7b49\u3002\u5bf9\u7b97\u6cd5\u4f18\u5316\u8def\u5f84\u7684\u4e0d\u6e05\u6670\uff0c\u518d\u52a0\u4e0a\u5bf9\u65b0\u6765\u5408\u4f5c\u8005\u6280\u672f\u6808\u7684\u4e0d\u4e86\u89e3\uff0c\u5bfc\u81f4\u6211\u4e00\u65f6\u95f4\u65e0\u6cd5\u68b3\u7406\u51fa\u4e00\u4e2a\u6ee1\u610f\u7684\u5408\u4f5c\u65b9\u6848\u3002 \u6253\u7834\u50f5\u5c40\uff1a\u9996\u5148\uff0c\u6211\u68b3\u7406\u4e86\u7b97\u6cd5\u76ee\u524d\u5b58\u5728\u7684\u95ee\u9898\uff0c\u5c3d\u5feb\u4e0e\u4e0a\u7ea7\u5c55\u5f00\u8ba8\u8bba\uff0c\u786e\u5b9a\u7b97\u6cd5\u4f18\u5316\u65b9\u5411\u548c\u91cd\u70b9\uff0c\u5373\u79fb\u52a8\u7aef\u6027\u80fd\u4e0e\u5c55\u793a\u6027\uff1b\u53e6\u5916\uff0c\u627e\u5230\u7ec4\u5458\u4e86\u89e3\u4e86\u4ed6\u4eec\u4e4b\u524d\u505a\u8fc7\u7684\u9879\u76ee\uff1b\u7136\u540e\uff0c\u6839\u636e\u8ba8\u8bba\u4e0e\u8c03\u67e5\u7ed3\u679c\uff0c\u6211\u81ea\u5df1\u5148\u8bbe\u8ba1\u4e86\u4f18\u5316\u7684\u65b9\u6848\uff1b\u4e4b\u540e\uff0c\u4e0e\u7ec4\u5458\u8ba8\u8bba\uff0c\u4fee\u6539\u5b8c\u5584\u65b9\u6848\uff1b\u6700\u540e\uff0c\u4e0e\u4e0a\u7ea7\u8ba8\u8bba\u6572\u5b9a\u6700\u7ec8\u65b9\u6848\u3002 \u53d6\u5f97\u7684\u7ed3\u679c\uff1a\u987a\u5229\u5b8c\u6210\u9879\u76ee\u8fed\u4ee3\uff0c\u5f97\u5230\u7532\u65b9\u8ba4\u53ef\uff0c\u9879\u76ee\u8fd8\u83b7\u6311\u6218\u676f\u5168\u56fd\u94f6\u5956\u3002</p>"}, {"location": "zone/job/offer_harvester/04_record/#_25", "title": "\u95ee\u9898\u56db", "text": "<p>\u65b0\u9886\u57df\u53ca\u76ee\u6807\uff1a\u624b\u90e8\u4ea4\u4e92\u7b97\u6cd5\u4e0e\u7cfb\u7edf\u8bbe\u8ba1\u3002\u76ee\u6807\u662f\u5728\u4e00\u5468\u591a\u5185\u5b8c\u6210\u6295\u5f71\u4eea\u7684\u624b\u90e8\u4ea4\u4e92\u7b97\u6cd5\u5b9e\u73b0\u4e0e\u5c55\u793a\u5e94\u7528\u3002 \u4e3a\u4ec0\u4e48&amp;\u4e3a\u4e86\u5b8c\u6210\u76ee\u6807\u505a\u4e86\u4ec0\u4e48\uff1a\u5728\u5b8c\u6210\u624b\u90e8\u6295\u5f71\u4ea4\u4e92\u9879\u76ee\u65f6\uff0c\u6211\u9996\u5148\u82b1\u4e86\u4e8c\u5929\u65f6\u95f4\u5c3d\u5feb\u8c03\u7814\u548c\u786e\u5b9a\u6700\u6700\u7b80\u5316\u7684\u53ef\u884c\u65b9\u6848\uff0c\u7136\u540e\u82b1\u4e86\u4e00\u5929\u65f6\u95f4\u8d2d\u4e70\u786c\u4ef6\uff0c\u4e8c\u5929\u65f6\u95f4\u8fdb\u884c\u89e6\u63a7\u5b9e\u73b0\uff0c\u4e8c\u5929\u65f6\u95f4\u5b8c\u6210\u6295\u5f71\u8ffd\u8e2a\uff0c\u6700\u540e\u4e8c\u5929\u8fdb\u884c\u8c03\u8bd5\u548c\u53ef\u89c6\u5316\uff0c\u6700\u7ec8\u5b9e\u73b0\u4e86\u53ef\u5c55\u793a\u7684\u521d\u7248\u3002 \u6536\u83b7\uff1a\u6211\u6536\u83b7\u4e86\u5982\u4f55\u6839\u636e\u9650\u5b9a\u65f6\u95f4\u5bf9\u4efb\u52a1\u8fdb\u884c\u5206\u89e3\uff0c\u4ee5\u6700\u9ad8\u6548\u7a33\u59a5\u7684\u65b9\u5f0f\u8fbe\u6210\u7684\u5b9d\u8d35\u7ecf\u9a8c\u3002</p>"}, {"location": "zone/job/offer_harvester/04_record/#_26", "title": "\u95ee\u9898\u4e94", "text": "<p>\u5408\u4f5c\u4efb\u52a1\uff1a\u5728\u6df1\u5149\u516c\u53f8\u8d1f\u8d23\u624b\u90e8\u4e0e\u6295\u5f71\u4ea4\u4e92\u7684\u7b97\u6cd5\u4e0e\u5e94\u7528\u5f00\u53d1\u65f6\uff0c\u5f53\u6211\u72ec\u81ea\u5b8c\u6210\u7b2c\u4e00\u7248\u4e4b\u540e\u3002\u540c\u65f6\uff0c\u4e0a\u7ea7\u6307\u6d3e\u4e86\u4e24\u4f4d\u524d\u540e\u7aef\u5f00\u53d1\u4eba\u5458\u4e0e\u4e00\u4f4d\u7b97\u6cd5\u5b9e\u4e60\u751f\u6765\u652f\u63f4\u9879\u76ee\u5f00\u53d1\uff0c\u5408\u4f5c\u8fdb\u884c\u4e0b\u4e00\u6b65\u7684\u7b97\u6cd5\u8fed\u4ee3\u5de5\u4f5c\u3002 \u9047\u5230\u7684\u56f0\u96be\uff1a\u4e00\u65b9\u9762\uff0c\u7b97\u6cd5\u5b9e\u73b0\u4e86\u7ea6\u5b9a\u7684\u6240\u6709\u529f\u80fd\uff0c\u4f46\u53e6\u4e00\u65b9\u9762\uff0c\u7b97\u6cd5\u5b58\u5728\u7740\u5404\u7c7b\u95ee\u9898\u2014\u8ba1\u7b97\u6027\u80fd\u95ee\u9898\u3001\u7b97\u6cd5\u7684\u9c81\u68d2\u6027\u95ee\u9898\u3001\u5e94\u7528\u5c55\u793a\u5ea6\u95ee\u9898\u7b49\u3002\u5bf9\u7b97\u6cd5\u4f18\u5316\u8def\u5f84\u7684\u4e0d\u6e05\u6670\uff0c\u518d\u52a0\u4e0a\u5bf9\u65b0\u6765\u5408\u4f5c\u8005\u6280\u672f\u6808\u7684\u4e0d\u4e86\u89e3\uff0c\u5bfc\u81f4\u6211\u4e00\u65f6\u95f4\u65e0\u6cd5\u68b3\u7406\u51fa\u4e00\u4e2a\u6ee1\u610f\u7684\u5408\u4f5c\u65b9\u6848\u3002 \u505a\u51fa\u7684\u52aa\u529b\uff1a\u9996\u5148\uff0c\u6211\u8ba4\u4e3a\u6709\u6548\u6c9f\u901a\u7684\u524d\u63d0\uff0c\u662f\u81ea\u5df1\u5df2\u7ecf\u505a\u4e86\u5145\u5206\u7684\u601d\u8003\u548c\u51c6\u5907\uff0c\u56e0\u6b64\u6211\u7b2c\u4e00\u6b65\u662f\u68b3\u7406\u4e86\u7b97\u6cd5\u76ee\u524d\u5b58\u5728\u7684\u95ee\u9898\uff0c\u5c3d\u5feb\u4e0e\u4e0a\u7ea7\u5c55\u5f00\u8ba8\u8bba\uff0c\u786e\u5b9a\u7b97\u6cd5\u4f18\u5316\u65b9\u5411\u548c\u91cd\u70b9\uff0c\u5373\u79fb\u52a8\u7aef\u6027\u80fd\u4e0e\u5c55\u793a\u6027\uff1b\u5176\u6b21\uff0c\u5728\u4e0e\u964c\u751f\u4eba\u6c9f\u901a\u65f6\uff0c\u9996\u5148\u627e\u5230\u7ec4\u5458\u4e86\u89e3\u4e86\u4ed6\u4eec\u4e4b\u524d\u505a\u8fc7\u7684\u9879\u76ee\uff0c\u8fd9\u662f\u6700\u76f4\u63a5\u7684\u4e86\u89e3\u65b9\u5f0f\uff1b\u7136\u540e\uff0c\u6839\u636e\u8ba8\u8bba\u4e0e\u8c03\u67e5\u7ed3\u679c\uff0c\u6211\u81ea\u5df1\u5148\u8bbe\u8ba1\u4e86\u4f18\u5316\u7684\u65b9\u6848\uff1b\u4e4b\u540e\uff0c\u518d\u6b21\u4e0e\u7ec4\u5458\u8ba8\u8bba\u4ea4\u6d41\uff0c\u4fee\u6539\u5b8c\u5584\u65b9\u6848\uff0c\u4ee5\u5177\u4f53\u4efb\u52a1\u4e3a\u5f15\u5bfc\u8fdb\u884c\u4ea4\u6d41\uff0c\u8fd9\u662f\u66f4\u5bb9\u6613\u6df1\u5165\u7684\u4e86\u89e3\u65b9\u5f0f\u3002 \u53d6\u5f97\u7684\u7ed3\u679c\uff1a\u4e0e\u964c\u751f\u4eba\u901a\u529b\u5408\u4f5c\u987a\u5229\u5b8c\u6210\u9879\u76ee\u8fed\u4ee3\uff0c\u5f97\u5230\u7532\u65b9\u8ba4\u53ef\uff0c\u9879\u76ee\u8fd8\u83b7\u6311\u6218\u676f\u5168\u56fd\u94f6\u5956\u3002</p>"}, {"location": "zone/job/offer_harvester/04_record/#ai", "title": "AI\u9762\u8bd5", "text": "<p>\u5173\u4e8eAI\u89c6\u9891\u9762\u8bd5\u7684\u4e00\u4e07\u4e2a\u4e3a\u4ec0\u4e48 (qq.com)</p> <p>2022 \u6691\u671f\u5b9e\u4e60\uff5c\u6b27\u5bb6\u9762\u8bd5\u5fc5\u5907\u529f\u8bfe\uff01\u8fd9\u4e09\u6bb5\u95ee\u9898\u4f60\u5fc5\u987b\u4f1a\u7b54\uff01 (qq.com)</p>"}, {"location": "zone/job/offer_harvester/04_record/#_27", "title": "\u4e2d\u6587\u95ee\u9898", "text": ""}, {"location": "zone/job/offer_harvester/04_record/#_28", "title": "\u6210\u5c31\u611f\u7684\u7ecf\u5386", "text": "<ul> <li>\u4e3e\u4f8b1\u4e2a\u6700\u6709\u6210\u5c31\u611f\u7684\u7ecf\u5386\uff0c\u63cf\u8ff0\u662f\u4ec0\u4e48\u8ba9\u4f60\u6700\u6709\u6210\u5c31\u611f\u3001\u4f60\u91c7\u53d6\u4e86\u4ec0\u4e48\u884c\u52a8\u3001\u4ece\u4e2d\u6536\u83b7\u4e86\u4ec0\u4e48</li> </ul> <ul> <li>\u5b66\u6821\uff1a</li> <li>\u76ee\u6807\u662f\uff0c\u8981\u6c42\u5728\u534a\u4e2a\u6708\u5185\u5b8c\u6210\u5b9e\u65f6\u7684\u5149\u7167\u4f30\u8ba1\u7b97\u6cd5\u7684\u5b9e\u73b0\u4e0e\u96c6\u6210\u3002</li> <li>\u96be\u5ea6\u662f\uff0c\u79fb\u52a8\u7aef\u7cfb\u7edf\u5bf9\u7b97\u6cd5\u8ba1\u7b97\u6548\u7387\u7684\u8981\u6c42\u6bd4\u8f83\u9ad8\uff0c\u73b0\u6709\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u53ef\u80fd\u4e0d\u9002\u7528\u3002</li> <li>\u5177\u4f53\u8fc7\u7a0b\u662f\uff0c\u6211\u9996\u5148\u5c06\u5df2\u590d\u73b0\u7684\u4ee3\u7801\u8fdb\u884c\u6d4b\u8bd5\uff0c\u5feb\u901f\u786e\u5b9a\u57fa\u4e8e\u7f51\u7edc\u7684\u7b97\u6cd5\u786e\u5b9e\u4e0d\u9002\u7528\u3002\u7136\u540e\uff0c\u6211\u8c03\u7814\u4e86\u4f20\u7edf\u7684\u57fa\u4e8e\u7ebf\u6027\u65b9\u6cd5\u7684\u5149\u7167\u4f30\u8ba1\u65b9\u7a0b\uff0c\u540c\u65f6\u901a\u8fc7\u5b66\u957f\u5b66\u59d0\u548c\u535a\u5ba2\u7b49\u624b\u6bb5\u5411\u6709\u7ecf\u9a8c\u7684\u4eba\u8fdb\u884c\u8bf7\u6559\uff0c\u6700\u7ec8\u786e\u5b9a\u4f7f\u7528\u57fa\u4e8e\u7403\u8c10\u53d8\u6362\u7684\u7ebf\u6027\u4f18\u5316\u65b9\u6cd5\u8fdb\u884c\u5149\u7167\u4f30\u8ba1\uff0c\u5b9e\u73b0\u4e86\u8f83\u597d\u7684\u7ed3\u679c\u3002</li> <li>\u6536\u83b7\u662f\uff0c\u5982\u4f55\u5feb\u901f\u5730\u8fdb\u884c\u6392\u9664\u6cd5\uff0c\u9501\u5b9a\u6838\u5fc3\u95ee\u9898\uff0c\u624d\u80fd\u63d0\u9ad8\u6548\u7387\u3002\u540c\u65f6\uff0c\u8981\u591a\u5229\u7528\u8eab\u8fb9\u7684\u8d44\u6e90\uff0c\u7ad9\u5728\u5de8\u4eba\u7684\u80a9\u8180\u7684\u770b\u4e16\u754c\u3002</li> <li>\u516c\u53f8\uff1a</li> <li>\u76ee\u6807\u662f\uff0c\u5728\u4e00\u5468\u591a\u5185\u5b8c\u6210\u6295\u5f71\u4eea\u7684\u624b\u90e8\u4ea4\u4e92\u7b97\u6cd5\u5b9e\u73b0\u4e0e\u5c55\u793a\u5e94\u7528\u3002</li> <li>\u96be\u5ea6\u662f\uff0c\u5bf9\u4e00\u4e2a\u964c\u751f\u7684\u9886\u57df\uff0c\u4e24\u5468\u5185\u5b8c\u6210\u6280\u672f\u9009\u578b\u3001\u7b97\u6cd5\u5b9e\u73b0\u4e0e\u5c55\u793a\u7cfb\u7edf\u642d\u5efa\u3002</li> <li>\u5177\u4f53\u8fc7\u7a0b\u662f\uff0c\u5728\u5b8c\u6210\u624b\u90e8\u6295\u5f71\u4ea4\u4e92\u9879\u76ee\u65f6\uff0c\u6211\u9996\u5148\u82b1\u4e86\u4e8c\u5929\u65f6\u95f4\u5c3d\u5feb\u8c03\u7814\u548c\u786e\u5b9a\u6700\u6700\u7b80\u5316\u7684\u53ef\u884c\u65b9\u6848\uff0c\u7136\u540e\u82b1\u4e86\u4e00\u5929\u65f6\u95f4\u8d2d\u4e70\u786c\u4ef6\uff0c\u4e8c\u5929\u65f6\u95f4\u8fdb\u884c\u89e6\u63a7\u5b9e\u73b0\uff0c\u4e8c\u5929\u65f6\u95f4\u5b8c\u6210\u6295\u5f71\u8ffd\u8e2a\uff0c\u6700\u540e\u4e8c\u5929\u8fdb\u884c\u8c03\u8bd5\u548c\u53ef\u89c6\u5316\uff0c\u6700\u7ec8\u5b9e\u73b0\u4e86\u53ef\u5c55\u793a\u7684\u521d\u7248\u3002</li> <li>\u6536\u83b7\u662f\uff0c\u6211\u6536\u83b7\u4e86\u5982\u4f55\u6839\u636e\u9650\u5b9a\u65f6\u95f4\u5bf9\u4efb\u52a1\u8fdb\u884c\u5206\u89e3\uff0c\u4ee5\u6700\u9ad8\u6548\u7a33\u59a5\u7684\u65b9\u5f0f\u8fbe\u6210\u7684\u5b9d\u8d35\u7ecf\u9a8c\u3002</li> </ul>"}, {"location": "zone/job/offer_harvester/04_record/#_29", "title": "\u632b\u6298\u548c\u56f0\u96be", "text": "<ul> <li> <p>\u4f60\u5728xx\u516c\u53f8\u9047\u5230\u4e86\u4ec0\u4e48\u632b\u6298\u56f0\u96be\uff1f\u4f60\u662f\u5982\u4f55\u8c03\u6574\u53bb\u5e94\u5bf9\u7684\uff1f\u4f60\u6709\u4ec0\u4e48\u590d\u76d8\u548c\u53cd\u601d\uff1f</p> </li> <li> <p>\u4f60\u5728xx\u516c\u53f8\u9047\u5230\u4ec0\u4e48\u4e0d\u719f\u6089\u7684\u4efb\u52a1\uff1f\u4f60\u901a\u8fc7\u4e86\u4ec0\u4e48\u989d\u5916\u7684\u52aa\u529b\u53bb\u5b8c\u6210\uff1f\u5177\u4f53\u505a\u4e86\u4ec0\u4e48\uff1f</p> </li> <li> <p>\u4e3e\u4f8b1\u4e2a\u4f60\u5728\u964c\u751f\u7684\u5de5\u4f5c\u9886\u57df\u7684\u7ecf\u5386\uff0c\u63cf\u8ff0\u4f60\u9047\u5230\u7684\u6311\u6218\u6709\u54ea\u4e9b\u3001\u600e\u4e48\u53d6\u5f97\u7a81\u7834\u7684</p> </li> </ul> <ul> <li>\u540c\u4e0a\u3002</li> </ul>"}, {"location": "zone/job/offer_harvester/04_record/#_30", "title": "\u5408\u4f5c\u7684\u7ecf\u5386", "text": "<ul> <li>\u8bf7\u56de\u5fc6\u4e00\u6b21\u4f60\u7684\u56e2\u961f\u5728\u5408\u4f5c\u4e0a\u9677\u5165\u4e86\u50f5\u5c40\u7684\u7ecf\u5386\u3002\u8bf7\u8be6\u7ec6\u63cf\u8ff0:\u5728\u8fd9\u4e2a\u5408\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u9047\u5230\u4e86\u4ec0\u4e48\u50f5\u5c40?\u9762\u5bf9\u8fd9\u4e2a\u50f5\u5c40\uff0c\u4f60\u662f\u5982\u4f55\u7406\u89e3\u7684?-\u4f60\u5177\u4f53\u505a\u4e86\u4ec0\u4e48\u6765\u6253\u7834\u8fd9\u4e2a\u50f5\u5c40\u5e76\u4fc3\u8fdb\u5408\u4f5c\u7684\u8fbe\u6210?-\u6700\u540e\u53d6\u5f97\u7684\u7ed3\u679c\u5982\u4f55?</li> </ul> <ul> <li>\u5b66\u6821\uff1a</li> <li>\u516c\u53f8\uff1a</li> <li>\u5408\u4f5c\u4efb\u52a1\uff1a\u5728\u6df1\u5149\u516c\u53f8\u8d1f\u8d23\u624b\u90e8\u4e0e\u6295\u5f71\u4ea4\u4e92\u7684\u7b97\u6cd5\u4e0e\u5e94\u7528\u5f00\u53d1\u65f6\uff0c\u5f53\u6211\u72ec\u81ea\u5b8c\u6210\u7b2c\u4e00\u7248\u4e4b\u540e\u3002\u540c\u65f6\uff0c\u4e0a\u7ea7\u6307\u6d3e\u4e86\u4e24\u4f4d\u524d\u540e\u7aef\u5f00\u53d1\u4eba\u5458\u4e0e\u4e00\u4f4d\u7b97\u6cd5\u5b9e\u4e60\u751f\u6765\u652f\u63f4\u9879\u76ee\u5f00\u53d1\uff0c\u5408\u4f5c\u8fdb\u884c\u4e0b\u4e00\u6b65\u7684\u7b97\u6cd5\u8fed\u4ee3\u5de5\u4f5c\u3002   \u9047\u5230\u7684\u56f0\u96be\uff1a\u5bf9\u7b97\u6cd5\u4f18\u5316\u8def\u5f84\u7684\u4e0d\u6e05\u6670\uff0c\u518d\u52a0\u4e0a\u5bf9\u65b0\u6765\u5408\u4f5c\u8005\u6280\u672f\u6808\u7684\u4e0d\u4e86\u89e3\uff0c\u5bfc\u81f4\u6211\u4e00\u65f6\u95f4\u65e0\u6cd5\u68b3\u7406\u51fa\u4e00\u4e2a\u6ee1\u610f\u7684\u5408\u4f5c\u65b9\u6848\u3002   \u505a\u51fa\u7684\u52aa\u529b\uff1a\u9996\u5148\uff0c\u6211\u8ba4\u4e3a\u6709\u6548\u6c9f\u901a\u7684\u524d\u63d0\uff0c\u662f\u81ea\u5df1\u5df2\u7ecf\u505a\u4e86\u5145\u5206\u7684\u601d\u8003\u548c\u51c6\u5907\uff0c\u56e0\u6b64\u6211\u7b2c\u4e00\u6b65\u662f\u68b3\u7406\u4e86\u7b97\u6cd5\u76ee\u524d\u5b58\u5728\u7684\u95ee\u9898\uff0c\u5c3d\u5feb\u4e0e\u4e0a\u7ea7\u5c55\u5f00\u8ba8\u8bba\uff0c\u786e\u5b9a\u7b97\u6cd5\u4f18\u5316\u65b9\u5411\u548c\u91cd\u70b9\uff0c\u5373\u79fb\u52a8\u7aef\u6027\u80fd\u4e0e\u5c55\u793a\u6027\uff1b\u5176\u6b21\uff0c\u5728\u4e0e\u964c\u751f\u4eba\u6c9f\u901a\u65f6\uff0c\u9996\u5148\u627e\u5230\u7ec4\u5458\u4e86\u89e3\u4e86\u4ed6\u4eec\u4e4b\u524d\u505a\u8fc7\u7684\u9879\u76ee\uff0c\u8fd9\u662f\u6700\u76f4\u63a5\u7684\u4e86\u89e3\u65b9\u5f0f\uff1b\u7136\u540e\uff0c\u6839\u636e\u8ba8\u8bba\u4e0e\u8c03\u67e5\u7ed3\u679c\uff0c\u6211\u81ea\u5df1\u5148\u8bbe\u8ba1\u4e86\u4f18\u5316\u7684\u65b9\u6848\uff1b\u4e4b\u540e\uff0c\u518d\u6b21\u4e0e\u7ec4\u5458\u8ba8\u8bba\u4ea4\u6d41\uff0c\u4fee\u6539\u5b8c\u5584\u65b9\u6848\uff0c\u4ee5\u5177\u4f53\u4efb\u52a1\u4e3a\u5f15\u5bfc\u8fdb\u884c\u4ea4\u6d41\uff0c\u8fd9\u662f\u66f4\u5bb9\u6613\u6df1\u5165\u7684\u4e86\u89e3\u65b9\u5f0f\u3002   \u53d6\u5f97\u7684\u7ed3\u679c\uff1a\u4e0e\u964c\u751f\u4eba\u901a\u529b\u5408\u4f5c\u987a\u5229\u5b8c\u6210\u9879\u76ee\u8fed\u4ee3\uff0c\u5f97\u5230\u7532\u65b9\u8ba4\u53ef\uff0c\u9879\u76ee\u8fd8\u83b7\u6311\u6218\u676f\u5168\u56fd\u94f6\u5956\u3002</li> </ul>"}, {"location": "zone/job/offer_harvester/04_record/#_31", "title": "\u82f1\u8bed\u95ee\u9898", "text": "<p>why This Position? why Loreal? Why You?</p> <ul> <li>Why this position? \u4e00\u76f4\u4ee5\u6765\u6211\u90fd\u5bf9\u589e\u5f3a\u73b0\u5b9e\u6280\u672f\u4ee5\u53ca\u8ba1\u7b97\u673a\u89c6\u89c9\u3001\u56fe\u5f62\u5b66\u6280\u672f\u975e\u5e38\u611f\u5174\u8da3\uff0c\u540c\u65f6\u4e5f\u4e00\u76f4\u81f4\u529b\u4e8e\u7528\u589e\u5f3a\u73b0\u5b9e\u7684\u76f8\u5173\u6280\u672f\u6765\u63d0\u9ad8\u6211\u4eec\u7684\u751f\u6d3b\u4f53\u9a8c\u3002\u5982\u679c\u53ef\u4ee5\u5c06\u589e\u5f3a\u73b0\u5b9e\u3001\u5149\u7167\u4f30\u8ba1\u7684\u76f8\u5173\u6280\u672f\u4e0e\u865a\u62df\u8bd5\u5986\u7b49\u573a\u666f\u7ed3\u5408\u8d77\u6765\uff0c\u90a3\u5c06\u662f\u4e00\u4e2a\u5f88\u9177\u7684\u4e8b\u60c5\u3002\u800c\u6211\u6709\u5174\u8da3\u3001\u4e5f\u6709\u4fe1\u5fc3\u53ef\u4ee5\u505a\u597d\u8fd9\u4e00\u7cfb\u5217\u7684\u4e8b\u60c5\u3002</li> </ul> <p>I've always been fascinated by augmented reality, computer vision, and graphics technology, and using these to enhance our daily life experiences. It would be awesome to combine these technologies with virtual makeup trials using lighting estimation. I'm confident and interested in doing all of this.</p> <ul> <li>Why Loreal? Loreal\u516c\u53f8\u662f\u5927\u578b\u7684\u8de8\u56fd\u7f8e\u5986\u516c\u53f8\u3002\u4e00\u65b9\u9762\uff0cLoreal\u53ef\u4ee5\u4e3a\u6211\u60f3\u8fdb\u884c\u7684\u7814\u7a76\u548c\u521b\u9020\u63d0\u4f9b\u5145\u8db3\u7684\u8d44\u6e90\u548c\u542f\u53d1\uff1b\u4e00\u65b9\u9762\uff0cLoreal\u53ef\u4ee5\u63d0\u4f9b\u76f8\u5173\u6280\u672f\u843d\u5730\u7684\u771f\u5b9e\u7684\u3001\u5e7f\u6cdb\u7684\u5e94\u7528\u573a\u666f\u3002\u53ef\u4ee5\u66f4\u597d\u5730\u5b9e\u73b0\u6211\u7684\u4ef7\u503c\u8ffd\u6c42\uff0c\u6211\u4e5f\u53ef\u4ee5\u4e3a\u516c\u53f8\u505a\u51fa\u5207\u5b9e\u7684\u8d21\u732e\u3002</li> </ul> <p>L'Or\u00e9al is a big beauty company with the resources to support my research and inspire my creativity. They offer real-world applications for related technologies, allowing me to both pursue my goals and contribute to the company.</p> <ul> <li>Why You? \u4e00\u65b9\u9762\uff0c\u6211\u5728\u589e\u5f3a\u73b0\u5b9e\u7b49\u76f8\u5173\u7684\u9886\u57df\u505a\u8fc7\u4e00\u4e9b\u4e0d\u9519\u7684\u5de5\u4f5c\uff0c\u6709\u4e00\u5b9a\u7684\u6280\u672f\u548c\u7ecf\u9a8c\u7684\u79ef\u7d2f\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u6211\u5177\u6709\u826f\u597d\u7684\u5b66\u4e60\u80fd\u529b\uff0c\u5224\u65ad\u529b\uff0c\u6297\u538b\u80fd\u529b\uff0c\u5bf9\u6709\u6311\u6218\u7684\u4efb\u52a1\u6709\u91ce\u5fc3\u548c\u70ed\u60c5\u3002</li> </ul> <p>I've done some impressive work in AR and related fields. Plus, I have excellent learning agility and judgment skills, can handle pressure well, and am ambitious and passionate about tackling challenging tasks. Also, I am empathy and resilience.</p>"}, {"location": "zone/job/offer_harvester/05_knowledge/", "title": "\u8003\u5bdf\u77e5\u8bc6\u6c47\u603b", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#_1", "title": "\u53c2\u8003", "text": "<p>\u3010\u6e38\u620f\u5f00\u53d1\u9762\u7ecf\u6c47\u603b\u3011- \u56fe\u5f62\u5b66\u57fa\u7840\u7bc7 - \u77e5\u4e4e (zhihu.com)</p> <p>\u96f6\u57fa\u7840\u975e\u79d1\u73ed\u6821\u62db\u56fe\u5f62/\u5f15\u64ce/\u6e38\u620f\u9762\u7ecf\u957f\u6587\u5206\u4eab - \u77e5\u4e4e (zhihu.com)</p>"}, {"location": "zone/job/offer_harvester/05_knowledge/#_2", "title": "\u9879\u76ee\u4e0e\u5f00\u653e\u6027\u95ee\u9898", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#_3", "title": "\u4ecb\u7ecd\u4e00\u4e0b\u505a\u7684\u9879\u76ee\u662f\u57fa\u4e8e\u4ec0\u4e48\uff0c\u5728\u5176\u4e2d\u62c5\u5f53\u4e86\u600e\u6837\u7684\u89d2\u8272\uff1f", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#_4", "title": "\u56fe\u5f62\u5b66\u4e0e\u6e38\u620f\u76f8\u5173", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#_5", "title": "\u6e32\u67d3\u7ba1\u7ebf", "text": "<p>\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u662f\u56fe\u5f62\u5b66\u77e5\u8bc6\u8003\u5bdf\u6700\u91cd\u8981\u7684\u4e00\u4e2a\u95ee\u9898\uff0c\u7edd\u5bf9\u662f\u6700\u9ad8\u9891\u7684\uff0c\u5fc5\u987b\u638c\u63e1\u3002\u95ee\u6cd5\u6709\u5f88\u591a\u79cd\uff0c\u6bd4\u5982\u5c4f\u5e55\u4e2d\u4e00\u4e2a\u50cf\u7d20\u662f\u600e\u4e48\u7ed8\u5236\u51fa\u6765\u7684\uff0c\u7ed8\u5236\u51fa\u4e00\u5e45\u56fe\u50cf\u7684\u5177\u4f53\u8fc7\u7a0b\u7b49\u3002</p>"}, {"location": "zone/job/offer_harvester/05_knowledge/#opengl", "title": "\u57fa\u672c\u6d41\u7a0b\uff08OpenGL\uff09", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#1-vertex-data", "title": "1. \u9876\u70b9\u6570\u636e\uff08Vertex data\uff09", "text": "<ul> <li>\u9876\u70b9\u6570\u636e\u4e00\u822c\u5305\u542b\u9876\u70b9\u4f4d\u7f6e\u3001\u7eb9\u7406\u5750\u6807\u3001\u9876\u70b9\u989c\u8272\u7b49\u9876\u70b9\u5c5e\u6027\u3002</li> </ul>"}, {"location": "zone/job/offer_harvester/05_knowledge/#2-vertex-shader", "title": "2. \u9876\u70b9\u7740\u8272\u5668\uff08Vertex Shader\uff09", "text": "<ul> <li> <p>\u5750\u6807\u53d8\u6362 \uff1a\u5bf9\u4f20\u5165\u7684\u9876\u70b9\u6570\u636e\u8fdb\u884c\u5750\u6807\u53d8\u6362\uff0c\u7531\u5c40\u90e8\u5750\u6807\u5230\u4e16\u754c\u5750\u6807\u5230\u76f8\u673a\u5750\u6807\u518d\u5230\u88c1\u526a\u5750\u6807\u3002\u5373\u901a\u8fc7\u6a21\u578b\u77e9\u9635\u3001\u89c2\u5bdf\u77e9\u9635\u3001\u6295\u5f71\u77e9\u9635\uff08\u5373MVP\u77e9\u9635\uff09\u8ba1\u7b97\u51fa\u9876\u70b9\u5728\u88c1\u526a\u7a7a\u95f4\uff08clip space\uff09\u4e2d\u7684\u5750\u6807\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5bf9\u6cd5\u7ebf\u5411\u91cf\u7684\u53d8\u6362\u4e0d\u53ef\u4ee5\u7b80\u5355\u5730\u53f3\u4e58MVP\u77e9\u9635\uff0c\u800c\u5e94\u8be5\u53f3\u4e58MVP\u7684\u9006\u77e9\u9635\u7684\u8f6c\u7f6e\u77e9\u9635\uff0c\u5373 (MVP\\(^{-1}\\))\\(^T\\)\u3002</p> </li> <li> <p>\u9876\u70b9\u7740\u8272 \uff1a\u9876\u70b9\u7740\u8272\u5668\u662f\u53ef\u7f16\u7a0b\u7684\uff0c\u53ef\u4ee5\u5728\u6b64\u9636\u6bb5\u8fdb\u884c \u5e73\u9762\u7740\u8272\uff08Flat Shading\uff09 \u6216 \u9ad8\u6d1b\u5fb7\u7740\u8272\uff08Gouraud Shading\uff09 \uff0c\u7136\u540e\u7ecf\u8fc7\u540e\u9762\u7684\u5149\u6805\u5316\u64cd\u4f5c\u63d2\u503c\u5f97\u5230\u5404\u4e2a\u7247\u5143\u7684\u989c\u8272\uff0c\u4f46\u7531\u4e8e\u8fd9\u79cd\u65b9\u6cd5\u5f97\u5230\u7684\u5149\u7167\u6bd4\u8f83\u4e0d\u81ea\u7136\uff0c\u6240\u4ee5\u4e00\u822c\u5728\u7247\u6bb5\u7740\u8272\u5668\u8fdb\u884c\u5149\u7167\u8ba1\u7b97\u3002</p> </li> </ul>"}, {"location": "zone/job/offer_harvester/05_knowledge/#3", "title": "3. *\u66f2\u9762\u7ec6\u5206", "text": "<ul> <li>\u66f2\u9762\u7ec6\u5206\u662f\u5229\u7528\u9576\u5d4c\u5316\u5904\u7406\u6280\u672f\u5bf9\u4e09\u89d2\u9762\u8fdb\u884c\u7ec6\u5206\uff0c\u4ee5\u6b64\u6765\u589e\u52a0\u7269\u4f53\u8868\u9762\u7684\u4e09\u89d2\u9762\u7684\u6570\u91cf\u3002</li> </ul>"}, {"location": "zone/job/offer_harvester/05_knowledge/#4-geometry-shader", "title": "4. *\u51e0\u4f55\u7740\u8272\u5668\uff08Geometry Shader\uff09", "text": "<ul> <li>\u5bf9\u8f93\u5165\u7684\u56fe\u5143\uff08\u70b9\u3001\u7ebf\u7b49\uff09\u8fdb\u884c\u64cd\u4f5c\uff0c\u6bd4\u5982\u5c06\u8f93\u5165\u7684\u70b9\u6216\u7ebf\u6269\u5c55\u6210\u591a\u8fb9\u5f62\u3002</li> </ul>"}, {"location": "zone/job/offer_harvester/05_knowledge/#5", "title": "5. \u56fe\u5143\u7ec4\u88c5", "text": "<ul> <li>\u56fe\u5143\u88c5\u914d \uff1a\u5c06\u8f93\u5165\u7684\u9876\u70b9\u7ec4\u88c5\u6210\u6307\u5b9a\u7684\u56fe\u5143\uff0c\u5373\u6839\u636e\u7d22\u5f15\u5c06\u9876\u70b9\u94fe\u63a5\u5728\u4e00\u8d77\uff0c\u7ec4\u6210\u70b9\u3001\u7ebf\u3001\u9762\u7b49\u56fe\u5143\u3002</li> <li>\u89c6\u9525\u88c1\u526a \uff1a\u88c1\u526a\u6389\u89c6\u9525\u4f53\u5916\u7684\u56fe\u5143\u6216\u56fe\u5143\u5728\u89c6\u9525\u4f53\u5916\u7684\u90e8\u5206\uff08\u88c1\u526a\u8fc7\u7a0b\uff09\u3002</li> <li>\u900f\u89c6\u9664\u6cd5 \uff1a\u5c06\u88c1\u526a\u7a7a\u95f4\u4e2d\u9876\u70b9\u76844\u4e2a\u5206\u91cf\u90fd\u9664\u4ee5 \\(w\\) \u5206\u91cf\uff0c\u5c06\u9876\u70b9\u5750\u6807\u8f6c\u6362\u5230NDC\u7a7a\u95f4\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u900f\u89c6\u9664\u6cd5\u5bf9\u4e8e\u9876\u70b9\u7684\u4e09\u7ef4\u5750\u6807\u7a7a\u95f4\u6765\u8bf4\u662f\u975e\u7ebf\u6027\u7684\u53d8\u6362\uff0c\u56e0\u6b64\u5728\u6839\u636eNDC\u7a7a\u95f4\u6216\u4e4b\u540e\u7684\u5c4f\u5e55\u7a7a\u95f4\u7684\u9876\u70b9\u5750\u6807\u5bf9\u9876\u70b9\u5c5e\u6027\u8fdb\u884c\u63d2\u503c\u8ba1\u7b97\u65f6\uff0c\u9700\u8981\u505a\u900f\u89c6\u77eb\u6b63\u3002</li> <li>\u89c6\u53e3\u53d8\u6362 \uff1a\u5c06\u9876\u70b9\u5750\u6807\u4eceNDC\u7a7a\u95f4\uff08\u4e09\u7ef4\uff09\u53d8\u6362\u5230\u5c4f\u5e55\u7a7a\u95f4\uff08\u4e8c\u7ef4\uff09\u3002</li> </ul>"}, {"location": "zone/job/offer_harvester/05_knowledge/#6", "title": "6. \u5149\u6805\u5316", "text": "<ul> <li>\u5149\u6805\u5316\u662f\u5c06\u8fde\u7eed\u7684\u56fe\u5f62\u8f6c\u5316\u4e3a\u79bb\u6563\u5c4f\u5e55\u50cf\u7d20\u70b9\u7684\u8fc7\u7a0b\u3002\u5149\u6805\u5316\u4f1a\u786e\u5b9a\u56fe\u5143\u6240\u8986\u76d6\u7684\u7247\u6bb5\uff0c\u5229\u7528\u9876\u70b9\u5c5e\u6027\u63d2\u503c\u5f97\u5230\u7247\u6bb5\u7684\u5c5e\u6027\u4fe1\u606f\uff0c\u7136\u540e\u9001\u5230\u7247\u6bb5\u7740\u8272\u5668\u8fdb\u884c\u989c\u8272\u8ba1\u7b97\uff0c\u6211\u4eec\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u5230\u7247\u6bb5\u662f\u50cf\u7d20\u7684\u5019\u9009\u8005\uff0c\u53ea\u6709\u901a\u8fc7\u540e\u7eed\u7684\u6d4b\u8bd5\uff0c\u7247\u6bb5\u624d\u4f1a\u6210\u4e3a\u6700\u7ec8\u663e\u793a\u7684\u50cf\u7d20\u70b9\u3002</li> <li> <ul> <li>Early-Z \uff1a\u4e00\u79cd\u63d0\u524d\u6df1\u5ea6\u6d4b\u8bd5\u7684\u6280\u672f\uff0c\u76ee\u7684\u662f\u51cf\u5c11\u8fdb\u5165\u7247\u6bb5\u7740\u8272\u9636\u6bb5\u7684\u7247\u6bb5\uff0c\u4f18\u5316\u6027\u80fd\u3002\u4f46\u9700\u8981\u6ce8\u610f\uff0cEarly-Z\u6280\u672f\u4e0eAlpha\u6d4b\u8bd5\u4f1a\u51fa\u73b0\u51b2\u7a81\uff0c\u5bfc\u81f4\u900f\u660e\u7269\u4f53\u540e\u7684\u7269\u4f53\u65e0\u6cd5\u88ab\u6b63\u786e\u6e32\u67d3\u3002</li> </ul> </li> </ul>"}, {"location": "zone/job/offer_harvester/05_knowledge/#7", "title": "7. \u7247\u6bb5\u7740\u8272\u5668", "text": "<ul> <li>\u7247\u6bb5\u7740\u8272\u5668\u7528\u6765\u51b3\u5b9a\u5c4f\u5e55\u4e0a\u50cf\u7d20\u7684\u6700\u7ec8\u989c\u8272\u3002\u5728\u8fd9\u4e2a\u9636\u6bb5\u4f1a\u8fdb\u884c\u7eb9\u7406\u6620\u5c04\u3001\u5149\u7167\u8ba1\u7b97\u4ee5\u53ca\u9634\u5f71\u5904\u7406\uff0c\u662f\u6e32\u67d3\u7ba1\u7ebf\u9ad8\u7ea7\u6548\u679c\u4ea7\u751f\u7684\u5730\u65b9\u3002</li> </ul>"}, {"location": "zone/job/offer_harvester/05_knowledge/#8", "title": "8. \u6d4b\u8bd5\u6df7\u5408", "text": "<ul> <li>\u88c1\u526a\u6d4b\u8bd5 \uff1a\u7a0b\u5e8f\u5458\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u88c1\u526a\u6846\uff0c\u53ea\u6709\u5728\u88c1\u526a\u6846\u5185\u7684\u7247\u5143\u4f1a\u88ab\u7ed8\u5236\uff0c\u5e38\u5728\u89c6\u53e3\u6bd4\u5c4f\u5e55\u5c0f\u65f6\u88ab\u4f7f\u7528\u3002</li> <li>Alpha\u6d4b\u8bd5 \uff1a\u6839\u636e\u7269\u4f53\u7684\u900f\u660e\u5ea6\u5224\u65ad\u662f\u5426\u6e32\u67d3\u3002\u7a0b\u5e8f\u5458\u53ef\u4ee5\u8bbe\u7f6e\u7684\u4e0d\u900f\u660e\u5ea6\u9608\u503c\uff0c\u53ea\u6709\u4e0d\u900f\u660e\u5ea6\u8d85\u8fc7\u9608\u503c\u7684\u7247\u5143\u4f1a\u88ab\u7ed8\u5236\uff0c\u53ef\u652f\u6301\u5168\u900f\u660e\u7269\u4f53\u7684\u5254\u9664\uff08\u8be6\u60c5\uff09\u3002</li> <li>\u6a21\u677f\u6d4b\u8bd5 \uff1a\u6839\u636e\u7269\u4f53\u7684\u4f4d\u7f6e\u8303\u56f4\u5224\u65ad\u662f\u5426\u6e32\u67d3\u3002\u7a0b\u5e8f\u5458\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u6a21\u677f\uff0c\u53ea\u6709\u4f4d\u4e8e\u8fd9\u4e2a\u6a21\u677f\u4e2d\u7684\u56fe\u5143\u7247\u6bb5\uff0c\u624d\u4f1a\u88ab\u6e32\u67d3\u51fa\u6765\u3002</li> <li>\u6df1\u5ea6\u6d4b\u8bd5 \uff1a\u6839\u636e\u7269\u4f53\u7684\u6df1\u5ea6\u5224\u65ad\u662f\u5426\u6e32\u67d3\u3002\u56fe\u5f62\u7ba1\u7ebf\u4f1a\u5148\u5bf9\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u7684\u50cf\u7d20\u5b58\u50a8\u4e00\u4e2a\u6df1\u5ea6\u503c\uff0c\u79f0\u4e3a\u6df1\u5ea6\u7f13\u51b2\uff08z-buffer\uff09\uff0c\u4ee3\u8868\u4e86\u8be5\u50cf\u7d20\u70b9\u57283D\u4e16\u754c\u4e2d\u79bb\u76f8\u673a\u6700\u8fd1\u7269\u4f53\u7684\u6df1\u5ea6\u503c\u3002\u4e8e\u662f\u5728\u8ba1\u7b97\u6bcf\u4e00\u4e2a\u7269\u4f53\u7684\u50cf\u7d20\u503c\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u5c06\u5b83\u7684\u6df1\u5ea6\u503c\u548c\u7f13\u51b2\u5668\u5f53\u4e2d\u7684\u6df1\u5ea6\u503c\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u8fd9\u4e2a\u6df1\u5ea6\u503c\u5c0f\u4e8e\u7f13\u51b2\u5668\u4e2d\u7684\u6df1\u5ea6\u503c\uff0c\u5c31\u66f4\u65b0\u6df1\u5ea6\u7f13\u51b2\u548c\u989c\u8272\u7f13\u51b2\u7684\u503c\uff0c\u5426\u5219\u5c31\u4e22\u5f03\u3002</li> <li>Alpha\u6df7\u5408 \uff1aAlpha\u6df7\u5408\u53ef\u4ee5\u6839\u636e\u7247\u6bb5\u7684alpha\u503c\u8fdb\u884c\u6df7\u5408\uff0c\u7528\u6765\u4ea7\u751f\u534a\u900f\u660e\u7684\u6548\u679c\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u534a\u900f\u660e\u7269\u4f53\u7684\u7ed8\u5236\u9700\u8981\u9075\u5faa\u753b\u5bb6\u7b97\u6cd5(painter Algorithm)\u7531\u8fdc\u53ca\u8fd1\u8fdb\u884c\u7ed8\u5236\uff0c\u56e0\u4e3a\u534a\u900f\u660e\u7684\u6df7\u5408\u8ddf\u7269\u4f53\u7684\u987a\u5e8f\u6709\u4e25\u683c\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u4e00\u822c\u4f1a\u4f7f\u7528\u987a\u5e8f\u65e0\u5173\u7684\u534a\u900f\u660e\u6e32\u67d3\u6280\u672f(Order-independent transparency\uff0cOIT)\u3002</li> <li>\u6296\u52a8\uff08Dither\uff09 \uff1a\u5728\u8272\u5f69\u6df1\u5ea6\u6709\u9650\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u4f7f\u7528\u968f\u673a\u6570\u6216\u8005\u6dfb\u52a0\u4e00\u4e2a\u7279\u5b9a\u7684\u6296\u52a8\u77e9\u9635\u6765\u51b3\u5b9a\u76f8\u90bb\u50cf\u7d20\u4e4b\u95f4\u7684\u989c\u8272\u8fc7\u6e21\uff0c\u4ee5\u6a21\u62df\u51fa\u66f4\u591a\u7684\u989c\u8272\u6df1\u5ea6\u7684\u65b9\u6cd5\u3002\u6296\u52a8\u5904\u7406\u53ef\u4ee5\u4f7f\u56fe\u50cf\u770b\u8d77\u6765\u66f4\u52a0\u5e73\u6ed1\uff0c\u989c\u8272\u8fc7\u6e21\u66f4\u52a0\u81ea\u7136\uff0c\u63d0\u9ad8\u56fe\u50cf\u7684\u8d28\u91cf\u548c\u7f8e\u89c2\u5ea6\u3002\u6296\u52a8\u5904\u7406\u4e3b\u8981\u5e94\u7528\u4e8e\u989c\u8272\u5206\u91cf\u8f83\u5c11\u6216\u7cfb\u7edf\u663e\u793a\u5668\u663e\u793a\u989c\u8272\u6df1\u5ea6\u6709\u9650\u7684\u60c5\u51b5\u4e0b\u3002</li> </ul>"}, {"location": "zone/job/offer_harvester/05_knowledge/#rtr4", "title": "\u57fa\u672c\u6d41\u7a0b\uff08RTR4\uff09", "text": "<p>\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u5b9e\u9645\u4e0a\u6307\u7684\u662f\u4e00\u5806\u539f\u59cb\u56fe\u5f62\u6570\u636e\u9014\u7ecf\u4e00\u4e2a\u8f93\u9001\u7ba1\u9053\uff0c\u671f\u95f4\u7ecf\u8fc7\u5404\u79cd\u53d8\u5316\u5904\u7406\u6700\u7ec8\u51fa\u73b0\u5728\u5c4f\u5e55\u7684\u8fc7\u7a0b\uff0c\u5728\u6982\u5ff5\u4e0a\u53ef\u4ee5\u5c06\u56fe\u5f62\u6e32\u67d3\u7ba1\u7ebf\u5206\u4e3a\u56db\u4e2a\u9636\u6bb5\uff1a \u5e94\u7528\u7a0b\u5e8f \u9636\u6bb5\u3001 \u51e0\u4f55 \u9636\u6bb5\u3001 \u5149\u6805\u5316 \u9636\u6bb5\u548c \u50cf\u7d20\u5904\u7406 \u9636\u6bb5\u3002</p> <p></p> <ol> <li>\u5e94\u7528\u7a0b\u5e8f\u9636\u6bb5\uff08Application\uff09\uff1a\u901a\u5e38\u662f\u5728CPU\u7aef\u4e8e\u8f6f\u4ef6\u5c42\u9762\u4e0a\u8fdb\u884c\u5904\u7406\uff0c\u5305\u62ec\u78b0\u649e\u68c0\u6d4b\u3001\u52a8\u753b\u7269\u7406\u6a21\u62df\u3001\u7a7a\u95f4\u52a0\u901f\u7b97\u6cd5\u4ee5\u53ca\u89c6\u9525\u4f53\u5254\u9664\u7b49\u4efb\u52a1\uff0c\u6700\u540e\u5c06\u6570\u636e\u9001\u5230\u6e32\u67d3\u7ba1\u7ebf\u4e2d\u3002</li> <li>\u51e0\u4f55\u5904\u7406\u9636\u6bb5\uff08Geometry Processing\uff09\uff1a\u8d1f\u8d23\u5927\u90e8\u5206\u9876\u70b9\u64cd\u4f5c\u548c\u591a\u8fb9\u5f62\u64cd\u4f5c\uff0c\u5c06\u4e09\u7ef4\u7a7a\u95f4\u7684\u6570\u636e\u8f6c\u6362\u4e3a\u4e8c\u7ef4\u7a7a\u95f4\u7684\u6570\u636e\u3002</li> <li>\u5149\u6805\u5316\u9636\u6bb5\uff08Rasterization\uff09\uff1a\u5c06\u56fe\u5143\u79bb\u6563\u5316\u4e3a\u5355\u4e2a\u50cf\u7d20\u3002</li> <li>\u50cf\u7d20\u5904\u7406\u9636\u6bb5\uff08Pixel Processing\uff09\uff1a\u50cf\u7d20\u7684\u7740\u8272\u548c\u6df7\u5408\u3002</li> </ol>"}, {"location": "zone/job/offer_harvester/05_knowledge/#_6", "title": "\u5750\u6807\u53d8\u6362", "text": "<p>\u5728\u6211\u7684\u535a\u5ba2\u4e2d\u6709\u8be6\u7ec6\u7684\u63a8\u5bfc \u300c\u8ba1\u7b97\u673a\u56fe\u5f62\u5b66\u300d\u77e9\u9635\u53d8\u6362\u63a8\u5bfc | Hi~ Call me FUJI! (gitee.io)</p> <p>\u5750\u6807\u53d8\u5316\u8fc7\u7a0b\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <p></p> <p>\u5176\u4e2d\u7279\u522b\u8981\u5f3a\u8c03\u7684\uff0c view\u77e9\u9635 \u548c projection\u77e9\u9635\u7684\u63a8\u5bfc \u90fd\u662f\u9762\u8bd5\u4e2d\u5341\u5206\u5e38\u89c1\u7684\u95ee\u9898\uff0c\u9700\u8981\u638c\u63e1\u3002</p>"}, {"location": "zone/job/offer_harvester/05_knowledge/#-", "title": "\u4e16\u754c\u5750\u6807\u7cfb -&gt; \u76f8\u673a\u5750\u6807\u7cfb", "text": "<ul> <li> <p>\u76f8\u673a\u5750\u6807\u7cfb\u662f\u4ee5\u76f8\u673a\u7684\u5149\u5fc3\u4e3a\u539f\u70b9\uff0c\u4ee5\u76f8\u673a\u7684\u671d\u5411\uff08lookat\uff09\u3001\u5411\u4e0a\u65b9\u5411\uff08up\uff09\u3001\u5411\u53f3\u65b9\u5411\uff08right\uff09\u4e3a\u57fa\u5411\u91cf\u5f62\u6210\u7684\u4e09\u7ef4\u76f4\u89d2\u5750\u6807\u7cfb\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e00\u822c\u5728\u89c4\u5b9a\u5750\u6807\u7cfb\u4e3a\u5de6\u624b\u6216\u53f3\u624b\u7cfb\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u9700\u8981\u77e5\u9053\u4e09\u4e2a\u57fa\u5411\u91cf\u4e2d\u7684\u4e24\u4e2a\u5373\u53ef\u901a\u8fc7\u53c9\u4e58\u5f97\u5230\u7b2c\u4e09\u4e2a\u57fa\u5411\u91cf\u3002</p> </li> <li> <p>\u89c6\u56fe\u77e9\u9635\u63a8\u5bfc\uff1a\u53ef\u4ee5\u5148\u8ba1\u7b97\u5c06\u5149\u5fc3\u5e73\u79fb\u5230\u539f\u70b9\u7684\u5e73\u79fb\u77e9\u9635 \\(T_{view}\\)\uff0c\u518d\u8ba1\u7b97\u65cb\u8f6c\u4e09\u4e2a\u57fa\u5411\u91cf\u5230\u4e0e\u5750\u6807\u8f74\u5bf9\u5176\u7684\u65cb\u8f6c\u77e9\u9635 \\(R_{view}\\)\uff0c\u4e24\u8005\u76f8\u4e58\u53ef\u5f97\u89c6\u56fe\u77e9\u9635\u3002</p> </li> </ul> \\[ M_{view}=R_{view}\\cdot T_{view}=\\left[\\begin{array}{cccc}   x_{\\hat{g} \\times \\hat{t}} &amp; y_{\\hat{g} \\times \\hat{t}}  &amp; z_{\\hat{g} \\times \\hat{t}}  &amp; 0 \\\\    x_{\\hat{t}}  &amp; y_{\\hat{t}} &amp;  z_{\\hat{t}} &amp; 0 \\\\   x_{-\\hat{g} }&amp; y_{-\\hat{g} } &amp; z_{-\\hat{g} } &amp; 0 \\\\   0 &amp; 0 &amp; 0 &amp; 1   \\end{array}\\right] \\cdot \\left[\\begin{array}{cccc}   1 &amp; 0 &amp; 0 &amp; -x_{e} \\\\   0 &amp; 1 &amp; 0 &amp; -y_{e} \\\\   0 &amp; 0 &amp; 1 &amp; -z_{e} \\\\   0 &amp; 0 &amp; 0 &amp; 1   \\end{array}\\right] \\] <p>\u6ce8\u610f\uff0c\u6b64\u4f8b\u5c06\u671d\u5411\u8f6c\u6362\u5230z\u8f74\u8d1f\u65b9\u5411\uff0c\u5411\u4e0a\u65b9\u5411\u8f6c\u6362\u5230y\u8f74\u6b63\u65b9\u5411\uff0c\u4e24\u8005\u53c9\u79ef\u8f6c\u6362\u5230x\u8f74\u6b63\u65b9\u5411\u3002</p>"}, {"location": "zone/job/offer_harvester/05_knowledge/#-_1", "title": "\u76f8\u673a\u5750\u6807\u7cfb -&gt; \u88c1\u526a\u5750\u6807\u7cfb", "text": "<ul> <li> <p>\u89c6\u9525\u4f53\u662f\u6307\u76f8\u673a\u7684\u53ef\u89c6\u533a\u57df\uff0c\u88c1\u526a\u5750\u6807\u7cfb\u662f\u5c06\u76f8\u673a\u5750\u6807\u7cfb\u7684\u89c6\u9525\u4f53\u53d8\u6362\u5230\u6807\u51c6\u7acb\u65b9\u4f53[-1,1]\\(^3\\)\u540e\u5bf9\u5e94\u7684\u5750\u6807\u7cfb\u3002</p> </li> <li> <p>\u6295\u5f71\u77e9\u9635\u63a8\u5bfc\uff1a\u6b64\u5904\u7565\uff0c\u8be6\u60c5\u89c1\u6211\u7684\u535a\u5ba2\u3002</p> </li> </ul> \\[ M_{persp}=\\left[\\begin{array}{cccc}   \\frac{-1}{aspect\\cdot \\tan{\\frac{fovY}{2}}} &amp; 0 &amp; 0 &amp; 0 \\\\   0 &amp; \\frac{-1}{\\tan{\\frac{fovY}{2}}} &amp; 0 &amp; 0 \\\\   0 &amp; 0 &amp; \\frac{-(near+far)}{far-near} &amp; \\frac{-2\\cdot near\\cdot far}{far-near} \\\\   0 &amp; 0 &amp; 1 &amp; 0   \\end{array}\\right] \\]"}, {"location": "zone/job/offer_harvester/05_knowledge/#_7", "title": "\u7eb9\u7406\u6620\u5c04", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#_8", "title": "\u5207\u7ebf\u7a7a\u95f4", "text": "<p>\u53c2\u8003\u535a\u5ba2\uff1a\u5207\u7ebf\u7a7a\u95f4\uff08Tangent Space\uff09\u4e0e\u6cd5\u7ebf\u6620\u5c04\uff08Normal Mapping\uff09\u3002</p> <p>\u57283D\u4e16\u754c\u4e2d\u5b9a\u4e86\u5982\u6b64\u591a\u7684\u5750\u6807\u7cfb\uff0c\u6bcf\u4e2a\u5750\u6807\u7cfb\u5f53\u7136\u90fd\u6709\u5b83\u7684\u7528\u9014\u3002\u6bd4\u5982\u5c40\u90e8\u7a7a\u95f4\uff0c\u6216\u8005\u53eb\u6a21\u578b\u7a7a\u95f4\uff0c\u5b83\u7684\u76ee\u7684\u5c31\u662f\u65b9\u4fbf\u6211\u4eec\u5bf93D\u6a21\u578b\u8fdb\u884c\u5efa\u6a21\u3002\u5728\u8fd9\u4e2a\u7a7a\u95f4\u4e2d\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u8003\u8651\u8be5\u6a21\u578b\u5728\u573a\u666f\u4e2d\u53ef\u80fd\u51fa\u73b0\u7684\u4f4d\u7f6e\u3001\u671d\u5411\u7b49\u4f17\u591a\u7ec6\u8282\uff0c\u800c\u4e13\u6ce8\u4e8e\u6a21\u578b\u672c\u8eab\u3002\u5728\u4e16\u754c\u7a7a\u95f4\u4e2d\uff0c\u6211\u4eec\u5173\u5fc3\u7684\u95ee\u9898\u662f\u573a\u666f\u4e2d\u5404\u4e2a\u7269\u4f53\u7684\u4f4d\u7f6e\u3001\u671d\u5411\uff0c\u5373\u5982\u4f55\u6784\u5efa\u573a\u666f\uff0c\u800c\u4e0d\u5fc5\u5173\u6ce8\u6444\u50cf\u673a\u7684\u89c2\u5bdf\u4f4d\u7f6e\u53ca\u5176\u671d\u5411\u3002\u53ef\u89c1\uff0c\u4e00\u4e2a\u5750\u6807\u7cfb\u7684\u6839\u672c\u7528\u9014\uff0c\u5373\u8ba9\u6211\u4eec\u5728\u5904\u7406\u4e0d\u540c\u7684\u95ee\u9898\u65f6\uff0c\u80fd\u591f\u4ee5\u5408\u9002\u7684\u53c2\u7167\u7cfb\uff0c\u629b\u5f00\u4e0d\u76f8\u5173\u7684\u56e0\u7d20\uff0c\u4ece\u800c\u51cf\u5c0f\u95ee\u9898\u7684\u590d\u6742\u5ea6\u3002</p> <p>\u76f4\u89c2\u5730\u8bb2\uff0c\u6a21\u578b\u9876\u70b9\u4e2d\u7684\u7eb9\u7406\u5750\u6807\uff0c\u5c31\u5b9a\u4e49\u4e8e\u5207\u7ebf\u7a7a\u95f4\u3002\u666e\u901a2\u7ef4\u7eb9\u7406\u5750\u6807\u5305\u542bU\u3001V\u4e24\u9879\uff0c\u5176\u4e2dU\u5750\u6807\u589e\u957f\u7684\u65b9\u5411\uff0c \u5373\u5207\u7ebf\u7a7a\u95f4\u4e2d\u7684tangent\u8f74\uff0cV\u5750\u6807\u589e\u52a0\u7684\u65b9\u5411\uff0c\u4e3a\u5207\u7ebf\u7a7a\u95f4\u4e2d\u7684bitangent\u8f74\u3002\u6a21\u578b\u4e2d\u4e0d\u540c\u7684\u4e09\u89d2\u5f62\uff0c\u90fd\u6709\u5bf9\u5e94\u7684\u5207\u7ebf\u7a7a\u95f4\uff0c\u5176tangent\u8f74\u548cbitangent\u8f74\u5206\u522b\u4f4d\u4e8e\u4e09\u89d2\u5f62\u6240\u5728\u5e73\u9762\u4e0a\uff0c\u7ed3\u5408\u4e09\u89d2\u5f62\u9762\u5bf9\u5e94\u7684\u6cd5\u7ebf\uff0c\u6211\u4eec\u79f0tangant\u8f74\uff08T\uff09\u3001bitangent\u8f74\uff08B\uff09\u53ca\u6cd5\u7ebf\u8f74\uff08N\uff09\u6240\u7ec4\u6210\u7684\u5750\u6807\u7cfb\uff0c\u5373\u5207\u7ebf\u7a7a\u95f4\uff08TBN\uff09\u3002</p>"}, {"location": "zone/job/offer_harvester/05_knowledge/#_9", "title": "\u76f8\u5173\u95ee\u9898", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#1", "title": "1. \u4e09\u7ef4\u5750\u6807\u5982\u4f55\u53d8\u6210\u5c4f\u5e55\u5750\u6807\uff0c\u6709\u54ea\u4e9b\u53d8\u6362\uff1f", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#2", "title": "2. \u9876\u70b9\u7740\u8272\u5668\u548c\u7247\u5143\u7740\u8272\u5668\u533a\u522b\uff1f\uff08\u5c0f\u7ea2\u4e66\uff09", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#3-alpha", "title": "3. alpha\u6d4b\u8bd5\u662f\u5904\u4e8e\u4ec0\u4e48\u9636\u6bb5\uff0c\u548c\u6df1\u5ea6\u6d4b\u8bd5\u54ea\u4e2a\u5148\uff1f\uff08\u5c0f\u7ea2\u4e66\uff09", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#4", "title": "4. \u4e86\u89e3\u5207\u7ebf\u7a7a\u95f4\u5417\uff1f\u8bb2\u4e00\u4e0b\u6cd5\u7ebf\u8d34\u56fe\u539f\u7406\uff08\u5c0f\u7ea2\u4e66\uff09", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#5_1", "title": "5. \u5728\u6574\u4e2a\u6e32\u67d3\u7ba1\u7ebf\u5f53\u4e2d\u4e00\u5171\u8fdb\u884c\u8fc7\u51e0\u6b21\u88c1\u526a\uff1f\uff08\u5c0f\u7ea2\u4e66\uff09", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#_10", "title": "\u5149\u7167\u6a21\u578b", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#_11", "title": "\u6570\u5b66\u77e5\u8bc6", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#_12", "title": "\u76f8\u5173\u95ee\u9898", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#1_1", "title": "1. \u7ebf\u6027\u4ee3\u6570\u70b9\u4e58\u53c9\u4e58\uff08\u5c0f\u7ea2\u4e66\uff09", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#2_1", "title": "2. \u600e\u4e48\u5224\u65ad\u70b9\u5728\u4e09\u89d2\u5f62\u5185\uff1f\uff08\u5c0f\u7ea2\u4e66\uff09", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#_13", "title": "\u5b9e\u8df5\u77e5\u8bc6", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#_14", "title": "\u76f8\u5173\u95ee\u9898", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#1-shader", "title": "1. \u5199\u4e00\u4e2a\u6a21\u7cca\u7684shader\uff08\u5c0f\u7ea2\u4e66\uff09", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#2_2", "title": "2. \u6c34\u6ce2\u7eb9\u5728\u54ea\u91cc\u5b9e\u73b0\uff1f\uff08\u5c0f\u7ea2\u4e66\uff09", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#3-shader", "title": "3. \u81ea\u5df1\u5b9e\u73b0\u8fc7\u4ec0\u4e48shader\u6548\u679c\uff1f\uff08\u5c0f\u7ea2\u4e66\uff09", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#c", "title": "C++\u4e0e\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#_15", "title": "\u5185\u5b58\u6a21\u578b", "text": "<p>C++ \u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u4e5f\u4f1a\u6309\u7167\u4e0d\u540c\u7684\u529f\u80fd\u5212\u5206\u4e0d\u540c\u7684\u6bb5\uff0cC++\u7a0b\u5e8f\u4f7f\u7528\u7684\u5185\u5b58\u5206\u533a\u4e00\u822c\u5305\u62ec\uff1a\u6808\u3001\u5806\u3001\u5168\u5c40/\u9759\u6001\u5b58\u50a8\u533a\u3001\u5e38\u91cf\u5b58\u50a8\u533a\u3001\u4ee3\u7801\u533a\u3002</p> <ul> <li> <p>\u6808 \uff1a\u76ee\u524d\u7edd\u5927\u90e8\u5206 CPU \u4f53\u7cfb\u90fd\u662f\u57fa\u4e8e\u6808\u6765\u8fd0\u884c\u7a0b\u5e8f\uff0c\u6808\u4e2d\u4e3b\u8981\u5b58\u653e\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u3001\u51fd\u6570\u53c2\u6570\u3001\u8fd4\u56de\u5730\u5740\u7b49\uff0c\u6808\u7a7a\u95f4\u4e00\u822c\u7531\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u9ed8\u8ba4\u5206\u914d\u6216\u8005\u7a0b\u5e8f\u6307\u5b9a\u5206\u914d\uff0c\u6808\u7a7a\u95f4\u5728\u8fdb\u7a0b\u751f\u5b58\u5468\u671f\u4e00\u76f4\u90fd\u5b58\u5728\uff0c\u5f53\u8fdb\u7a0b\u9000\u51fa\u65f6\uff0c\u64cd\u4f5c\u7cfb\u7edf\u624d\u4f1a\u5bf9\u6808\u7a7a\u95f4\u8fdb\u884c\u56de\u6536\u3002</p> </li> <li> <p>\u5806 \uff1a\u52a8\u6001\u7533\u8bf7\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5c31\u662f\u7531 malloc \u51fd\u6570\u6216\u8005 new \u51fd\u6570\u5206\u914d\u7684\u5185\u5b58\u5757\uff0c\u7531\u7a0b\u5e8f\u63a7\u5236\u5b83\u7684\u5206\u914d\u548c\u91ca\u653e\uff0c\u53ef\u4ee5\u5728\u7a0b\u5e8f\u8fd0\u884c\u5468\u671f\u5185\u968f\u65f6\u8fdb\u884c\u7533\u8bf7\u548c\u91ca\u653e\uff0c\u5982\u679c\u8fdb\u7a0b\u7ed3\u675f\u540e\u8fd8\u6ca1\u6709\u91ca\u653e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u56de\u6536\u3002</p> </li> <li> <p>\u5168\u5c40\u533a/\u9759\u6001\u5b58\u50a8\u533a \uff1a\u5b58\u653e\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\uff0c\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u675f\u64cd\u4f5c\u7cfb\u7edf\u81ea\u52a8\u91ca\u653e\u3002</p> </li> <li> <p>\u5e38\u91cf\u5b58\u50a8\u533a \uff1a\u5b58\u653e\u7684\u662f\u5e38\u91cf\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539\uff0c\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u675f\u81ea\u52a8\u91ca\u653e\u3002</p> </li> <li> <p>\u4ee3\u7801\u533a \uff1a\u5b58\u653e\u4ee3\u7801\uff0c\u4e0d\u5141\u8bb8\u4fee\u6539\uff0c\u4f46\u53ef\u4ee5\u6267\u884c\u3002\u7f16\u8bd1\u540e\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5b58\u653e\u5728\u8fd9\u91cc\u3002</p> </li> </ul>"}, {"location": "zone/job/offer_harvester/05_knowledge/#c-11", "title": "C++ 11", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#_16", "title": "\u667a\u80fd\u6307\u9488", "text": "<p>\u667a\u80fd\u6307\u9488\u4e3b\u8981\u7528\u4e8e\u89e3\u51b3\u5185\u5b58\u6cc4\u9732\u7684\u95ee\u9898\uff0c\u5b83\u53ef\u4ee5\u81ea\u52a8\u5730\u91ca\u653e\u5185\u5b58\u7a7a\u95f4\u3002\u56e0\u4e3a\u5b83\u672c\u8eab\u662f\u4e00\u4e2a\u7c7b\uff0c\u5f53\u51fd\u6570\u7ed3\u675f\u7684\u65f6\u5019\u4f1a\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u5e76\u7531\u6790\u6784\u51fd\u6570\u91ca\u653e\u5185\u5b58\u7a7a\u95f4\u3002\u667a\u80fd\u6307\u9488\u5206\u4e3a\u5171\u4eab\u6307\u9488(shared_ptr), \u72ec\u5360\u6307\u9488(unique_ptr)\u548c\u5f31\u6307\u9488(weak_ptr)\uff1a</p> <ul> <li> <p>\u5171\u4eab\u6307\u9488 \uff08shared_ptr\uff09\uff1a\u8d44\u6e90\u53ef\u4ee5\u88ab\u591a\u4e2a\u6307\u9488\u5171\u4eab\uff0c\u4f7f\u7528\u8ba1\u6570\u673a\u5236\u8868\u660e\u8d44\u6e90\u88ab\u51e0\u4e2a\u6307\u9488\u5171\u4eab\u3002\u901a\u8fc7 use_count() \u67e5\u770b\u8d44\u6e90\u7684\u6240\u6709\u8005\u7684\u4e2a\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7 unique_ptr\u3001weak_ptr \u6765\u6784\u9020\uff0c\u8c03\u7528 release() \u91ca\u653e\u8d44\u6e90\u7684\u6240\u6709\u6743\uff0c\u8ba1\u6570\u51cf\u4e00\uff0c\u5f53\u8ba1\u6570\u51cf\u4e3a 0 \u65f6\uff0c\u4f1a\u81ea\u52a8\u91ca\u653e\u5185\u5b58\u7a7a\u95f4\uff0c\u4ece\u800c\u907f\u514d\u4e86\u5185\u5b58\u6cc4\u6f0f\u3002</p> </li> <li> <p>\u72ec\u5360\u6307\u9488 \uff08unique_ptr\uff09\uff1a\u72ec\u4eab\u6240\u6709\u6743\u7684\u667a\u80fd\u6307\u9488\uff0c\u8d44\u6e90\u53ea\u80fd\u88ab\u4e00\u4e2a\u6307\u9488\u5360\u6709\uff0c\u8be5\u6307\u9488\u4e0d\u80fd\u62f7\u8d1d\u6784\u9020\u548c\u8d4b\u503c\u3002\u4f46\u53ef\u4ee5\u8fdb\u884c\u79fb\u52a8\u6784\u9020\u548c\u79fb\u52a8\u8d4b\u503c\u6784\u9020\uff08\u8c03\u7528 move() \u51fd\u6570\uff09\uff0c\u5373\u4e00\u4e2a unique_ptr \u5bf9\u8c61\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a unique_ptr \u5bf9\u8c61\uff0c\u53ef\u4ee5\u901a\u8fc7\u8be5\u65b9\u6cd5\u8fdb\u884c\u8d4b\u503c\u3002</p> </li> <li> <p>\u5f31\u6307\u9488 \uff08weak_ptr\uff09\uff1a\u6307\u5411 shared_ptr \u6307\u5411\u7684\u5bf9\u8c61\uff0c\u80fd\u591f\u89e3\u51b3\u7531shared_ptr\u5e26\u6765\u7684\u5faa\u73af\u5f15\u7528\u95ee\u9898\u3002</p> </li> </ul>"}, {"location": "zone/job/offer_harvester/05_knowledge/#c_1", "title": "C++\u7684\u865a\u51fd\u6570\u673a\u5236", "text": "<p>\u865a\u51fd\u6570\u901a\u8fc7\u865a\u51fd\u6570\u8868\u6765\u5b9e\u73b0\u3002\u865a\u51fd\u6570\u7684\u5730\u5740\u4fdd\u5b58\u5728\u865a\u51fd\u6570\u8868\u4e2d\uff0c\u5728\u7c7b\u7684\u5bf9\u8c61\u6240\u5728\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\uff0c\u4fdd\u5b58\u4e86\u6307\u5411\u865a\u51fd\u6570\u8868\u7684\u6307\u9488\uff08\u79f0\u4e3a\u201c\u865a\u8868\u6307\u9488\u201d\uff09\uff0c\u901a\u8fc7\u865a\u8868\u6307\u9488\u53ef\u4ee5\u627e\u5230\u7c7b\u5bf9\u5e94\u7684\u865a\u51fd\u6570\u8868\u3002\u865a\u51fd\u6570\u8868\u89e3\u51b3\u4e86\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u7684\u7ee7\u627f\u95ee\u9898\u548c\u7c7b\u4e2d\u6210\u5458\u51fd\u6570\u7684\u8986\u76d6\u95ee\u9898\uff0c\u5f53\u7528\u57fa\u7c7b\u7684\u6307\u9488\u6765\u64cd\u4f5c\u4e00\u4e2a\u6d3e\u751f\u7c7b\u7684\u65f6\u5019\uff0c\u8fd9\u5f20\u865a\u51fd\u6570\u8868\u5c31\u6307\u660e\u4e86\u5b9e\u9645\u5e94\u8be5\u8c03\u7528\u7684\u51fd\u6570\u3002</p> <ul> <li>\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u80fd\u4e0d\u80fd\u4e3a\u865a\u51fd\u6570\uff1f - \u6784\u9020\u51fd\u6570\u4e00\u822c\u4e0d\u80fd\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\u3002\u5982\u679c\u6784\u9020\u51fd\u6570\u4e3a\u865a\u51fd\u6570\uff0c\u5219\u7c7b\u5728\u521b\u5efa\u65f6\u9700\u8981\u901a\u8fc7\u865a\u51fd\u6570\u8868\u6307\u9488\u53bb\u627e\u5230\u6784\u9020\u51fd\u6570\uff0c\u4f46\u6ca1\u6709\u6784\u9020\u51fd\u6570\u65e0\u6cd5\u521b\u5efa\u7c7b\u3002</li> <li>\u6790\u6784\u51fd\u6570\u4e00\u822c\u5b9a\u4e49\u4e3a\u865a\u51fd\u6570\u3002\u6790\u6784\u51fd\u6570\u5b9a\u4e49\u6210\u865a\u51fd\u6570\u662f\u4e3a\u4e86\u9632\u6b62\u5185\u5b58\u6cc4\u6f0f\uff0c\u56e0\u4e3a\u5f53\u57fa\u7c7b\u7684\u6307\u9488\u6216\u8005\u5f15\u7528\u6307\u5411\u6216\u7ed1\u5b9a\u5230\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u65f6\uff0c\u5982\u679c\u672a\u5c06\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u5b9a\u4e49\u6210\u865a\u51fd\u6570\uff0c\u4f1a\u8c03\u7528\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u90a3\u4e48\u53ea\u80fd\u5c06\u57fa\u7c7b\u7684\u6210\u5458\u6240\u5360\u7684\u7a7a\u95f4\u91ca\u653e\u6389\uff0c\u6d3e\u751f\u7c7b\u4e2d\u7279\u6709\u7684\u5c31\u4f1a\u65e0\u6cd5\u91ca\u653e\u5185\u5b58\u7a7a\u95f4\u5bfc\u81f4\u5185\u5b58\u6cc4\u6f0f\u3002</li> <li> <p>\u865a\u51fd\u6570\u8868\u5b58\u653e\u5728\u54ea\u4e2a\u5185\u5b58\u533a\uff1f - \u865a\u51fd\u6570\u8868\u4f4d\u4e8e\u53ea\u8bfb\u6570\u636e\u6bb5\uff08.rodata\uff09\uff0c\u5373C++\u5185\u5b58\u6a21\u578b\u4e2d\u7684\u5e38\u91cf\u533a\uff1b\u800c\u865a\u51fd\u6570\u5219\u4f4d\u4e8e\u4ee3\u7801\u6bb5\uff08.text\uff09\uff0c\u4e5f\u5c31\u662f\u4ee3\u7801\u533a\u3002</p> </li> <li> <p>struct\uff08int char\uff09\u5927\u5c0f\uff0c\u52a0\u4e00\u4e2a\u9759\u6001\u53d8\u91cf\u4e4b\u540e\u5462\uff1f\u52a0\u4e00\u4e2a\u865a\u51fd\u6570\u4e4b\u540e\u5462\uff1f - 8\u5b57\u8282\uff08\u5185\u5b58\u5bf9\u9f50\uff09\uff0c\u8fd8\u662f8\u5b57\u8282\uff08\u9759\u6001\u53d8\u91cf\u5728\u5168\u5c40/\u9759\u6001\u533a\uff09\uff0c12\u5b57\u8282\uff08\u591a\u4e86\u4e00\u4e2a\u865a\u51fd\u6570\u8868\u6307\u9488\uff09\u3002</p> </li> <li>\u521b\u5efa10\u4e2a\u5b9e\u4f8b\u6709\u51e0\u4e2a\u865a\u51fd\u6570\u8868\uff1f - 1\u4e2a\uff0c\u865a\u51fd\u6570\u8868\u6570\u91cf\u4e0e\u5b9e\u4f8b\u7684\u5bf9\u8c61\u6570\u91cf\u65e0\u5173\u3002</li> <li>\u54ea\u4e9b\u4e0d\u80fd\u662f\u865a\u51fd\u6570\uff1f - \u6784\u9020\u3001\u5185\u8054\u3001\u9759\u6001\u6210\u5458\u3001lamda\u51fd\u6570</li> </ul>"}, {"location": "zone/job/offer_harvester/05_knowledge/#_17", "title": "\u76f8\u5173\u95ee\u9898", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#1-c11", "title": "1. C++11 \u65b0\u7279\u6027", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#2_3", "title": "2. \u4ecb\u7ecd\u4e00\u4e0b\u667a\u80fd\u6307\u9488\uff08\u5c0f\u7ea2\u4e66\uff09", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#3_1", "title": "3. \u5185\u5b58\u7a7a\u95f4/\u5c40\u90e8\u53d8\u91cf\uff08\u5c0f\u7ea2\u4e66\uff09", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#4_1", "title": "4. \u591a\u6001\uff08\u5c0f\u7ea2\u4e66\uff09", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#5_2", "title": "5. \u865a\u51fd\u6570 (\u600e\u4e48\u5b9e\u73b0\u3001\u865a\u51fd\u6570\u8868\u5b58\u5728\u54ea\u91cc)\uff08\u5c0f\u7ea2\u4e66\uff09", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#6-stl-array-vector", "title": "6. STL\u4e2d array \u548c vector \u533a\u522b\uff08\u5c0f\u7ea2\u4e66\uff09", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#_18", "title": "\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#_19", "title": "\u5b9e\u73b0\u5355\u94fe\u8868\u7684\u7ffb\u8f6c\uff08\u5c0f\u7ea2\u4e66\uff09", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#bst-98", "title": "\u9a8c\u8bc1BST \u529b\u626398\uff08\u5c0f\u7ea2\u4e66\uff09", "text": ""}, {"location": "zone/job/offer_harvester/05_knowledge/#_20", "title": "\u77e9\u9635\u76f8\u4e58\uff08\u5c0f\u7ea2\u4e66\uff09", "text": "<p>\u7a0b\u5e8f\u6548\u7387\u95ee\u9898\uff1f\u4e86\u89e3\u5185\u5b58\u8fde\u7eed\u5417\uff1f\u4f60\u5199\u7684\u4e09\u4e2a\u5faa\u73af\u600e\u4e48\u6539\u6210\u4e24\u4e2a\u5faa\u73af\uff1f</p>"}, {"location": "zone/job/time_table/202309/", "title": "\u65f6\u95f4\u89c4\u5212", "text": ""}, {"location": "zone/job/time_table/202309/#827-930", "title": "8.27 - 9.30", "text": ""}, {"location": "zone/job/time_table/202309/#_2", "title": "\u627e\u5de5\u4f5c", "text": "<ol> <li>\u51c6\u5907 \uff1ac++\u3001unity\u9879\u76ee\u3001learnopengl\u3001\u56fe\u5f62\u5b66\u9762\u7ecf\u3001\u64cd\u4f5c\u7cfb\u7edf\u3001 \u9879\u76ee\u7528\u5230\u7684\u6280\u672f \u3001\u9762\u5230\u7684\u516c\u53f8\u7684\u9762\u7ecf</li> <li>\u5237\u9898 \uff1a\u56fe\u5f62\u5b66\u63a8\u5bfc\u3001leetcode</li> <li>\u76ee\u6807\u9762\u8bd5\u573a\u6b21 \uff1a18\u573a\u7b14\u8bd5\uff0c10\u5bb6\u521d\u9762</li> </ol>"}, {"location": "zone/job/time_table/202309/#_3", "title": "\u8bba\u6587", "text": "<p>\u65e9\u70b9\u52a8\u7b14\u5199\uff01\uff01\uff01\uff01\uff08 \u521d\u5fc3\uff1a \u628a\u8bba\u6587\u5199\u5b8c\u5c31\u884c\uff09</p> <p>00_00_todolist.md </p>"}, {"location": "zone/job/time_table/202309/#_4", "title": "\u6bcf\u65e5\u8ba1\u5212", "text": ""}, {"location": "zone/job/time_table/202309/#827-902", "title": "8.27 - 9.02", "text": ""}, {"location": "zone/job/time_table/202309/#_5", "title": "\u4e3b\u8981\u4efb\u52a1\uff1a", "text": "<ol> <li>\u6846\u67b6 \uff1a\u628a\u8bba\u6587\u5206\u5de5\u3001\u6846\u67b6\u3001TODO\u4e0e xsb \u786e\u8ba4\uff0c\u5f62\u6210\u65f6\u95f4\u8868\uff1b\uff081h\uff09</li> <li>\u5b9e\u9a8c \uff1a\u8bba\u6587\u7f51\u7edc\u5b9e\u9a8c\u3001\u53ef\u89c6\u5316\u3001\u4ea4\u4e92\u7cfb\u7edf\u63a5\u53e3\uff08unity\uff09\uff1b(3.5h)</li> <li>\u5199\u4f5c \uff1a\u8bba\u6587\u628a\u5df2\u7ecf\u786e\u5b9a\u7684\u90e8\u5206\u843d\u5b9e\u4e0b\u6765\uff1b\uff083h\uff09</li> <li>\u627e\u5de5\u4f5c \uff1ac++\u516b\u80a1\u7a81\u51fb\u80cc\u8bf5\uff1b\uff081h\uff09</li> <li>\u96f6\u57fa\u7840\u975e\u79d1\u73ed\u6821\u62db\u56fe\u5f62/\u5f15\u64ce/\u6e38\u620f\u9762\u7ecf\u957f\u6587\u5206\u4eab - \u77e5\u4e4e (zhihu.com)\uff1b</li> <li>\u3010\u6e38\u620f\u5f00\u53d1\u9762\u7ecf\u6c47\u603b\u3011- \u8ba1\u7b97\u673a\u57fa\u7840\u7bc7 - \u77e5\u4e4e (zhihu.com)\uff1b</li> <li>\u505a\u9898 \uff1a\u4e00\u5929\u4e09\u9053\u9898\uff081.5h\uff09</li> <li>CodeTop\u4f01\u4e1a\u9898\u5e93</li> </ol>"}, {"location": "zone/job/time_table/202309/#_6", "title": "\u6bcf\u65e5\u4efb\u52a1\uff1a", "text": "<ol> <li>\u4e0a\u5348\uff1a2.5h\uff089:30-12:00\uff09</li> <li>\u4e0b\u5348\uff1a3.5h\uff082:30-6:00\uff09</li> <li>\u665a\u4e0a\uff1a4h\uff087:30-11:30\uff09</li> </ol> \u5468\u4e00 \u5468\u4e8c \u5468\u4e09 \u5468\u56db \u5468\u4e94 \u5468\u516d 1 \u6846\u67b6 0.5h 2 \u5b9e\u9a8c \u2705 \u5b8c\u6210\u53ef\u5fae\u6e32\u67d3\u5668\u9a8c\u8bc1\u7684\u4ee3\u7801 \u2705 3 \u5199\u4f5c 4 c++ \u2705\u5b66\u4e60c++\u667a\u80fd\u6307\u9488 5 \u505a\u9898 \u2705"}]}